{"version":3,"sources":["webpack:///src/components/ImgEditorInput.vue","webpack:///./src/components/ImgEditorInput.vue?d694","webpack:///./src/components/ImgEditorInput.vue","webpack:///src/components/ImgDataModify.vue","webpack:///./src/components/ImgDataModify.vue?56fb","webpack:///./src/components/ImgDataModify.vue","webpack:///src/views/ImageView.vue","webpack:///./src/views/ImageView.vue?c55a","webpack:///./src/views/ImageView.vue","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js","webpack:///src/components/ImgEditor.vue","webpack:///./src/components/ImgEditor.vue?c1bf","webpack:///./src/components/ImgEditor.vue","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/fabric/dist/fabric.js","webpack:///./node_modules/ieee754/index.js"],"names":["ImgEditorInput","name","data","datas","namek1","namek2","namey1","namey2","cname","dept","rank","zcode","adr1","adr2","tel","fax","email","page","canvas","gridGroup","namek1Box","namek2Box","namey1Box","namey2Box","cnameBox","deptBox","rankBox","zcodeBox","adr1Box","adr2Box","telBox","faxBox","emailBox","pageBox","imageBox","namek1Option","namek2Option","namey1Option","namey2Option","cnameOption","deOption","rankOption","zcodeOption","adrOption","telOption","faxOption","emailOption","pageOption","imageOption","methods","addText","addNamek1","event","this","set","renderAll","sizeModify","addNamek2","addNamey1","addNamey2","addCname","addDept","addRank","addZcode","addAdr","adrBox","addTel","addFax","addEmail","addPage","saveImg","nameObject","getObjects","nameObject2","nameText","text","nameLeft","left","nameTop","top","nameColor","fill","nameWidth","width","scaleX","nameHeight","height","scaleY","nameFontSize","fontSize","nameTa","textAlign","name2Object","name2Object2","name2Text","name2Left","name2Top","name2Color","name2Width","name2Height","name2FontSize","name2Ta","cnameObject","cnameText","cnameLeft","cnameTop","cnameColor","cnameWidth","cnameHeight","cnameFontSize","cnameTa","deptObject","deptText","deptLeft","deptTop","deptColor","deptWidth","deptHeight","deptFontSize","deptTa","rankObject","rankText","rankLeft","rankTop","rankColor","rankWidth","rankHeight","rankFontSize","rankTa","zcodeObject","zcodeText","zcodeLeft","zcodeTop","zcodeColor","zcodeWidth","zcodeHeight","zcodeFontSize","zcodeTa","adrObject","adrText","adrLeft","adrTop","adrColor","adrWidth","adrHeight","adrFontSize","adrTa","telObject","telText","telLeft","telTop","telColor","telWidth","telHeight","telFontSize","telTa","faxObject","faxText","faxLeft","faxTop","faxColor","faxWidth","faxHeight","faxFontSize","faxTa","emailObject","emailText","emailLeft","emailTop","emailColor","emailWidth","emailHeight","emailFontSize","emailTa","pageObject","pageText","pageLeft","pageTop","pageColor","pageWidth","pageHeight","pageFontSize","pageTa","imgObject","console","log","imgPath","_element","src","imgX","imgY","imgScaleX","imgScaleY","$http","post","iNo","nNo","nameX","nameY","nameFont","nameW","nameHt","name2","name2X","name2Y","name2Font","name2W","name2Ht","cnameX","cnameY","cnameFont","cnameW","cnameHt","deptX","deptY","deptFont","deptW","deptHt","rankX","rankY","rankFont","rankW","rankHt","zcodeX","zcodeY","zcodeFont","zcodeW","zcodeHt","adr","adrX","adrY","adrFont","adrW","adrHt","telX","telY","telFont","telW","telHt","faxX","faxY","faxFont","faxW","faxHt","emailX","emailY","emailFont","emailW","emailHt","pageX","pageY","pageFont","pageW","pageHt","then","response","warn","catch","ex","addGrid","index","gridoption","stroke","strokeWidth","strokeDashArray","gridLines","x","push","fabric","Line","y","Group","selectable","evented","addWithUpdate","add","main","$emit","removeGrid","remove","viewText","setData","_this","get","params","res","result","fixedWidth","baseFontSize","parseInt","fontFamily","deptOption","vm","arr","remakeText","Textbox","imgObj","Image","onload","$data","err","largest","__lineWidths","setCanvas","Canvas","fromURL","$imgPath","oImg","setBackgroundImage","bind","objects","object","i","length","indexOf","text1","substring","text2","mounted","on","opt","t1","target","$on","getActiveObject","requestRenderAll","beforeMount","components_ImgEditorInput","render","_vm","_h","$createElement","_c","_self","attrs","fluid","staticClass","sm","for","_v","size","keyup","model","value","callback","$$v","expression","variant","click","staticRenderFns","src_components_ImgEditorInput","__webpack_require__","normalizeComponent","ImgDataModify","objectX","objectY","objectFontSize","watch","moveXObject","moveYObject","resizeTextBox","created","components_ImgDataModify","src_components_ImgDataModify","ImgDataModify_normalizeComponent","ssrContext","ImageView","components","ImgEditorComponets","ImgEditor","radius","views_ImageView","staticStyle","max-width","margin","margin-top","header","border-variant","align","ImageView_Component","ImageView_normalizeComponent","__webpack_exports__","exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","lookup","join","Uint8Array","Array","code","Error","start","end","num","output","global","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","buffer","val","type","fromObject","assertSize","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","n","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","base64Slice","utf8Slice","Math","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","trim","replace","stringtrim","base64clean","dst","components_ImgEditor","id","Component","module","sqrt","atan2","PiBy180","PiBy2","proto","degreesToRadians","originXOffset","originYOffset","clone","toFixed","multipleSpacesRegex","version","document","window","HTMLDocument","Document","implementation","createHTMLDocument","virtualWindow","JSDOM","decodeURIComponent","features","FetchExternalResources","resources","jsdomImplForWrapper","implForWrapper","nodeCanvas","DOMParser","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","targetCanvas","ctx","getContext","translate","scale","sourceY","drawImage","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","rePathCommand","reNonWord","fontPaths","iMatrix","svgNS","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","disableStyleCopyPaste","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","forceGLPutImageData","initFilterBackend","isWebglSupported","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","util","observe","prop","stopObserving","fire","options","listenersForEvent","filter","Observable","off","trigger","Collection","_objects","_onObjectAdded","renderOnAddRemove","insertAt","nonSplicing","splice","somethingRemoved","_onObjectRemoved","forEachObject","context","o","item","isEmpty","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","_set","key","toggle","PI","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","random","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","addEquals","vector","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","transform","xPoints","minX","yPoints","minY","invertTransform","r","number","fractionDigits","parseFloat","parseUnit","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","camelize","charAt","toUpperCase","resolveNamespace","getSvgAttributes","attributes","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onerror","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","enlivenedObjects","numLoadedObjects","numTotalObjects","onLoaded","forEach","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","sourcePath","populateWithProperties","destination","properties","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","copyCanvasElement","newCanvas","toDataURL","canvasEl","format","quality","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","is2x2","qrDecompose","denom","skewX","skewY","translateX","translateY","calcRotateMatrix","theta","calcDimensionsMatrix","scaleMatrix","flipX","flipY","multiply","tan","composeMatrix","matrix","customTransformMatrix","resetObjectTransform","saveObjectTransform","fn","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","parsePreserveAspectRatioAttribute","attribute","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","matrixToSVG","map","NUM_FRACTION_DIGITS","_join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","abs","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","find","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","hasOwnProperty","getWholeChar","next","prev","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","superClassMethod","createClass","initialize","shift","subclasses","couldUseAttachEvent","attachEvent","addListener","element","addEventListener","removeListener","removeEventListener","getPointer","scroll","getScrollLeftTop","_evt","touchProp","changedTouches","getTouchInfo","clientX","clientY","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","test","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","documentElement","body","scrollLeft","scrollTop","host","nodeType","defaultView","getComputedStyle","attr","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","getElementById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","param","addParamToUrl","open","setRequestHeader","send","noop","defaultEasing","d","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","timestamp","time","Date","duration","finish","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","color","posValue","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","clip-path","clip-rule","vector-effect","colorAttributes","normalizeAttr","normalizeValue","parentAttributes","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","skewMatrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","createElementNS","firstChild","recursivelyParseGradientsXlink","gradient","referencedGradient","hasAttribute","children","referenceClone","cloneNode","removeAttribute","parseSVGDocument","parsingOptions","xlink","el2","currentTrans","oldLength","el3","setAttributeNS","nodeValue","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","parseAttributes","parentFontSize","ownAttributes","cssAttrs","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","regex","lastIndex","gradientDef","opacityAttr","createClipPathCallback","container","_newObj","fillRule","clipRule","usingElement","objTransformInv","gTransform","clipPath","calcTransformMatrix","clipPathTag","clipPathOwner","setPositionByOrigin","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","multiplier","colorAlpha","keyValuePairs","__convertPercentUnitsToValues","instance","svgOptions","gradientUnits","propValue","finalValue","keys","offsetX","offsetY","gradientTransform","option","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","withViewport","additionalTransform","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","stops","createLinearGradient","createRadialGradient","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","nonScaling","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","renderAndResetBound","renderAndReset","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","scaleRatio","__initRetinaScaling","lowerCanvasEl","contextContainer","upperCanvasEl","contextTop","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","getElement","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","_renderBackgroundOrOverlay","needsVpt","lineTo","closePath","fillStyle","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","_toObject","__serializeBgOverlay","excludeFromExport","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","row","rowIndex","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","setShadow","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","needsFullRender","_resetShadow","PencilBrush","decimate","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","pointer","_isMainEvent","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","decimatePoints","distance","adjustedDistance","lastPoint","newPoints","CircleBrush","drawDot","addPoint","dot","arc","originalRenderOnAddRemove","circles","circle","Circle","originX","originY","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","fillRect","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","targets","_hoveredTarget","_hoveredTargets","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ey","lastX","lastY","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","changeX","changeY","newScaleX","newScaleY","w","getMinWidth","_scaleObjectEqually","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","bottom","right","retinaScaling","lowerCanvasClass","_copyCanvasStyle","class","touch-action","-ms-touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","active","_discardActiveObject","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","cursorOffset","mr","mb","ml","addEventOptions","passive","checkClick","button","cursorMap","mainTouchId","_bindEvents","addOrRemove","_getEventPrefix","enablePointerEvents","functor","eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","_onTouchEnd","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","_target","hiddenTextarea","focus","currentTransform","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","getPointerId","evt","identifier","pointerId","isPrimary","touches","__onMouseDown","__onMouseUp","_willAddMouseDown","__onMouseMove","_shouldRender","shouldRender","isClick","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","_setCursorFromEvent","__corner","eventType","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","_transformObject","_fireOverOutEvents","fireSyntheticInOutEvents","oldTarget","evtOut","canvasEvtOut","evtIn","canvasEvtIn","_draggedoverTarget","config","inOpt","outOpt","inFires","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","newVp","originalRetina","originalContextTop","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","enlivenedCanvasClip","__setupCanvas","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","strokeUniform","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","hasStroke","hasFill","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_getNonTransformedDimensions","_removeShadow","decl","lineDashOffset","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","scaling","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_applyPatternForTransformedGradient","pCtx","pCanvas","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","utils","origParams","originalGroup","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","prefix","cache","tMatrix","_calcDimensionsTransformMatrix","flipping","dimX","dimY","noSkew","_finalizeDimensions","bbox","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","decoration","getSvgCommons","getSvgTransform","full","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","clipPathMarkup","noStyle","styleInfo","shadowInfo","withShadow","vectorEffect","absoluteClipPath","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","_setPositionDimensions","correctLeftTop","calcDim","_calcDimensions","fromSVG","diffX","diffY","commonRender","fromElementGenerator","_class","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","_getOffsetTransform","digits","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","srcFromAttribute","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","setElement","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","strokeSvg","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","sW","sH","sX","sY","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","canUseUint8Clamped","copyGLTo2D","startTime","drawImageTime","testContext","now","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","renderer","vendor","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","mainParameter","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","createImageData","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","some","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","underline","overline","linethrough","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","missingNewlineOffset","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPosition","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","doubleClickHandler","tripleClickHandler","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","minWidth","dynamicMinWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","linesToKeep","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2"],"mappings":"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","file":"js/0.bbc285ec98f8d6568a07.js","sourcesContent":["<template>\r\n<b-container fluid>\r\n  <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">お名前</label>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"namek1\" v-on:keyup=\"addNamek1\"></b-form-input>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"namek2\" v-on:keyup=\"addNamek2\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n   <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">読み</label>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"namey1\" v-on:keyup=\"addNamey1\"></b-form-input>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n        <b-form-input size=\"sm\" v-model=\"namey2\" v-on:keyup=\"addNamey2\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n   <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">会社名</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"cname\" v-on:keyup=\"addCname\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">所属</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"dept\" v-on:keyup=\"addDept\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n  <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">役職</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"rank\" v-on:keyup=\"addRank\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n  <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">郵便番号</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"zcode\" v-on:keyup=\"addZcode\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n  <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">住所１</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"adr1\" v-on:keyup=\"addAdr\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n  <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">住所２</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"adr2\" v-on:keyup=\"addAdr\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">電話番号</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"tel\" v-on:keyup=\"addTel\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">FAX</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"fax\" v-on:keyup=\"addFax\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">EMAIL</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"email\" v-on:keyup=\"addEmail\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">ホーム</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"page\" v-on:keyup=\"addPage\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-input-group>\r\n      <b-button variant=\"outline-primary\" v-on:click='addGrid'>Add</b-button>\r\n      <b-button variant=\"outline-primary\" v-on:click='removeGrid'>Remove</b-button>\r\n      <b-button variant=\"outline-primary\" v-on:click='saveImg'>저장</b-button>\r\n      <b-button variant=\"outline-primary\" v-on:click='setData'>표시</b-button>\r\n    </b-input-group>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main.js'\r\nimport { fabric } from 'fabric'\r\n\r\nexport default {\r\n  name: 'ImgEditorInput',\r\n  data () {\r\n    return {\r\n      datas: [],\r\n      namek1: '',\r\n      namek2: '',\r\n      namey1: '',\r\n      namey2: '',\r\n      cname: '',\r\n      dept: '',\r\n      rank: '',\r\n      zcode: '',\r\n      adr1: '',\r\n      adr2: '',\r\n      tel: '',\r\n      fax: '',\r\n      email: '',\r\n      page: '',\r\n      canvas: null,\r\n      gridGroup: null,\r\n      namek1Box: null,\r\n      namek2Box: null,\r\n      namey1Box: null,\r\n      namey2Box: null,\r\n      cnameBox: null,\r\n      deptBox: null,\r\n      rankBox: null,\r\n      zcodeBox: null,\r\n      adr1Box: null,\r\n      adr2Box: null,\r\n      telBox: null,\r\n      faxBox: null,\r\n      emailBox: null,\r\n      pageBox: null,\r\n      imageBox: null,\r\n      namek1Option: null,\r\n      namek2Option: null,\r\n      namey1Option: null,\r\n      namey2Option: null,\r\n      cnameOption: null,\r\n      deOption: null,\r\n      rankOption: null,\r\n      zcodeOption: null,\r\n      adrOption: null,\r\n      telOption: null,\r\n      faxOption: null,\r\n      emailOption: null,\r\n      pageOption: null,\r\n      imageOption: null\r\n    }\r\n  },\r\n  methods: {\r\n    addText: function () {\r\n\r\n    },\r\n    addNamek1: function () {\r\n      var event = this.namek1Box\r\n      event.set('text', this.namek1)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addNamek2: function () {\r\n      var event = this.namek2Box\r\n      event.set('text', this.namek2)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addNamey1: function () {\r\n      var event = this.namey1Box\r\n      event.set('text', this.namey1)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addNamey2: function () {\r\n      var event = this.namey2Box\r\n      event.set('text', this.namey2)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addCname: function () {\r\n      var event = this.cnameBox\r\n      event.set('text', this.cname)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addDept: function () {\r\n      var event = this.deptBox\r\n      event.set('text', this.dept)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addRank: function () {\r\n      var event = this.rankBox\r\n      event.set('text', this.rank)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addZcode: function () {\r\n      var event = this.zcodeBox\r\n      event.set('text', this.zcode)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addAdr: function () {\r\n      var event = this.adrBox\r\n      event.set('text', this.adr1 + ' ' + this.adr2)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addTel: function () {\r\n      var event = this.telBox\r\n      event.set('text', this.tel)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addFax: function () {\r\n      var event = this.faxBox\r\n      event.set('text', this.fax)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addEmail: function () {\r\n      var event = this.emailBox\r\n      event.set('text', this.email)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addPage: function () {\r\n      var event = this.pageBox\r\n      event.set('text', this.page)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    saveImg: function () {\r\n      var nameObject = this.getObjects(this.canvas.getObjects('textbox'), 'namek1')\r\n      var nameObject2 = this.getObjects(this.canvas.getObjects('textbox'), 'namek2')\r\n      var nameText = nameObject.text + ' ' + nameObject2.text\r\n      var nameLeft = nameObject.left\r\n      var nameTop = nameObject.top\r\n      var nameColor = nameObject.fill\r\n      var nameWidth = nameObject.width * nameObject.scaleX\r\n      var nameHeight = nameObject.height * nameObject.scaleY\r\n      var nameFontSize = nameObject.fontSize * nameObject.scaleY\r\n      var nameTa = nameObject.textAlign\r\n      var name2Object = this.getObjects(this.canvas.getObjects('textbox'), 'namey1')\r\n      var name2Object2 = this.getObjects(this.canvas.getObjects('textbox'), 'namey2')\r\n      var name2Text = name2Object.text + ' ' + name2Object2.text\r\n      var name2Left = name2Object.left\r\n      var name2Top = name2Object.top\r\n      var name2Color = name2Object.fill\r\n      var name2Width = name2Object.width * name2Object.scaleX\r\n      var name2Height = name2Object.height * name2Object.scaleY\r\n      var name2FontSize = name2Object.fontSize * name2Object.scaleY\r\n      var name2Ta = name2Object.textAlign\r\n      var cnameObject = this.getObjects(this.canvas.getObjects('textbox'), 'cname')\r\n      var cnameText = cnameObject.text\r\n      var cnameLeft = cnameObject.left\r\n      var cnameTop = cnameObject.top\r\n      var cnameColor = cnameObject.fill\r\n      var cnameWidth = cnameObject.width * cnameObject.scaleX\r\n      var cnameHeight = cnameObject.height * cnameObject.scaleY\r\n      var cnameFontSize = cnameObject.fontSize * cnameObject.scaleY\r\n      var cnameTa = cnameObject.textAlign\r\n      var deptObject = this.getObjects(this.canvas.getObjects('textbox'), 'dept')\r\n      var deptText = deptObject.text\r\n      var deptLeft = deptObject.left\r\n      var deptTop = deptObject.top\r\n      var deptColor = deptObject.fill\r\n      var deptWidth = deptObject.width * deptObject.scaleX\r\n      var deptHeight = deptObject.height * deptObject.scaleY\r\n      var deptFontSize = deptObject.fontSize * deptObject.scaleY\r\n      var deptTa = deptObject.textAlign\r\n      var rankObject = this.getObjects(this.canvas.getObjects('textbox'), 'rank')\r\n      var rankText = rankObject.text\r\n      var rankLeft = rankObject.left\r\n      var rankTop = rankObject.top\r\n      var rankColor = rankObject.fill\r\n      var rankWidth = rankObject.width * rankObject.scaleX\r\n      var rankHeight = rankObject.height * rankObject.scaleY\r\n      var rankFontSize = rankObject.fontSize * rankObject.scaleY\r\n      var rankTa = rankObject.textAlign\r\n      var zcodeObject = this.getObjects(this.canvas.getObjects('textbox'), 'zcode')\r\n      var zcodeText = zcodeObject.text\r\n      var zcodeLeft = zcodeObject.left\r\n      var zcodeTop = zcodeObject.top\r\n      var zcodeColor = zcodeObject.fill\r\n      var zcodeWidth = zcodeObject.width * zcodeObject.scaleX\r\n      var zcodeHeight = zcodeObject.height * zcodeObject.scaleY\r\n      var zcodeFontSize = zcodeObject.fontSize * zcodeObject.scaleY\r\n      var zcodeTa = zcodeObject.textAlign\r\n      var adrObject = this.getObjects(this.canvas.getObjects('textbox'), 'adr')\r\n      var adrText = adrObject.text\r\n      var adrLeft = adrObject.left\r\n      var adrTop = adrObject.top\r\n      var adrColor = adrObject.fill\r\n      var adrWidth = adrObject.width * adrObject.scaleX\r\n      var adrHeight = adrObject.height * adrObject.scaleY\r\n      var adrFontSize = adrObject.fontSize * adrObject.scaleY\r\n      var adrTa = adrObject.textAlign\r\n      var telObject = this.getObjects(this.canvas.getObjects('textbox'), 'tel')\r\n      var telText = telObject.text\r\n      var telLeft = telObject.left\r\n      var telTop = telObject.top\r\n      var telColor = telObject.fill\r\n      var telWidth = telObject.width * telObject.scaleX\r\n      var telHeight = telObject.height * telObject.scaleY\r\n      var telFontSize = telObject.fontSize * telObject.scaleY\r\n      var telTa = telObject.textAlign\r\n      var faxObject = this.getObjects(this.canvas.getObjects('textbox'), 'fax')\r\n      var faxText = faxObject.text\r\n      var faxLeft = faxObject.left\r\n      var faxTop = faxObject.top\r\n      var faxColor = faxObject.fill\r\n      var faxWidth = faxObject.width * faxObject.scaleX\r\n      var faxHeight = faxObject.height * faxObject.scaleY\r\n      var faxFontSize = faxObject.fontSize * faxObject.scaleY\r\n      var faxTa = faxObject.textAlign\r\n      var emailObject = this.getObjects(this.canvas.getObjects('textbox'), 'email')\r\n      var emailText = emailObject.text\r\n      var emailLeft = emailObject.left\r\n      var emailTop = emailObject.top\r\n      var emailColor = emailObject.fill\r\n      var emailWidth = emailObject.width * emailObject.scaleX\r\n      var emailHeight = emailObject.height * emailObject.scaleY\r\n      var emailFontSize = emailObject.fontSize * emailObject.scaleY\r\n      var emailTa = emailObject.textAlign\r\n      var pageObject = this.getObjects(this.canvas.getObjects('textbox'), 'page')\r\n      var pageText = pageObject.text\r\n      var pageLeft = pageObject.left\r\n      var pageTop = pageObject.top\r\n      var pageColor = pageObject.fill\r\n      var pageWidth = pageObject.width * pageObject.scaleX\r\n      var pageHeight = pageObject.height * pageObject.scaleY\r\n      var pageFontSize = pageObject.fontSize * pageObject.scaleY\r\n      var pageTa = pageObject.textAlign\r\n      var imgObject = this.getObjects(this.canvas.getObjects('image'), 'img')\r\n      console.log(imgObject)\r\n      var imgPath = imgObject._element.src\r\n      var imgX = imgObject.left\r\n      var imgY = imgObject.top\r\n      var imgScaleX = imgObject.scaleX\r\n      var imgScaleY = imgObject.scaleY\r\n\r\n      this.$http.post('/imgDataInsert',\r\n        { iNo: 1,\r\n          nNo: 2,\r\n          name: nameText,\r\n          nameX: nameLeft,\r\n          nameY: nameTop,\r\n          nameColor: nameColor,\r\n          nameFont: nameFontSize,\r\n          nameW: nameWidth,\r\n          nameTa: nameTa,\r\n          nameHt: nameHeight,\r\n          name2: name2Text,\r\n          name2X: name2Left,\r\n          name2Y: name2Top,\r\n          name2Color: name2Color,\r\n          name2Font: name2FontSize,\r\n          name2W: name2Width,\r\n          name2Ta: name2Ta,\r\n          name2Ht: name2Height,\r\n          cname: cnameText,\r\n          cnameX: cnameLeft,\r\n          cnameY: cnameTop,\r\n          cnameColor: cnameColor,\r\n          cnameFont: cnameFontSize,\r\n          cnameW: cnameWidth,\r\n          cnameTa: cnameTa,\r\n          cnameHt: cnameHeight,\r\n          dept: deptText,\r\n          deptX: deptLeft,\r\n          deptY: deptTop,\r\n          deptColor: deptColor,\r\n          deptFont: deptFontSize,\r\n          deptW: deptWidth,\r\n          deptTa: deptTa,\r\n          deptHt: deptHeight,\r\n          rankText: rankText,\r\n          rankX: rankLeft,\r\n          rankY: rankTop,\r\n          rankColor: rankColor,\r\n          rankFont: rankFontSize,\r\n          rankW: rankWidth,\r\n          rankTa: rankTa,\r\n          rankHt: rankHeight,\r\n          zcode: zcodeText,\r\n          zcodeX: zcodeLeft,\r\n          zcodeY: zcodeTop,\r\n          zcodeColor: zcodeColor,\r\n          zcodeFont: zcodeFontSize,\r\n          zcodeW: zcodeWidth,\r\n          zcodeTa: zcodeTa,\r\n          zcodeHt: zcodeHeight,\r\n          adr: adrText,\r\n          adrX: adrLeft,\r\n          adrY: adrTop,\r\n          adrColor: adrColor,\r\n          adrFont: adrFontSize,\r\n          adrW: adrWidth,\r\n          adrTa: adrTa,\r\n          adrHt: adrHeight,\r\n          tel: telText,\r\n          telX: telLeft,\r\n          telY: telTop,\r\n          telColor: telColor,\r\n          telFont: telFontSize,\r\n          telW: telWidth,\r\n          telTa: telTa,\r\n          telHt: telHeight,\r\n          fax: faxText,\r\n          faxX: faxLeft,\r\n          faxY: faxTop,\r\n          faxColor: faxColor,\r\n          faxFont: faxFontSize,\r\n          faxW: faxWidth,\r\n          faxTa: faxTa,\r\n          faxHt: faxHeight,\r\n          email: emailText,\r\n          emailX: emailLeft,\r\n          emailY: emailTop,\r\n          emailColor: emailColor,\r\n          emailFont: emailFontSize,\r\n          emailW: emailWidth,\r\n          emailTa: emailTa,\r\n          emailHt: emailHeight,\r\n          page: pageText,\r\n          pageX: pageLeft,\r\n          pageY: pageTop,\r\n          pageColor: pageColor,\r\n          pageFont: pageFontSize,\r\n          pageW: pageWidth,\r\n          pageTa: pageTa,\r\n          pageHt: pageHeight,\r\n          imgPath: imgPath,\r\n          imgX: imgX,\r\n          imgY: imgY,\r\n          imgScaleX: imgScaleX,\r\n          imgScaleY: imgScaleY }\r\n      ).then(response => {\r\n        console.warn(response)\r\n      }).catch((ex) => {\r\n        console.warn('ERROR!!!!! : ', ex)\r\n      })\r\n      /*  var image = new Image()\r\n      image = this.canvas.toDataURL('image/jpg')\r\n      var formdata = image.replace(/^data:image\\/(png|jpg);base64,/, '')\r\n      this.$http.post('/imgModify',\r\n        { imgByte: formdata }\r\n      ).then(response => {\r\n        console.warn(response)\r\n      }).catch((ex) => {\r\n        console.warn('ERROR!!!!! : ', ex)\r\n      }) */\r\n    },\r\n    addGrid: function () {\r\n      if (this.gridGroup) return\r\n      var gridoption = {\r\n        stroke: '#D5D5D5',\r\n        strokeWidth: 1,\r\n        strokeDashArray: [1, 1]\r\n      }\r\n      var gridLines = []\r\n      var index\r\n      if (this.canvas.width < this.canvas.height) {\r\n        index = this.canvas.height\r\n      } else {\r\n        index = this.canvas.width\r\n      }\r\n      for (var x = 30; x <= (index); x += 50) {\r\n        gridLines.push(new fabric.Line([x, 0, x, index], gridoption))\r\n      }\r\n      for (var y = 25; y <= (index); y += 50) {\r\n        gridLines.push(new fabric.Line([0, y, index, y], gridoption))\r\n      }\r\n      this.gridGroup = new fabric.Group(gridLines, {\r\n        selectable: false,\r\n        evented: false\r\n      })\r\n      this.gridGroup.addWithUpdate()\r\n      this.canvas.add(this.gridGroup)\r\n      eventBus.$emit('canvas', this.canvas)\r\n    },\r\n    removeGrid: function () {\r\n      this.gridGroup && this.canvas.remove(this.gridGroup)\r\n      this.gridGroup = null\r\n      eventBus.$emit('canvas', this.canvas)\r\n    },\r\n    viewText: function () {\r\n\r\n    },\r\n    setData: function () {\r\n      this.$http.get('/imgData', { params: { nNo: '2' } })\r\n        .then(res => {\r\n          this.datas = res.data.result\r\n          this.namek1Option = {\r\n            width: this.datas.nameW,\r\n            left: this.datas.nameX,\r\n            top: this.datas.nameY,\r\n            fontSize: this.datas.nameFont,\r\n            textAlign: this.datas.nameTa,\r\n            fixedWidth: this.datas.nameW,\r\n            baseFontSize: this.datas.nameFont,\r\n            name: 'namek1',\r\n            fill: this.datas.nameColor\r\n          }\r\n          this.namek2Option = {\r\n            width: this.datas.nameW,\r\n            left: this.datas.nameX + 75,\r\n            top: this.datas.nameY,\r\n            fontSize: this.datas.nameFont,\r\n            textAlign: this.datas.nameTa,\r\n            fixedWidth: this.datas.nameW,\r\n            baseFontSize: this.datas.nameFont,\r\n            name: 'namek2',\r\n            fill: this.datas.nameColor\r\n          }\r\n          this.namey1Option = {\r\n            width: this.datas.name2W,\r\n            left: this.datas.name2X,\r\n            top: this.datas.name2Y,\r\n            fontSize: this.datas.name2Font,\r\n            textAlign: this.datas.name2Ta,\r\n            fixedWidth: this.datas.name2W,\r\n            baseFontSize: this.datas.name2Font,\r\n            name: 'namey1',\r\n            fill: this.datas.name2Color\r\n          }\r\n          this.namey2Option = {\r\n            width: this.datas.name2W,\r\n            left: this.datas.name2X + 75,\r\n            top: this.datas.name2Y,\r\n            fontSize: this.datas.name2Font,\r\n            textAlign: this.datas.name2Ta,\r\n            fixedWidth: this.datas.name2W,\r\n            baseFontSize: this.datas.name2Font,\r\n            name: 'namey2',\r\n            fill: this.datas.name2Color\r\n          }\r\n          this.cnameOption = {\r\n            width: this.datas.cnameW,\r\n            left: this.datas.cnameX,\r\n            top: this.datas.cnameY,\r\n            fontSize: parseInt(this.datas.cnameFont),\r\n            textAlign: this.datas.cnameTa,\r\n            fixedWidth: this.datas.cnameW,\r\n            baseFontSize: parseInt(this.datas.cnameFont),\r\n            name: 'cname',\r\n            fill: this.datas.cnameColor,\r\n            fontFamily: 'Noto Sans JP',\r\n            height: this.datas.cnameHt\r\n          }\r\n\r\n          this.deptOption = {\r\n            width: this.datas.deptW,\r\n            left: this.datas.deptX,\r\n            top: this.datas.deptY,\r\n            fontSize: this.datas.deptFont,\r\n            textAlign: this.datas.deptTa,\r\n            fixedWidth: this.datas.deptW,\r\n            baseFontSize: this.datas.deptFont,\r\n            name: 'dept',\r\n            fill: this.datas.deptColor\r\n          }\r\n          this.rankOption = {\r\n            width: this.datas.rankW,\r\n            left: this.datas.rankX,\r\n            top: this.datas.rankY,\r\n            fontSize: this.datas.rankFont,\r\n            textAlign: this.datas.rankTa,\r\n            fixedWidth: this.datas.rankW,\r\n            baseFontSize: this.datas.rankFont,\r\n            name: 'rank',\r\n            fill: this.datas.rankColor\r\n          }\r\n          this.zcodeOption = {\r\n            width: this.datas.zcodeW,\r\n            left: this.datas.zcodeX,\r\n            top: this.datas.zcodeY,\r\n            fontSize: this.datas.zcodeFont,\r\n            textAlign: this.datas.zcodeTa,\r\n            fixedWidth: this.datas.zcodeW,\r\n            baseFontSize: this.datas.zcodeFont,\r\n            name: 'zcode',\r\n            fill: this.datas.zcodeColor\r\n          }\r\n          this.adrOption = {\r\n            width: this.datas.adrW,\r\n            left: this.datas.adrX,\r\n            top: this.datas.adrY,\r\n            fontSize: this.datas.adrFont,\r\n            textAlign: this.datas.adrTa,\r\n            fixedWidth: this.datas.adrW,\r\n            baseFontSize: this.datas.adrFont,\r\n            name: 'adr',\r\n            fill: this.datas.adrColor\r\n          }\r\n          this.telOption = {\r\n            width: this.datas.telW,\r\n            left: this.datas.telX,\r\n            top: this.datas.telY,\r\n            fontSize: this.datas.telFont,\r\n            textAlign: this.datas.telTa,\r\n            fixedWidth: this.datas.telW,\r\n            baseFontSize: this.datas.telFont,\r\n            name: 'tel',\r\n            fill: this.datas.telColor\r\n          }\r\n          this.faxOption = {\r\n            width: this.datas.faxW,\r\n            left: this.datas.faxX,\r\n            top: this.datas.faxY,\r\n            fontSize: this.datas.faxFont,\r\n            textAlign: this.datas.faxTa,\r\n            fixedWidth: this.datas.faxW,\r\n            baseFontSize: this.datas.faxFont,\r\n            name: 'fax',\r\n            fill: this.datas.faxColor\r\n          }\r\n          this.emailOption = {\r\n            width: this.datas.emailW,\r\n            left: this.datas.emailX,\r\n            top: this.datas.emailY,\r\n            fontSize: this.datas.emailFont,\r\n            textAlign: this.datas.emailTa,\r\n            fixedWidth: this.datas.emailW,\r\n            baseFontSize: this.datas.emailFont,\r\n            name: 'email',\r\n            fill: this.datas.emailColor\r\n          }\r\n          this.pageOption = {\r\n            width: this.datas.pageW,\r\n            left: this.datas.pageX,\r\n            top: this.datas.pageY,\r\n            fontSize: this.datas.pageFont,\r\n            textAlign: this.datas.pageTa,\r\n            fixedWidth: this.datas.pageW,\r\n            baseFontSize: this.datas.pageFont,\r\n            name: 'page',\r\n            fill: this.datas.pageColor\r\n          }\r\n          this.imageOption = {\r\n            left: this.datas.imgX,\r\n            top: this.datas.imgY,\r\n            scaleX: this.datas.imgScaleX,\r\n            scaleY: this.datas.imgScaleY,\r\n            name: 'img'\r\n          }\r\n          var vm = this\r\n          var arr = this.remakeText(this.datas.name)\r\n          this.namek1 = arr['text1']\r\n          this.namek2 = arr['text2']\r\n          arr = this.remakeText(this.datas.name2)\r\n          this.namey1 = arr['text1']\r\n          this.namey2 = arr['text2']\r\n          this.cname = this.datas.cname\r\n          this.dept = this.datas.dept\r\n          this.rank = this.datas.rankText\r\n          this.zcode = this.datas.zcode\r\n          arr = this.remakeText(this.datas.adr)\r\n          this.adr1 = arr['text1']\r\n          this.adr2 = arr['text2']\r\n          this.tel = this.datas.tel\r\n          this.fax = this.datas.fax\r\n          this.email = this.datas.email\r\n          this.page = this.datas.page\r\n\r\n          this.namek1Box = new fabric.Textbox(this.namek1, this.namek1Option)\r\n          this.namek2Box = new fabric.Textbox(this.namek2, this.namek2Option)\r\n          this.namey1Box = new fabric.Textbox(this.namey1, this.namey1Option)\r\n          this.namey2Box = new fabric.Textbox(this.namey2, this.namey2Option)\r\n          this.cnameBox = new fabric.Textbox(this.cname, this.cnameOption)\r\n          this.deptBox = new fabric.Textbox(this.dept, this.deptOption)\r\n          this.rankBox = new fabric.Textbox(this.rank, this.rankOption)\r\n          this.zcodeBox = new fabric.Textbox(this.zcode, this.zcodeOption)\r\n          this.adrBox = new fabric.Textbox(this.datas.adr, this.adrOption)\r\n          this.telBox = new fabric.Textbox(this.tel, this.telOption)\r\n          this.faxBox = new fabric.Textbox(this.fax, this.faxOption)\r\n          this.emailBox = new fabric.Textbox(this.email, this.emailOption)\r\n          this.pageBox = new fabric.Textbox(this.page, this.pageOption)\r\n          var imgObj = new Image()\r\n          imgObj.src = this.datas.imgPath\r\n          imgObj.onload = function () {\r\n            vm.imageBox = new fabric.Image(imgObj, vm.$data.imageOption)\r\n            vm.canvas.add(vm.imageBox)\r\n          }\r\n          this.canvas.add(this.namek1Box)\r\n          this.canvas.add(this.namek2Box)\r\n          this.canvas.add(this.namey1Box)\r\n          this.canvas.add(this.namey2Box)\r\n          this.canvas.add(this.cnameBox)\r\n          this.canvas.add(this.deptBox)\r\n          this.canvas.add(this.rankBox)\r\n          this.canvas.add(this.zcodeBox)\r\n          this.canvas.add(this.adrBox)\r\n          this.canvas.add(this.telBox)\r\n          this.canvas.add(this.faxBox)\r\n          this.canvas.add(this.emailBox)\r\n          this.canvas.add(this.pageBox)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    },\r\n    sizeModify: function (event) {\r\n      var largest = event.__lineWidths[0]\r\n      if (event.width >= largest) {\r\n        if (largest !== 0) {\r\n          event.width = largest\r\n        }\r\n      }\r\n      /* if (event.width >= largest) {\r\n        if (Math.round(event.fontSize) < event.baseFontSize) {\r\n          event.fontSize *= event.width / (largest + 1)\r\n        } else {\r\n          event.fontSize = event.baseFontSize\r\n        }\r\n      }\r\n      if (event.width > event.fixedWidth) {\r\n        event.fontSize *= event.fixedWidth / (event.width + 1)\r\n        event.width = event.fixedWidth\r\n      } */\r\n    },\r\n    setCanvas: function () {\r\n      var canvas = new fabric.Canvas('canvas')\r\n      this.canvas = canvas\r\n\r\n      fabric.Image.fromURL(this.$imgPath + 'smp.png', function (oImg) {\r\n        oImg.set({\r\n          // Set the image size by scale, which is the same size as the canvas\r\n          scaleX: canvas.width / oImg.width,\r\n          scaleY: canvas.height / oImg.height\r\n        })\r\n        // Setting Background\r\n        canvas.setBackgroundImage(oImg, canvas.renderAll.bind(canvas))\r\n        canvas.renderAll()\r\n        eventBus.$emit('canvas', canvas)\r\n      })\r\n    },\r\n    getObjects: function (objects, name) {\r\n      var object = null\r\n      for (var i = 0; i < objects.length; i++) {\r\n        if (objects[i].name && objects[i].name === name) {\r\n          object = objects[i]\r\n          break\r\n        }\r\n      }\r\n      return object\r\n    },\r\n    remakeText: function (text) {\r\n      var index = text.indexOf(' ')\r\n      var text1 = text.substring(0, index)\r\n      var text2 = text.substring(index + 1, text.length)\r\n      var arry = { text1, text2 }\r\n      return arry\r\n    }\r\n  },\r\n  mounted () {\r\n    this.setCanvas()\r\n    /*  this.setData() */\r\n\r\n    var vm = this\r\n    this.canvas.on('text:changed', function (opt) {\r\n      var t1 = opt.target\r\n      var largest = t1.__lineWidths[0]\r\n      if (t1.width >= largest) {\r\n        if (largest !== 0) {\r\n          t1.width = largest\r\n        }\r\n      }\r\n      if (opt.target.name === 'namek1') {\r\n        vm.$data.namek2Box.left = opt.target.width + 70\r\n      }\r\n      if (opt.target.name === 'namey1') {\r\n        vm.$data.namey2Box.left = opt.target.width + 70\r\n      }\r\n      /* if (t1.width >= largest) {\r\n        if (Math.round(t1.fontSize) < t1.baseFontSize) {\r\n          t1.fontSize *= t1.width / (largest)\r\n        } else {\r\n          t1.fontSize = t1.baseFontSize\r\n        }\r\n      }\r\n      if (t1.width > t1.fixedWidth) {\r\n        t1.fontSize *= t1.fixedWidth / (t1.width)\r\n        t1.width = t1.fixedWidth\r\n      } */\r\n      var index = 0\r\n      var text1 = ''\r\n      var text2 = ''\r\n      if (t1.name === 'cname') {\r\n        vm.$data.cname = t1.text\r\n      } else if (t1.name === 'namek1') {\r\n        vm.$data.namek1 = t1.text\r\n      } else if (t1.name === 'namek2') {\r\n        vm.$data.namek2 = t1.text\r\n      } else if (t1.name === 'namey1') {\r\n        vm.$data.namey1 = t1.text\r\n      } else if (t1.name === 'namey2') {\r\n        vm.$data.namey2 = t1.text\r\n      } else if (t1.name === 'dept') {\r\n        vm.$data.dept = t1.text\r\n      } else if (t1.name === 'rank') {\r\n        vm.$data.rank = t1.text\r\n      } else if (t1.name === 'zcode') {\r\n        vm.$data.zcode = t1.text\r\n      } else if (t1.name === 'adr') {\r\n        index = t1.text.indexOf(' ')\r\n        text1 = t1.text.substring(0, index)\r\n        text2 = t1.text.substring(index + 1, t1.text.length)\r\n        vm.$data.adr1 = text1\r\n        vm.$data.adr2 = text2\r\n      } else if (t1.name === 'tel') {\r\n        vm.$data.tel = t1.text\r\n      } else if (t1.name === 'fax') {\r\n        vm.$data.fax = t1.text\r\n      } else if (t1.name === 'email') {\r\n        vm.$data.email = t1.text\r\n      } else if (t1.name === 'page') {\r\n        vm.$data.page = t1.text\r\n      }\r\n    })\r\n    this.canvas.on('mouse:up', function (opt) {\r\n      var t1 = opt.target\r\n      if (t1 != null) {\r\n        console.log(t1)\r\n        eventBus.$emit('data', t1)\r\n      }\r\n    })\r\n    this.canvas.on('selection:cleared', function () {\r\n    })\r\n    eventBus.$on('object', (object) => {\r\n      vm.$data.canvas.getActiveObject(object.name).set({left: parseInt(object.left)})\r\n      vm.$data.canvas.getActiveObject(object.name).set({top: parseInt(object.top)})\r\n      vm.$data.canvas.getActiveObject(object.name).set({fontSize: parseInt(object.fontSize)})\r\n      vm.$data.canvas.getActiveObject(object.name).set({width: parseInt(object.width)})\r\n      vm.$data.canvas.requestRenderAll()\r\n      eventBus.$emit('canvas', vm.$data.canvas)\r\n    })\r\n  },\r\n  beforeMount () {\r\n\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ImgEditorInput.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"お名前\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addNamek1},model:{value:(_vm.namek1),callback:function ($$v) {_vm.namek1=$$v},expression:\"namek1\"}})],1),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addNamek2},model:{value:(_vm.namek2),callback:function ($$v) {_vm.namek2=$$v},expression:\"namek2\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"読み\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addNamey1},model:{value:(_vm.namey1),callback:function ($$v) {_vm.namey1=$$v},expression:\"namey1\"}})],1),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addNamey2},model:{value:(_vm.namey2),callback:function ($$v) {_vm.namey2=$$v},expression:\"namey2\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"会社名\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addCname},model:{value:(_vm.cname),callback:function ($$v) {_vm.cname=$$v},expression:\"cname\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"所属\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addDept},model:{value:(_vm.dept),callback:function ($$v) {_vm.dept=$$v},expression:\"dept\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"役職\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addRank},model:{value:(_vm.rank),callback:function ($$v) {_vm.rank=$$v},expression:\"rank\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"郵便番号\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addZcode},model:{value:(_vm.zcode),callback:function ($$v) {_vm.zcode=$$v},expression:\"zcode\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"住所１\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addAdr},model:{value:(_vm.adr1),callback:function ($$v) {_vm.adr1=$$v},expression:\"adr1\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"住所２\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addAdr},model:{value:(_vm.adr2),callback:function ($$v) {_vm.adr2=$$v},expression:\"adr2\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"電話番号\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addTel},model:{value:(_vm.tel),callback:function ($$v) {_vm.tel=$$v},expression:\"tel\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"FAX\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addFax},model:{value:(_vm.fax),callback:function ($$v) {_vm.fax=$$v},expression:\"fax\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"EMAIL\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addEmail},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"ホーム\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addPage},model:{value:(_vm.page),callback:function ($$v) {_vm.page=$$v},expression:\"page\"}})],1)],1),_vm._v(\" \"),_c('b-input-group',[_c('b-button',{attrs:{\"variant\":\"outline-primary\"},on:{\"click\":_vm.addGrid}},[_vm._v(\"Add\")]),_vm._v(\" \"),_c('b-button',{attrs:{\"variant\":\"outline-primary\"},on:{\"click\":_vm.removeGrid}},[_vm._v(\"Remove\")]),_vm._v(\" \"),_c('b-button',{attrs:{\"variant\":\"outline-primary\"},on:{\"click\":_vm.saveImg}},[_vm._v(\"저장\")]),_vm._v(\" \"),_c('b-button',{attrs:{\"variant\":\"outline-primary\"},on:{\"click\":_vm.setData}},[_vm._v(\"표시\")])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4831c169\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ImgEditorInput.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgEditorInput.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgEditorInput.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4831c169\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ImgEditorInput.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ImgEditorInput.vue\n// module id = null\n// module chunks = ","<template>\r\n  <b-container fluid>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">X</label>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"objectX\" v-on:keyup=\"moveXObject\"> </b-form-input>\r\n    </b-col>\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">Y</label>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"objectY\" v-on:keyup=\"moveYObject\"></b-form-input>\r\n    </b-col>\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">fontsize</label>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"objectFontSize\"  v-on:keyup=\"resizeTextBox\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main.js'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      object: null,\r\n      objectX: 0,\r\n      objectY: 0,\r\n      objectFontSize: 0,\r\n      canvas: null\r\n    }\r\n  },\r\n  watch: {\r\n  },\r\n  methods: {\r\n    moveXObject: function () {\r\n      this.object.left = this.objectX\r\n\r\n      eventBus.$emit('object', this.object)\r\n    },\r\n    moveYObject: function () {\r\n      this.object.top = this.objectY\r\n\r\n      eventBus.$emit('object', this.object)\r\n    },\r\n    resizeTextBox: function () {\r\n      this.object.left = this.objectX\r\n      if (this.objectFontSize === null) {\r\n        this.objectFontSize = 5\r\n      }\r\n      this.object.fontSize = this.objectFontSize\r\n      this.object.width = this.object.__lineWidths[0]\r\n      console.log(this.object.__lineWidths[0])\r\n      eventBus.$emit('object', this.object)\r\n    }\r\n\r\n  },\r\n  mounted () {\r\n\r\n  },\r\n  created () {\r\n    eventBus.$on('data', (object) => {\r\n      this.object = object\r\n      this.objectX = this.object.left\r\n      this.objectY = this.object.top\r\n      this.objectFontSize = this.object.fontSize * this.object.scaleY\r\n      if (object.text == null) {\r\n      }\r\n    })\r\n    eventBus.$on('canvas', (canvas) => {\r\n      this.canvas = canvas\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style>\r\n canvas{\r\n   border: 1px black solid;\r\n }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ImgDataModify.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"X\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.moveXObject},model:{value:(_vm.objectX),callback:function ($$v) {_vm.objectX=$$v},expression:\"objectX\"}})],1),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"Y\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.moveYObject},model:{value:(_vm.objectY),callback:function ($$v) {_vm.objectY=$$v},expression:\"objectY\"}})],1),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"fontsize\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.resizeTextBox},model:{value:(_vm.objectFontSize),callback:function ($$v) {_vm.objectFontSize=$$v},expression:\"objectFontSize\"}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-38e7c011\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ImgDataModify.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-38e7c011\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ImgDataModify.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgDataModify.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgDataModify.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-38e7c011\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ImgDataModify.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ImgDataModify.vue\n// module id = null\n// module chunks = ","<template>\r\n<div>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"6\">\r\n      <b-card\r\n          header=\"명함\"\r\n          style=\"max-width: 40rem; margin: auto; margin-top: 2vh;\"\r\n          class=\"mb-2\"\r\n          border-variant=\"info\"\r\n          align=\"left\">\r\n            <ImgEditorComponets/>\r\n      </b-card>\r\n      <b-card\r\n          header=\"명함정보\"\r\n          style=\"max-width: 40rem; margin: auto; margin-top: 2vh;\"\r\n          class=\"mb-2\"\r\n          border-variant=\"info\"\r\n          align=\"left\">\r\n            <ImgDataModify/>\r\n      </b-card>\r\n     </b-col>\r\n      <b-col sm=\"5\">\r\n        <b-card\r\n          header=\"입력정보\"\r\n          style=\"max-width: 40rem; margin: auto; margin-top: 2vh;\"\r\n          class=\"mb-2\"\r\n          border-variant=\"info\"\r\n          align=\"left\">\r\n            <ImgEditorInput/>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// キャンバス用コンポーネントの読み込み\r\nimport ImgEditorComponets from '../components/ImgEditor'\r\nimport ImgEditorInput from '../components/ImgEditorInput'\r\nimport ImgDataModify from '../components/ImgDataModify'\r\n\r\nexport default {\r\n  components: {\r\n    ImgEditorInput,\r\n    ImgEditorComponets,\r\n    ImgDataModify\r\n  },\r\n  data () {\r\n    return {\r\n      radius: 50\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\n#view{\r\n  margin-left: 70px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/ImageView.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-card',{staticClass:\"mb-2\",staticStyle:{\"max-width\":\"40rem\",\"margin\":\"auto\",\"margin-top\":\"2vh\"},attrs:{\"header\":\"명함\",\"border-variant\":\"info\",\"align\":\"left\"}},[_c('ImgEditorComponets')],1),_vm._v(\" \"),_c('b-card',{staticClass:\"mb-2\",staticStyle:{\"max-width\":\"40rem\",\"margin\":\"auto\",\"margin-top\":\"2vh\"},attrs:{\"header\":\"명함정보\",\"border-variant\":\"info\",\"align\":\"left\"}},[_c('ImgDataModify')],1)],1),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"5\"}},[_c('b-card',{staticClass:\"mb-2\",staticStyle:{\"max-width\":\"40rem\",\"margin\":\"auto\",\"margin-top\":\"2vh\"},attrs:{\"header\":\"입력정보\",\"border-variant\":\"info\",\"align\":\"left\"}},[_c('ImgEditorInput')],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1cd94510\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/ImageView.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1cd94510\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ImageView.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImageView.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImageView.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1cd94510\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ImageView.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1cd94510\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/ImageView.vue\n// module id = null\n// module chunks = ","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = EKta\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = EuP9\n// module chunks = 0","<template>\r\n  <b-container fluid>\r\n    <canvas id=\"canvas\" width=\"660\" height=\"400\"></canvas>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main.js'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      canvas: null\r\n    }\r\n  },\r\n  watch: {\r\n  },\r\n  methods: {\r\n  },\r\n  mounted () {\r\n  },\r\n  created () {\r\n    eventBus.$on('canvas', (canvas) => {\r\n      this.canvas = canvas\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style>\r\n canvas{\r\n   border: 1px black solid;\r\n }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ImgEditor.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('canvas',{attrs:{\"id\":\"canvas\",\"width\":\"660\",\"height\":\"400\"}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7b82e4dc\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ImgEditor.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7b82e4dc\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ImgEditor.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgEditor.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgEditor.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7b82e4dc\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ImgEditor.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ImgEditor.vue\n// module id = null\n// module chunks = ","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = sOR5\n// module chunks = 0","/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '3.6.3' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof (typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document)) {\n    fabric.document = document;\n  }\n  else {\n    fabric.document = document.implementation.createHTMLDocument('');\n  }\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  var jsdom = require('jsdom');\n  var virtualWindow = new jsdom.JSDOM(\n    decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n    {\n      features: {\n        FetchExternalResources: ['img']\n      },\n      resources: 'usable'\n    }).window;\n  fabric.document = virtualWindow.document;\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = virtualWindow;\n  DOMParser = fabric.window.DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill', 'fill-opacity', 'fill-rule',\n  'opacity',\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\n  'stroke-linejoin', 'stroke-miterlimit',\n  'stroke-opacity', 'stroke-width',\n  'id', 'paint-order', 'vector-effect',\n  'instantiated_by_use', 'clip-path'\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\nfabric.rePathCommand = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:[eE][-+]?\\d+)?)/ig;\nfabric.reNonWord = /[ \\n\\.,;!\\?\\-]/;\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.svgNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * When 'true', style information is not retained when copy/pasting text, making\n * pasted text use destination style.\n * Defaults to 'false'.\n * @type Boolean\n * @default\n */\nfabric.disableStyleCopyPaste = false;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.arcToSegmentsCache = { };\n\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.boundsOfCurveCache = { };\n\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\nfabric.cachesBoundsOfCurve = true;\n\n/**\n * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n * this has to be set before instantiating the filtering backend ( before filtering the first image )\n * @type Boolean\n * @default false\n */\nfabric.forceGLPutImageData = false;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return this;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this._objects,\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @param {Array} [transform] an array of 6 numbers representing a 2x3 transform matrix\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points, transform) {\n      if (transform) {\n        for (var i = 0; i < points.length; i++) {\n          points[i] = fabric.util.transformPoint(points[i], transform);\n        }\n      }\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects.filter(function(obj) {\n            // filter out undefined objects (objects that gave error)\n            return obj;\n          }));\n        }\n      }\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x3 matrix into transform components\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle] angle in degrees\n     * @return {Number[]} transform matrix\n     */\n    calcRotateMatrix: function(options) {\n      if (!options.angle) {\n        return fabric.iMatrix.concat();\n      }\n      var theta = fabric.util.degreesToRadians(options.angle),\n          cos = fabric.util.cos(theta),\n          sin = fabric.util.sin(theta);\n      return [cos, sin, -sin, cos, 0, 0];\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet.\n     * is called DimensionsTransformMatrix because those properties are the one that influence\n     * the size of the resulting box of the object.\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @return {Number[]} transform matrix\n     */\n    calcDimensionsMatrix: function(options) {\n      var scaleX = typeof options.scaleX === 'undefined' ? 1 : options.scaleX,\n          scaleY = typeof options.scaleY === 'undefined' ? 1 : options.scaleY,\n          scaleMatrix = [\n            options.flipX ? -scaleX : scaleX,\n            0,\n            0,\n            options.flipY ? -scaleY : scaleY,\n            0,\n            0],\n          multiply = fabric.util.multiplyTransformMatrices,\n          degreesToRadians = fabric.util.degreesToRadians;\n      if (options.skewX) {\n        scaleMatrix = multiply(\n          scaleMatrix,\n          [1, 0, Math.tan(degreesToRadians(options.skewX)), 1],\n          true);\n      }\n      if (options.skewY) {\n        scaleMatrix = multiply(\n          scaleMatrix,\n          [1, Math.tan(degreesToRadians(options.skewY)), 0, 1],\n          true);\n      }\n      return scaleMatrix;\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle]\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.translateX]\n     * @param  {Number} [options.translateY]\n     * @return {Number[]} transform matrix\n     */\n    composeMatrix: function(options) {\n      var matrix = [1, 0, 0, 1, options.translateX || 0, options.translateY || 0],\n          multiply = fabric.util.multiplyTransformMatrices;\n      if (options.angle) {\n        matrix = multiply(matrix, fabric.util.calcRotateMatrix(options));\n      }\n      if (options.scaleX || options.scaleY || options.skewX || options.skewY || options.flipX || options.flipY) {\n        matrix = multiply(matrix, fabric.util.calcDimensionsMatrix(options));\n      }\n      return matrix;\n    },\n\n    /**\n     * Returns a transform matrix that has the same effect of scaleX, scaleY and skewX.\n     * Is deprecated for composeMatrix. Please do not use it.\n     * @static\n     * @deprecated since 3.4.0\n     * @memberOf fabric.util\n     * @param  {Number} scaleX\n     * @param  {Number} scaleY\n     * @param  {Number} skewX\n     * @return {Number[]} transform matrix\n     */\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      return fabric.util.composeMatrix({ scaleX: scaleX, scaleY: scaleY, skewX: skewX });\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    /**\n     * Finds the scale for the object source to fit inside the object destination,\n     * keeping aspect ratio intact.\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Object | fabric.Object} source\n     * @param {Number} source.height natural unscaled height of the object\n     * @param {Number} source.width natural unscaled width of the object\n     * @param {Object | fabric.Object} destination\n     * @param {Number} destination.height natural unscaled height of the object\n     * @param {Number} destination.width natural unscaled width of the object\n     * @return {Number} scale factor to apply to source to fit into destination\n     */\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * Finds the scale for the object source to cover entirely the object destination,\n     * keeping aspect ratio intact.\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Object | fabric.Object} source\n     * @param {Number} source.height natural unscaled height of the object\n     * @param {Number} source.width natural unscaled width of the object\n     * @param {Object | fabric.Object} destination\n     * @param {Number} destination.height natural unscaled height of the object\n     * @param {Number} destination.width natural unscaled width of the object\n     * @return {Number} scale factor to apply to source to cover destination\n     */\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n     * @memberOf fabric.util\n     * @param {Array} trasnform an array with 6 numbers\n     * @return {String} transform matrix for svg\n     * @return {Object.y} Limited dimensions by Y\n     */\n    matrixToSVG: function(transform) {\n      return 'matrix(' + transform.map(function(value) {\n        return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n      }).join(' ') + ')';\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    return [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({ }, source[property]);\n          }\n          else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n  // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n  var couldUseAttachEvent = !!fabric.document.createElement('div').attachEvent;\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = function(element, eventName, handler, options) {\n    element && element.addEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = function(element, eventName, handler, options) {\n    element && element.removeEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  function getTouchInfo(event) {\n    var touchProp = event.changedTouches;\n    if (touchProp && touchProp[0]) {\n      return touchProp[0];\n    }\n    return event;\n  }\n\n  fabric.util.getPointer = function(event) {\n    var element = event.target,\n        scroll = fabric.util.getScrollLeftTop(element),\n        _evt = getTouchInfo(event);\n    return {\n      x: _evt.clientX + scroll.left,\n      y: _evt.clientY + scroll.top\n    };\n  };\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n    var impl = fabric.jsdomImplForWrapper(element);\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null;\n      // unsure if necessary\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = console.log;\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = console.warn;\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  function defaultEasing(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || defaultEasing,\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        // TODO: move abort call after calculation\n        // and pass (current,valuePerc, timePerc) as arguments\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        if (time > finish) {\n          onChange(endValue, 1, 1);\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        else {\n          onChange(current, valuePerc, timePerc);\n          requestAnimFrame(tick);\n        }\n      })(start);\n    });\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-dashoffset':  'strokeDashOffset',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity',\n        'clip-path':          'clipPath',\n        'clip-rule':          'clipRule',\n        'vector-effect':      'strokeUniform'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      },\n\n      fSize = 'font-size', cPath = 'clip-path';\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n  fabric.clipPaths = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'vector-effect') {\n      value = value === 'non-scaling-stroke';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = fabric.iMatrix,\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len, namespace = fabric.svgNS;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElementNS(namespace, 'g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttributeNS(namespace, attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n    parsedDim.minX = minX;\n    parsedDim.minY = minY;\n    parsedDim.viewBoxWidth = viewBoxWidth;\n    parsedDim.viewBoxHeight = viewBoxHeight;\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElementNS(fabric.svgNS, 'g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n    var clipPaths = { };\n    descendants.filter(function(el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function(el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths;\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n    gradientsAttrs.forEach(function(attr) {\n      if (referencedGradient && !gradient.hasAttribute(attr) && referencedGradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, gradientDefs = { };\n      j = elList.length;\n      while (j--) {\n        el = elList[j];\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize, parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      var cssAttrs = extend(\n        getGlobalStylesForElement(element, svgUid),\n        fabric.parseStyleAttribute(element)\n      );\n      ownAttributes = extend(\n        ownAttributes,\n        cssAttrs\n      );\n      if (cssAttrs[cPath]) {\n        element.setAttribute(cPath, cssAttrs[cPath]);\n      }\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      if (ownAttributes[fSize]) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes[fSize] = fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n      }\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // <style/> could produce `undefined`, covering this case with ''\n        var styleContents = styles[i].textContent || '';\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof fabric.window.DOMParser !== 'undefined') {\n        var parser = new fabric.window.DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions, doc) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n  this.doc = doc;\n};\n\n(function(proto) {\n  proto.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function() {\n    var _this = this;\n    this.elements.forEach(function(element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function(el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function(el, index) {\n    var klass = this.findTag(el);\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      }\n      catch (err) {\n        fabric.log(err);\n      }\n    }\n    else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n      var _options;\n      _this.resolveGradient(obj, el, 'fill');\n      _this.resolveGradient(obj, el, 'stroke');\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n      obj._removeTransformMatrix(_options);\n      _this.resolveClipPath(obj, el);\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function(obj, property, storage) {\n    var value = obj[property], regex = this.regexUrl;\n    if (!regex.test(value)) {\n      return;\n    }\n    regex.lastIndex = 0;\n    var id = regex.exec(value)[1];\n    regex.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function(obj, el, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n    if (gradientDef) {\n      var opacityAttr = el.getAttribute(property + '-opacity');\n      var gradient = fabric.Gradient.fromElement(gradientDef, obj, opacityAttr, this.options);\n      obj.set(property, gradient);\n    }\n  };\n\n  proto.createClipPathCallback = function(obj, container) {\n    return function(_newObj) {\n      _newObj._removeTransformMatrix();\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function(obj, usingElement) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element, klass, objTransformInv, container, gTransform, options;\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n      // move the clipPath tag as sibling to the real element that is using it\n      var clipPathTag = clipPath[0].parentNode;\n      var clipPathOwner = usingElement;\n      while (clipPathOwner.parentNode && clipPathOwner.getAttribute('clip-path') !== obj.clipPath) {\n        clipPathOwner = clipPathOwner.parentNode;\n      }\n      clipPathOwner.parentNode.appendChild(clipPathTag);\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(\n          element,\n          this.createClipPathCallback(obj, container),\n          this.options\n        );\n      }\n      if (container.length === 1) {\n        clipPath = container[0];\n      }\n      else {\n        clipPath = new fabric.Group(container);\n      }\n      gTransform = fabric.util.multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      if (clipPath.clipPath) {\n        this.resolveClipPath(clipPath, clipPathOwner);\n      }\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n    else {\n      // if clip-path does not resolve to any element, delete the property.\n      delete obj.clipPath;\n    }\n  };\n\n  proto.checkIfDone = function() {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function(el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el, multiplier) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha * multiplier;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * A transform matrix to apply to the gradient before painting.\n     * Imported from svg gradients, is not applied with the current transform in the center.\n     * Before this transform is applied, the origin point is at the top left corner of the object\n     * plus the addition of offsetY and offsetX.\n     * @type Number[]\n     * @default null\n     */\n    gradientTransform: null,\n\n    /**\n     * coordinates units for coords.\n     * If `pixels`, the number of coords are in the same unit of width / height.\n     * If set as `percentage` the coords are still a number, but 1 means 100% of width\n     * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n     * allowed values pixels or percentage.\n     * @type String\n     * @default 'pixels'\n     */\n    gradientUnits: 'pixels',\n\n    /**\n     * Gradient type linear or radial\n     * @type String\n     * @default 'pixels'\n     */\n    type: 'linear',\n\n    /**\n     * Constructor\n     * @param {Object} options Options object with type, coords, gradientUnits and colorStops\n     * @param {Object} [options.type] gradient type linear or radial\n     * @param {Object} [options.gradientUnits] gradient units\n     * @param {Object} [options.offsetX] SVG import compatibility\n     * @param {Object} [options.offsetY] SVG import compatibility\n     * @param {Object[]} options.colorStops contains the colorstops.\n     * @param {Object} options.coords contains the coords of the gradient\n     * @param {Number} [options.coords.x1] X coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.y1] Y coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.x2] X coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.y2] Y coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.r1] only for radial gradient, radius of the inner circle\n     * @param {Number} [options.coords.r2] only for radial gradient, radius of the external circle\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n      options.coords || (options.coords = { });\n\n      var coords, _this = this;\n\n      // sets everything, then coords and colorstops get sets again\n      Object.keys(options).forEach(function(option) {\n        _this[option] = options[option];\n      });\n\n      if (this.id) {\n        this.id += '_' + fabric.Object.__uid++;\n      }\n      else {\n        this.id = fabric.Object.__uid++;\n      }\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientUnits: this.gradientUnits,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object, options) {\n      var coords = clone(this.coords, true), i, len, options = options || {},\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = -this.offsetX, offsetY = -this.offsetY,\n          withViewport = !!options.additionalTransform,\n          gradientUnits = this.gradientUnits === 'pixels' ? 'userSpaceOnUse' : 'objectBoundingBox';\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (gradientUnits === 'objectBoundingBox') {\n        offsetX /= object.width;\n        offsetY /= object.height;\n      }\n      else {\n        offsetX += object.width / 2;\n        offsetY += object.height / 2;\n      }\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"' + gradientUnits + '\"';\n      commonAttributes += ' gradientTransform=\"' + (withViewport ?\n        options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\n\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Object} object the fabric.Object for which the gradient is\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx, object) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len,\n          x1 = coords.x1, y1 = coords.y1, x2 = coords.x2, y2 = coords.y2,\n          stops = this.colorStops;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (object instanceof fabric.Text && this.gradientUnits === 'percentage') {\n        x1 *= object.width;\n        y1 *= object.height;\n        x2 *= object.width;\n        y2 *= object.height;\n      }\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(x1, y1, x2, y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(x1, y1, coords.r1, x2, y2, coords.r2);\n      }\n      for (i = 0, len = stops.length; i < len; i++) {\n        var color = stops[i].color,\n            opacity = stops[i].opacity,\n            offset = stops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @param {String} opacityAttr A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n     * @param {Object} svgOptions an object containing the size of the SVG in order to parse correctly graidents\n     * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n     * @param {Object.number} viewBoxWidth width part of the viewBox attribute on svg\n     * @param {Object.number} viewBoxHeight height part of the viewBox attribute on svg\n     * @param {Object.number} width width part of the svg tag if viewBox is not specified\n     * @param {Object.number} height height part of the svg tag if viewBox is not specified\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance, opacityAttr, svgOptions) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var multiplier = parseFloat(opacityAttr) / (/%$/.test(opacityAttr) ? 100 : 1);\n      multiplier = multiplier < 0 ? 0 : multiplier > 1 ? 1 : multiplier;\n      if (isNaN(multiplier)) {\n        multiplier = 1;\n      }\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') === 'userSpaceOnUse' ?\n            'pixels' : 'percentage',\n          gradientTransform = el.getAttribute('gradientTransform') || '',\n          colorStops = [],\n          coords, i, offsetX = 0, offsetY = 0,\n          transformMatrix;\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n        coords = getLinearCoords(el);\n      }\n      else {\n        type = 'radial';\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i], multiplier));\n      }\n\n      transformMatrix = fabric.parseTransformAttribute(gradientTransform);\n\n      __convertPercentUnitsToValues(instance, coords, svgOptions, gradientUnits);\n\n      if (gradientUnits === 'pixels') {\n        offsetX = -instance.left;\n        offsetY = -instance.top;\n      }\n\n      var gradient = new fabric.Gradient({\n        id: el.getAttribute('id'),\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        gradientUnits: gradientUnits,\n        gradientTransform: transformMatrix,\n        offsetX: offsetX,\n        offsetY: offsetY,\n      });\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * this function is uniquely used by Object.setGradient and is deprecated with it.\n     * @static\n     * @deprecated since 3.4.0\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      __convertPercentUnitsToValues(obj, options.coords, options.gradientUnits, {\n        // those values are to avoid errors. this function is uniquely used by\n        viewBoxWidth: 100,\n        viewBoxHeight: 100,\n      });\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function __convertPercentUnitsToValues(instance, options, svgOptions, gradientUnits) {\n    var propValue, finalValue;\n    Object.keys(options).forEach(function(prop) {\n      propValue = options[prop];\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      }\n      else if (propValue === '-Infinity') {\n        finalValue = 0;\n      }\n      else {\n        finalValue = parseFloat(options[prop], 10);\n        if (typeof propValue === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(propValue)) {\n          finalValue *= 0.01;\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= svgOptions.viewBoxWidth || svgOptions.width;\n            }\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= svgOptions.viewBoxHeight || svgOptions.height;\n            }\n          }\n        }\n      }\n      options[prop] = finalValue;\n    });\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * When `false`, the shadow will scale with the object.\n     * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n     * default to false\n     * @type Boolean\n     * @default\n     */\n    nonScaling: false,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke,\n          nonScaling: this.nonScaling\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      var scaleRatio = fabric.devicePixelRatio;\n      this.__initRetinaScaling(scaleRatio, this.lowerCanvasEl, this.contextContainer);\n      if (this.upperCanvasEl) {\n        this.__initRetinaScaling(scaleRatio, this.upperCanvasEl, this.contextTop);\n      }\n    },\n\n    __initRetinaScaling: function(scaleRatio, canvas, context) {\n      canvas.setAttribute('width', this.width * scaleRatio);\n      canvas.setAttribute('height', this.height * scaleRatio);\n      context.scale(scaleRatio, scaleRatio);\n    },\n\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    cancelRequestedRender: function() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform, path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', { ctx: ctx, });\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      if (path) {\n        path.canvas = this;\n        // needed to setup a couple of variables\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({ forClipping: true });\n        this.drawClipPathOnCanvas(ctx);\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render', { ctx: ctx, });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function(ctx) {\n      var v = this.viewportTransform, path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var fill = this[property + 'Color'], object = this[property + 'Image'],\n          v = this.viewportTransform, needsVpt = this[property + 'Vpt'];\n      if (!fill && !object) {\n        return;\n      }\n      if (fill) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.width, 0);\n        ctx.lineTo(this.width, this.height);\n        ctx.lineTo(0, this.height);\n        ctx.closePath();\n        ctx.fillStyle = fill.toLive\n          ? fill.toLive(ctx, this)\n          : fill;\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        var m = fill.gradientTransform || fill.patternTransform;\n        m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        ctx.fill();\n        ctx.restore();\n      }\n      if (object) {\n        ctx.save();\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var clipPath = this.clipPath, data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude),\n      };\n      if (clipPath) {\n        data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\n      }\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this._objects.filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'background');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n      this._setSVGObjects(markup, reviver);\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'overlay');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        this.createSVGClipPathMarkup(options),\n        '</defs>\\n'\n      );\n    },\n\n    createSVGClipPathMarkup: function(options) {\n      var clipPath = this.clipPath;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(options.reviver) +\n          '</clipPath>\\n';\n      }\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['background', 'overlay'].map(function(prop) {\n            var fill = _this[prop + 'Color'];\n            if (fill && fill.toLive) {\n              var shouldTransform = _this[prop + 'Vpt'], vpt = _this.viewportTransform,\n                  object = {\n                    width: _this.width / (shouldTransform ? vpt[0] : 1),\n                    height: _this.height / (shouldTransform ? vpt[3] : 1)\n                  };\n              return fill.toSVG(\n                object,\n                { additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : '' }\n              );\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = [];\n\n      this._objects.forEach(function add(object) {\n        objects.push(object);\n        if (object._objects) {\n          object._objects.forEach(add);\n        }\n      });\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this._objects;\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property + 'Color'], vpt = this.viewportTransform, finalWidth = this.width,\n          finalHeight = this.height;\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat, iVpt = fabric.util.invertTransform(vpt), shouldInvert = this[property + 'Vpt'],\n            additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\n        markup.push(\n          '<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2,\n          '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', filler, '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n      this.backgroundImage = null;\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var canvas = this.canvas,\n        shadow = this.shadow,\n        ctx = canvas.contextTop,\n        zoom = canvas.getZoom();\n    if (canvas && canvas._isRetinaScaling()) {\n      zoom *= fabric.devicePixelRatio;\n    }\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  },\n\n  needsFullRender: function() {\n    var color = new fabric.Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Discard points that are less than `decimate` pixel distant from each other\n     * @type Number\n     * @default 0.4\n     */\n    decimate: 0.4,\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender()) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function(options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return true;\n      }\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points = [];\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 0, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * Decimate poins array with the decimate value\n     */\n    decimatePoints: function(points, distance) {\n      if (points.length <= 2) {\n        return points;\n      }\n      var zoom = this.canvas.getZoom(), adjustedDistance = Math.pow(distance / zoom, 2),\n          i, l = points.length - 1, lastPoint = points[0], newPoints = [lastPoint],\n          cDistance;\n      for (i = 1; i < l; i++) {\n        cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\n        if (cDistance >= adjustedDistance) {\n          lastPoint = points[i];\n          newPoints.push(lastPoint);\n        }\n      }\n      if (newPoints.length === 1) {\n        newPoints.push(new fabric.Point(newPoints[0].x, newPoints[0].y));\n      }\n      return newPoints;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n      if (this.decimate) {\n        this._points = this.decimatePoints(this._points, this.decimate);\n      }\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.requestRenderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    this.dot(ctx, point);\n    ctx.restore();\n  },\n\n  dot: function(ctx, point) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      this.dot(ctx, points[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n      this._render();\n    }\n    else {\n      this.drawDot(pointer);\n    }\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified at the end of a transform or any change when statefull is true\n   * @fires object:rotated at the end of a rotation transform\n   * @fires object:scaled at the end of a scale transform\n   * @fires object:moved at the end of translation transform\n   * @fires object:skewed at the end of a skew transform\n   * @fires object:rotating while an object is being rotated from the control\n   * @fires object:scaling while an object is being scaled by controls\n   * @fires object:moving while an object is being dragged\n   * @fires object:skewing while an object is being skewed from the controls\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform before a transform is is started\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created after a drawing operation ends and the path is added\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\n   * @fires mouse:move:before on mouse move, before the inner fabric logic runs\n   * @fires mouse:up:before on mouse up, before the inner fabric logic runs\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   * @fires after:render at the end of the render process, receives the context in the callback\n   * @fires before:render at start the render process, receives the context in the callback\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * Keep track of the subTargets for Mouse Events\n     * @type fabric.Object[]\n     */\n    targets: [],\n\n    /**\n     * Keep track of the hovered target\n     * @type fabric.Object\n     * @private\n     */\n    _hoveredTarget: null,\n\n    /**\n     * hold the list of nested targets hovered\n     * @type fabric.Object[]\n     * @private\n     */\n    _hoveredTargets: [],\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      ctx.save();\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n        this.contextTopDirty = true;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          }\n          else {\n            t.mouseXSign = 1;\n          }\n        }\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          }\n          else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function(alreadySelected, corner, e /* target */) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target),\n      };\n\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      if (fabric.Textbox && by === 'x' && target instanceof fabric.Textbox) {\n        var w = target.width * (localMouse.x / _dim.x);\n        if (w >= target.getMinWidth()) {\n          scaled = w !== target.width;\n          target.set('width', w);\n          return scaled;\n        }\n        return false;\n      }\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = changeY));\n      }\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1, newScaleX, newScaleY;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform,\n          target = t.target, constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle  = target.snapAngle,\n            snapThreshold  = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        // rotation only happen here\n        target.angle = angle;\n        // Make sure the constraints apply\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function(pointer, obj, globalPointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ?\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      var retinaScaling = this.getRetinaScaling();\n      if (retinaScaling !== 1) {\n        pointer.x /= retinaScaling;\n        pointer.y /= retinaScaling;\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, ''),\n          lowerCanvasEl = this.lowerCanvasEl, upperCanvasEl = this.upperCanvasEl;\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (upperCanvasEl) {\n        upperCanvasEl.className = '';\n      }\n      else {\n        upperCanvasEl = this._createCanvasElement();\n        this.upperCanvasEl = upperCanvasEl;\n      }\n      fabric.util.addClass(upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(upperCanvasEl);\n\n      this._copyCanvasStyle(lowerCanvasEl, upperCanvasEl);\n      this._applyCanvasStyle(upperCanvasEl);\n      this.contextTop = upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',\n        '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (obj === this._hoveredTarget){\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects(), activeObject = this.getActiveObject();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return e.button && (e.button === value - 1);\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Contains the id of the touch event that owns the fabric transform\n     * @type Number\n     * @private\n     */\n    mainTouchId: null,\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    /**\n     * return an event prefix pointer or mouse.\n     * @private\n     */\n    _getEventPrefix: function () {\n      return this.enablePointerEvents ? 'pointer' : 'mouse';\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      functor(fabric.window, 'resize', this._onResize);\n      functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n      functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\n      functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\n      functor(canvasElement, 'wheel', this._onMouseWheel);\n      functor(canvasElement, 'contextmenu', this._onContextMenu);\n      functor(canvasElement, 'dblclick', this._onDoubleClick);\n      functor(canvasElement, 'dragover', this._onDragOver);\n      functor(canvasElement, 'dragenter', this._onDragEnter);\n      functor(canvasElement, 'dragleave', this._onDragLeave);\n      functor(canvasElement, 'drop', this._onDrop);\n      if (!this.enablePointerEvents) {\n        functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n      }\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n        eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onTouchStart = this._onTouchStart.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onTouchEnd = this._onTouchEnd.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n\n      var _this = this;\n      this._hoveredTargets.forEach(function(_target){\n        _this.fire('mouse:out', { target: target, e: e });\n        _target && target.fire('mouseout', { e: e });\n      });\n      this._hoveredTargets = [];\n\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      // This find target and consequent 'mouse:over' is used to\n      // clear old instances on hovered target.\n      // calling findTarget has the side effect of killing target.__corner.\n      // as a short term fix we are not firing this if we are currently transforming.\n      // as a long term fix we need to separate the action of finding a target with the\n      // side effects we added to it.\n      if (!this.currentTransform && !this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * Return a the id of an event.\n     * returns either the pointerId or the identifier or 0 for the mouse event\n     * @private\n     * @param {Event} evt Event object\n     */\n    getPointerId: function(evt) {\n      var changedTouches = evt.changedTouches;\n\n      if (changedTouches) {\n        return changedTouches[0] && changedTouches[0].identifier;\n      }\n\n      if (this.enablePointerEvents) {\n        return evt.pointerId;\n      }\n\n      return -1;\n    },\n\n    /**\n     * Determines if an event has the id of the event that is considered main\n     * @private\n     * @param {evt} event Event object\n     */\n    _isMainEvent: function(evt) {\n      if (evt.isPrimary === true) {\n        return true;\n      }\n      if (evt.isPrimary === false) {\n        return false;\n      }\n      if (evt.type === 'touchend' && evt.touches.length === 0) {\n        return true;\n      }\n      if (evt.changedTouches) {\n        return evt.changedTouches[0].identifier === this.mainTouchId;\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchStart: function(e) {\n      e.preventDefault();\n      if (this.mainTouchId === null) {\n        this.mainTouchId = this.getPointerId(e);\n      }\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      addListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      // Unbind mousedown to prevent double triggers from touch devices\n      removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchEnd: function(e) {\n      if (e.touches.length > 0) {\n        // if there are still touches stop here\n        return;\n      }\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      this.mainTouchId = null;\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      var _this = this;\n      if (this._willAddMouseDown) {\n        clearTimeout(this._willAddMouseDown);\n      }\n      this._willAddMouseDown = setTimeout(function() {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\n        _this._willAddMouseDown = 0;\n      }, 400);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      if (this._isMainEvent(e)) {\n        removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n        removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n        addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function(target) {\n      var activeObject = this._activeObject;\n\n      if (\n        !!activeObject !== !!target ||\n        (activeObject && target && (activeObject !== target))\n      ) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      }\n      else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector, shouldRender = false,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      // reset the target information about which corner is selected\n      target && (target.__corner = 0);\n      if (shouldRender) {\n        this.requestRenderAll();\n      }\n      else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n          this._fire(eventName, options);\n        }\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer, { e: e, pointer: pointer });\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer, { e: e, pointer: pointer });\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      var pointer = this.getPointer(e);\n      this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({ e: e, pointer: pointer });\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n      // determine if it's a drag or rotate case\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will define whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._pointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var _hoveredTarget = this._hoveredTarget,\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _hoveredTarget,\n        evtOut: 'mouseout',\n        canvasEvtOut: 'mouse:out',\n        evtIn: 'mouseover',\n        canvasEvtIn: 'mouse:over',\n      });\n      for (var i = 0; i < length; i++){\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'mouseout',\n          evtIn: 'mouseover',\n        });\n      }\n      this._hoveredTarget = target;\n      this._hoveredTargets = this.targets.concat();\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      var _draggedoverTarget = this._draggedoverTarget,\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _draggedoverTarget,\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n      for (var i = 0; i < length; i++) {\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'dragleave',\n          evtIn: 'dragenter',\n        });\n      }\n      this._draggedoverTarget = target;\n    },\n\n    /**\n     * Manage the synthetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSyntheticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = config.oldTarget, outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n            target: transform.target,\n            e: e,\n            transform: transform,\n            pointer: pointer\n          };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', options);\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current transform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse position y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        if (target.subTargetCheck){\n          // hoverCursor should come from top-most subTarget,\n          // so we walk the array backwards\n          this.targets.concat().reverse().map(function(_target){\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n        }\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      // avoid multi select when shift click on a corner\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        this._hoveredTargets = this.targets.concat();\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n        this._hoveredTargets = this.targets.concat();\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      // ISSUE 4115: should we consider subTargets here?\n      // this._hoveredTargets = [];\n      // this._hoveredTargets = this.targets.concat();\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(e),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      if (group.length > 1) {\n        group = group.filter(function(object) {\n          return !object.onSelect({ e: e });\n        });\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is useful to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || { };\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalRetina = this.enableRetinaScaling,\n          canvasEl = fabric.util.createCanvasElement(),\n          originalContextTop = this.contextTop;\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.contextTop = null;\n      this.enableRetinaScaling = false;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.renderCanvas(canvasEl.getContext('2d'), this._objects);\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.interactive = originalInteractive;\n      this.enableRetinaScaling = originalRetina;\n      this.contextTop = originalContextTop;\n      return canvasEl;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        clipPath = serialized.clipPath,\n        renderOnAddRemove = this.renderOnAddRemove;\n\n    this.renderOnAddRemove = false;\n\n    delete serialized.clipPath;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        if (clipPath) {\n          _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\n            _this.clipPath = enlivenedCanvasClip[0];\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n          });\n        }\n        else {\n          _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n        }\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Array} restored canvas objects\n   * @param {Function} cached renderOnAddRemove callback\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  __setupCanvas: function(serialized, enlivenedObjects, renderOnAddRemove, callback) {\n    var _this = this;\n    enlivenedObjects.forEach(function(obj, index) {\n      // we splice the array just in case some custom classes restored from JSON\n      // will add more object to canvas at canvas init.\n      _this.insertAt(obj, index);\n    });\n    this.renderOnAddRemove = renderOnAddRemove;\n    // remove parts i cannot set as options\n    delete serialized.objects;\n    delete serialized.backgroundImage;\n    delete serialized.overlayImage;\n    delete serialized.background;\n    delete serialized.overlay;\n    // this._initOptions does too many things to just\n    // call it. Normally loading an Object from JSON\n    // create the Object instance. Here the Canvas is\n    // already an instance and we are just loading things over it\n    this._setOptions(serialized);\n    this.renderAll();\n    callback && callback();\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.util.createCanvasElement();\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * bigger number will make a thicker border\n     * border is 1, so this is basically a border tickness\n     * since there is no way to change the border itself.\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * This property has been depreacted. Since caching and and qrDecompose this\n     * property can be handled with the standard top,left,scaleX,scaleY,angle and skewX.\n     * A documentation example on how to parse and merge a transformMatrix will be provided before\n     * completely removing it in fabric 4.0\n     * If you are starting a project now, DO NOT use it.\n     * @deprecated since 3.2.0\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * When `false`, object is not cached unless necessary ( clipPath )\n     * default to true\n     * @since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform:              false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst clipPath strokeUniform'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\n    ).split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var objectScale = this.getTotalObjectScaling(),\n          // caculate dimensions without skewing\n          dim = this._getTransformedDimensions(0, 0),\n          neededX = dim.x * objectScale.scaleX / this.scaleX,\n          neededY = dim.y * objectScale.scaleY / this.scaleY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly creating problem\n        // in situation in which the cache canvas gets an upper limit\n        // also objectScale contains already scaleX and scaleY\n        width: neededX + ALIASING_LIMIT,\n        height: neededY + ALIASING_LIMIT,\n        zoomX: objectScale.scaleX,\n        zoomY: objectScale.scaleY,\n        x: neededX,\n        y: neededY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      var targetCanvas = this.canvas;\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x / 2;\n        drawingHeight = dims.y / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeDashOffset:         this.strokeDashOffset,\n            strokeLineJoin:           this.strokeLineJoin,\n            // TODO: add this before release\n            // strokeUniform:            this.strokeUniform,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\n          };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (prop === 'left' || prop === 'top') {\n          return;\n        }\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var options = fabric.util.qrDecompose(this.calcTransformMatrix());\n      return { scaleX: Math.abs(options.scaleX), scaleY: Math.abs(options.scaleY) };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function() {\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 ||\n        (this.width === 0 && this.height === 0 && this.strokeWidth === 0) ||\n        !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    renderCache: function(options) {\n      options = options || {};\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * return true if the object will draw a stroke\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when stroke happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the stroke is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasStroke: function() {\n      return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\n    },\n\n    /**\n     * return true if the object will draw a fill\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when fill happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the fill is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasFill: function() {\n      return this.fill && this.fill !== 'transparent';\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns Boolean\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' &&\n        this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\n        return true;\n      }\n      if (this.clipPath) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.needsItsOwnCache() || (\n        this.objectCaching &&\n        (!this.group || !this.group.isOnACache())\n      );\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function(ctx) {\n      var path = this.clipPath;\n      ctx.save();\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      }\n      else {\n        ctx.globalCompositeOperation = 'destination-in';\n      }\n      //ctx.scale(1 / 2, 1 / 2);\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx, forClipping) {\n      var originalFill = this.fill, originalStroke = this.stroke;\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n        this._setClippingProperties(ctx);\n      }\n      else {\n        this._renderBackground(ctx);\n        this._setStrokeStyles(ctx, this);\n        this._setFillStyles(ctx, this);\n      }\n      this._render(ctx);\n      this._drawClipPath(ctx);\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n\n    _drawClipPath: function(ctx) {\n      var path = this.clipPath;\n      if (!path) { return; }\n      // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({ forClipping: true });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty ||\n          (this.clipPath && this.clipPath.absolutePositioned) ||\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\n        ) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    _setClippingProperties: function(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray || dashArray.length === 0) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow, canvas = this.canvas, scaling,\n          multX = (canvas && canvas.viewportTransform[0]) || 1,\n          multY = (canvas && canvas.viewportTransform[3]) || 1;\n      if (shadow.nonScaling) {\n        scaling = { scaleX: 1, scaleY: 1 };\n      }\n      else {\n        scaling = this.getObjectScaling();\n      }\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n\n      if (filler.gradientUnits === 'percentage') {\n        ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n      }\n      else {\n        ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n      }\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * function that actually render something on the context.\n     * empty here to allow Obects to work on tests to benchmark fabric functionalites\n     * not related to rendering\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(/* ctx */) {\n\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      if (this.strokeUniform && this.group) {\n        var scaling = this.getObjectScaling();\n        ctx.scale(1 / scaling.scaleX, 1 / scaling.scaleY);\n      }\n      else if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      if (this.stroke.toLive && this.stroke.gradientUnits === 'percentage') {\n        // need to transform gradient in a pattern.\n        // this is a slow process. If you are hitting this codepath, and the object\n        // is not using caching, you should consider switching it on.\n        // we need a canvas as big as the current object caching canvas.\n        this._applyPatternForTransformedGradient(ctx, this.stroke);\n      }\n      else {\n        this._applyPatternGradientTransform(ctx, this.stroke);\n      }\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function try to patch the missing gradientTransform on canvas gradients.\n     * transforming a context to transform the gradient, is going to transform the stroke too.\n     * we want to transform the gradient but not the stroke operation, so we create\n     * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n     * this method has drwabacks: is slow, is in low resolution, needs a patch for when the size\n     * is limited.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Gradient} filler a fabric gradient instance\n     */\n    _applyPatternForTransformedGradient: function(ctx, filler) {\n      var dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          pCanvas = fabric.util.createCanvasElement(), pCtx, retinaScaling = this.canvas.getRetinaScaling(),\n          width = dims.x / this.scaleX / retinaScaling, height = dims.y / this.scaleY / retinaScaling;\n      pCanvas.width = width;\n      pCanvas.height = height;\n      pCtx = pCanvas.getContext('2d');\n      pCtx.beginPath(); pCtx.moveTo(0, 0); pCtx.lineTo(width, 0); pCtx.lineTo(width, height);\n      pCtx.lineTo(0, height); pCtx.closePath();\n      pCtx.translate(width / 2, height / 2);\n      pCtx.scale(\n        dims.zoomX / this.scaleX / retinaScaling,\n        dims.zoomY / this.scaleY / retinaScaling\n      );\n      this._applyPatternGradientTransform(pCtx, filler);\n      pCtx.fillStyle = filler.toLive(ctx);\n      pCtx.fill();\n      ctx.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2);\n      ctx.scale(\n        retinaScaling * this.scaleX / dims.zoomX,\n        retinaScaling * this.scaleY / dims.zoomY\n      );\n      ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat');\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {HTMLCanvasElement} Returns DOM element <canvas> with the fabric.Object\n     */\n    toCanvasElement: function(options) {\n      options || (options = { });\n\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\n          originalGroup = this.group,\n          originalShadow = this.shadow, abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n      delete this.group;\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n          boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow, scaling,\n          shadowOffset = { x: 0, y: 0 }, shadowBlur,\n          width, height;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n        if (shadow.nonScaling) {\n          scaling = { scaleX: 1, scaleY: 1 };\n        }\n        else {\n          scaling = this.getObjectScaling();\n        }\n        // consider non scaling shadow.\n        shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * (abs(scaling.scaleX));\n        shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * (abs(scaling.scaleY));\n      }\n      width = boundingRect.width + shadowOffset.x;\n      height = boundingRect.height + shadowOffset.y;\n      // if the current width/height is not an integer\n      // we need to make it so.\n      el.width = Math.ceil(width);\n      el.height = Math.ceil(height);\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.set('canvas', originalCanvas);\n      if (originalGroup) {\n        this.group = originalGroup;\n      }\n      this.set(origParams).setCoords();\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * percentages for x1,x2,y1,y2,r1,r2 together with gradientUnits 'pixels', are not supported.\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.4.0\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n      gradient.gradientUnits = options.gradientUnits || 'pixels';\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.5.0\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function(options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.5.0\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @deprecated since 3.5.0\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are useful to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the object contains the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intended as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object's bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculates and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2,\n          tl = transformPoint({ x: -w, y: -h }, finalMatrix),\n          tr = transformPoint({ x: w, y: -h }, finalMatrix),\n          bl = transformPoint({ x: -w, y: h }, finalMatrix),\n          br = transformPoint({ x: w, y: h }, finalMatrix);\n      if (!absolute) {\n        var padding = this.padding, angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\n            cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      }\n\n      // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, useful in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      return fabric.util.calcRotateMatrix(this);\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties.\n     * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n     * @return {Array} transform matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties, this matrix does not include the group transformation\n     * @return {Array} transform matrix for the object\n     */\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var tMatrix = this._calcTranslateMatrix();\n      this.translateX = tMatrix[4];\n      this.translateY = tMatrix[5];\n      cache.key = key;\n      cache.value = fabric.util.composeMatrix(this);\n      return cache.value;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @deprecated since 3.4.0, please use fabric.util._calcDimensionsTransformMatrix\n     * not including or including flipX, flipY to emulate the flipping boolean\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      return fabric.util.calcDimensionsMatrix({\n        skewX: skewX,\n        skewY: skewY,\n        scaleX: this.scaleX * (flipping && this.flipX ? -1 : 1),\n        scaleY: this.scaleY * (flipping && this.flipY ? -1 : 1)\n      });\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * The skewX and skewY parameters are used in the skewing logic path and\n     * do not provide something useful to common use cases.\n     * @param {Number} [skewX], a value to override current skewX\n     * @param {Number} [skewY], a value to override current skewY\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(), dimX, dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      }\n      else {\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n      if (noSkew) {\n        return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\n      }\n      else {\n        dimX /= 2;\n        dimY /= 2;\n      }\n      var points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          transformMatrix = fabric.util.calcDimensionsMatrix({\n            scaleX: this.scaleX,\n            scaleY: this.scaleY,\n            skewX: skewX,\n            skewY: skewY,\n          }),\n          bbox = fabric.util.makeBoundingBoxFromPoints(points, transformMatrix);\n      return this._finalizeDimensions(bbox.width, bbox.height);\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDimensions: function(width, height) {\n      return this.strokeUniform ?\n        { x: width + this.strokeWidth, y: height + this.strokeWidth }\n        :\n        { x: width, y: height };\n    },\n    /*\n     * Calculate object dimensions for controls, including padding and canvas zoom.\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else if (this.canvas) {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else if (this.canvas) {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else if (this.canvas) {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else if (this.canvas) {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else if (this.canvas) {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      return ['overline', 'underline', 'line-through'].filter(function(decoration) {\n        return style[decoration.replace('-', '')];\n      }).join(' ');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function() {\n      return [\n        this.id ? 'id=\"' + this.id + '\" ' : '',\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\n      return svgTransform +\n        (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' ' + fabric.util.matrixToSVG(this.transformMatrix) : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [\n            this.getSvgTransform(true, additionalTransform),\n            this.getSvgCommons(),\n          ].join(''),\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = options.withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = clipPath && clipPath.absolutePositioned,\n          stroke = this.stroke, fill = this.fill, shadow = this.shadow,\n          commonPieces, markup = [], clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          clipPath.toClipPathSVG(reviver) +\n          '</clipPath>\\n';\n      }\n      if (absoluteClipPath) {\n        markup.push(\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\n        );\n      }\n      markup.push(\n        '<g ',\n        this.getSvgTransform(false),\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n        ' >\\n'\n      );\n      commonPieces = [\n        styleInfo,\n        vectorEffect,\n        noStyle ? '' : this.addPaintOrder(), ' ',\n        additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\n      ].join('');\n      objectMarkup[index] = commonPieces;\n      if (fill && fill.toLive) {\n        markup.push(fill.toSVG(this));\n      }\n      if (stroke && stroke.toLive) {\n        markup.push(stroke.toSVG(this));\n      }\n      if (shadow) {\n        markup.push(shadow.toSVG(this));\n      }\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n        if (key === 'canvas') {\n          continue;\n        }\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = { x: this.width, y: this.height },\n          matrix = fabric.util.composeMatrix({\n            scaleX: options.scaleX,\n            scaleY: options.scaleY,\n            skewX: options.skewX\n          }),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = this.strokeWidth,\n          borderScaleFactor = this.borderScaleFactor,\n          width =\n            wh.x + strokeWidth * (this.strokeUniform ? this.canvas.getZoom() : options.scaleX) + borderScaleFactor,\n          height =\n            wh.y + strokeWidth * (this.strokeUniform ? this.canvas.getZoom() : options.scaleY) + borderScaleFactor;\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var p = this.calcLinePoints();\n      return [\n        '<line ', 'COMMON_PARTS',\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString, x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        svgString = [\n          '<circle ', 'COMMON_PARTS',\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" />\\n'\n        ];\n      }\n      else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = [\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" ', 'COMMON_PARTS', ' />\\n'\n        ];\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ].join(',');\n      return [\n        '<polygon ', 'COMMON_PARTS',\n        'points=\"', points,\n        '\" />'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      return [\n        '<ellipse ', 'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var x = -this.width / 2, y = -this.height / 2;\n      return [\n        '<rect ', 'COMMON_PARTS',\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    parsedAttributes.height  = parsedAttributes.height || 0;\n    parsedAttributes.width  = parsedAttributes.width || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._setPositionDimensions(options);\n    },\n\n    _setPositionDimensions: function(options) {\n      var calcDim = this._calcDimensions(options), correctLeftTop;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      if (!options.fromSVG) {\n        correctLeftTop = this.translateToGivenOrigin(\n          { x: calcDim.left - this.strokeWidth / 2, y: calcDim.top - this.strokeWidth / 2 },\n          'left',\n          'top',\n          this.originX,\n          this.originY\n        );\n      }\n      if (typeof options.left === 'undefined') {\n        this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\n      }\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      return [\n        '<' + this.type + ' ', 'COMMON_PARTS',\n        'points=\"', points.join(''),\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElementGenerator = function(_class) {\n    return function(element, callback, options) {\n      if (!element) {\n        return callback(null);\n      }\n      options || (options = { });\n\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n          parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\n      parsedAttributes.fromSVG = true;\n      callback(new fabric[_class](points, extend(parsedAttributes, options)));\n    };\n  };\n\n  fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      fabric.Polyline.prototype._setPositionDimensions.call(this, options);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n      });\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var path = this.path.map(function(path) {\n        return path.join(' ');\n      }).join(' ');\n      return [\n        '<path ', 'COMMON_PARTS',\n        'd=\"', path,\n        '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      ];\n    },\n\n    _getOffsetTransform: function() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\n          toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return '\\t' + this._createBaseClipPathSVGMarkup(\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\n      );\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = fabric.rePathCommand,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: deltaX,\n        height: deltaY\n      };\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    parsedAttributes.fromSVG = true;\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click, mouseover, mouseout events & hoverCursor should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        }\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n      var objsToObject = this._objects.map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group is already cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = fabric.Object.prototype.shouldCache.call(this);\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (fabric.Object.prototype.willDrawShadow.call(this)) {\n        return true;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0, left = minXY.x || 0,\n          width = (maxXY.x - minXY.x) || 0,\n          height = (maxXY.y - minXY.y) || 0;\n      this.width = width;\n      this.height = height;\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function(reviver) {\n      var svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n      }\n      svgString.push('</g>\\n');\n      return svgString;\n    },\n\n    /**\n     * Returns styles-string for svg-export, specific version for group\n     * @return {String}\n     */\n    getSvgStyles: function() {\n      var opacity = typeof this.opacity !== 'undefined' && this.opacity !== 1 ?\n            'opacity: ' + this.opacity + ';' : '',\n          visibility = this.visible ? '' : ' visibility: hidden;';\n      return [\n        opacity,\n        this.getSvgFilter(),\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    var objects = object.objects,\n        options = fabric.util.object.clone(object, true);\n    delete options.objects;\n    if (typeof objects === 'string') {\n      // it has to be an url or something went wrong.\n      fabric.loadSVGFromURL(objects, function (elements) {\n        var group = fabric.util.groupSVGElements(elements, object, objects);\n        group.set(options);\n        callback && callback(group);\n      });\n      return;\n    }\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects.concat();\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function(object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function(key) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function() {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString = [], imageMarkup = [], strokeSvg,\n          x = -this.width / 2, y = -this.height / 2, clipPath = '';\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this._element.width || this._element.naturalWidth,\n        '\" height=\"', this._element.height || this._element.height,\n        '\"', clipPath,\n        '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = [\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        ];\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      }\n      else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        }\n        else {\n          return element.src;\n        }\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback && callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\n      this.set('dirty', true);\n\n      // needs to clear out or WEBGL will not resize correctly\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return this.needsItsOwnCache();\n    },\n\n    _renderFill: function(ctx) {\n      var elementToDraw = this._element,\n          w = this.width, h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2, y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * needed to check if image needs resize\n     * @private\n     */\n    _needsResize: function() {\n      var scale = this.getTotalObjectScaling();\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined', canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      if (fabric.forceGLPutImageData) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n        return;\n      }\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\n      if (!gl) {\n        return gpuInfo;\n      }\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image = fabric.Image || { };\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      else {\n        return _class[main] === this[main];\n      }\n    }\n    else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function() {\n      return false;\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      else {\n        context.clearRect(0, 0, width, height);\n      }\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n\n    isNeutralState: function() {\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\n    }\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * It return always for text and Itext.\n     * @return Number\n     */\n    missingNewlineOffset: function() {\n      return 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} _char, char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line index number\n     * @param {Number} _char the character index number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, _char) {\n      return this.getValueOfPropertyAt(line, _char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n\n      ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\n              boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              top + this.offsets[type] * size + dy,\n              boxWidth,\n              this.fontSize / 15\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          top + this.offsets[type] * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 || family.indexOf(',') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        // verify if this can be fixed in JSDOM\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * This function is used to detect if a text will use a particular property or not.\n     * @param {String} property to check for\n     * @param {Number} lineIndex to check the style on\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { 0: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex);\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\n          len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + this.missingNewlineOffset(i);\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @return {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return !!this.styles[lineIndex];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      this.styles[lineIndex] = {};\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this.transform(ctx);\n      this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n      this._clearTextArea(ctx);\n      skipRestore || ctx.restore();\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     * it does on the contextTop. If contextTop is not available, do nothing.\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(),\n          ctx = this.canvas.contextTop;\n      this.clearContextTop(true);\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var text = this._text,\n          index     = this._reSpace.test(text[selectionStart]) ? selectionStart - 1 : selectionStart,\n          _char     = text[index],\n          // wrong\n          reNonWord = fabric.reNonWord;\n\n      while (!reNonWord.test(_char) && index > 0 && index < text.length) {\n        index += direction;\n        _char = text[index];\n      }\n      if (reNonWord.test(_char)) {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPosition),\n          cursorLocation = this.get2DCursorLocation(desiredPosition),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          retinaScaling = this.canvas.getRetinaScaling(),\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width / retinaScaling,\n          upperCanvasHeight = upperCanvas.height / retinaScaling,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        selectable: this.selectable,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.selectable = this._savedProps.selectable;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      var hiddenTextarea = this.hiddenTextarea;\n      this.selected = false;\n      this.isEditing = false;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (hiddenTextarea) {\n        hiddenTextarea.blur && hiddenTextarea.blur();\n        hiddenTextarea.parentNode && hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n      }\n      this.hiddenTextarea = null;\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objects\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLength = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLength++;\n          addedLines[linesLength] = 0;\n        }\n        else {\n          addedLines[linesLength]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLength && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\n      for (var i = 1; i < linesLength; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the new position of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler: function(options) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler: function(options) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('tripleclick', this.tripleClickHandler);\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    // we want to avoid that an object that was selected and then becomes unselectable,\n    // may trigger editing mode in some way.\n    this.selected = this === this.canvas._activeObject;\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable || this.group ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    if (!fabric.disableStyleCopyPaste) {\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    }\n    else {\n      fabric.copiedTextStyle = null;\n    }\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length\n     + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function() {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      return this._wrapSVGTextAndBg(textAndBg);\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(\n        this._toSVG(),\n        { reviver: reviver, noStyle: true, withShadow: true }\n      );\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n'\n      ];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it on a specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false,\n          map = this._styleMap[lineIndex], mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * probably broken need a fix\n     * Returns the real style line that correspond to the wrapped lineIndex line\n     * Used just to verify if the line does exist or not.\n     * @param {Number} lineIndex\n     * @returns {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return !!this.styles[map.line];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = {};\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n      // fix a difference between split and graphemeSplit\n      if (words.length === 0) {\n        words.push([]);\n      }\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // if using splitByGrapheme words are already in graphemes.\n        word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * @return Number\n     */\n    missingNewlineOffset: function(lineIndex) {\n      if (this.splitByGrapheme) {\n        return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n      }\n      return 1;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    _removeExtraneousStyles: function() {\n      var linesToKeep = {};\n      for (var prop in this._styleMap) {\n        if (this._textLines[prop]) {\n          linesToKeep[this._styleMap[prop].line] = 1;\n        }\n      }\n      for (var prop in this.styles) {\n        if (!linesToKeep[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fabric/dist/fabric.js\n// module id = tsU9\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = ujcs\n// module chunks = 0"],"sourceRoot":""}