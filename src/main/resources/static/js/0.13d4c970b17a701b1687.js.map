{"version":3,"sources":["webpack:///src/components/ImgEditorInput.vue","webpack:///./src/components/ImgEditorInput.vue?4dd3","webpack:///./src/components/ImgEditorInput.vue","webpack:///src/components/ImgDataModify.vue","webpack:///./src/components/ImgDataModify.vue?19a8","webpack:///./src/components/ImgDataModify.vue","webpack:///src/views/ImageView.vue","webpack:///./src/views/ImageView.vue?f317","webpack:///./src/views/ImageView.vue","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js","webpack:///src/components/ImgEditor.vue","webpack:///./src/components/ImgEditor.vue?c1bf","webpack:///./src/components/ImgEditor.vue","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/fabric/dist/fabric.js","webpack:///./node_modules/ieee754/index.js"],"names":["ImgEditorInput","name","data","datas","namek1","namek2","namey1","namey2","cname","dept","rank","zcode","adr1","adr2","tel","fax","email","page","canvas","gridGroup","namek1Box","namek2Box","namey1Box","namey2Box","cnameBox","deptBox","rankBox","zcodeBox","adr1Box","adr2Box","telBox","faxBox","emailBox","pageBox","imageBox","namek1Option","namek2Option","namey1Option","namey2Option","cnameOption","deOption","rankOption","zcodeOption","adrOption","telOption","faxOption","emailOption","pageOption","imageOption","methods","addText","addNamek1","event","this","set","renderAll","sizeModify","addNamek2","addNamey1","addNamey2","addCname","addDept","addRank","addZcode","addAdr","adrBox","addTel","addFax","addEmail","addPage","saveImg","nameObject","getObjects","nameObject2","nameText","text","nameLeft","left","nameTop","top","nameColor","fill","nameWidth","width","scaleX","nameHeight","height","scaleY","nameFontSize","fontSize","nameTa","textAlign","name2Object","name2Object2","name2Text","name2Left","name2Top","name2Color","name2Width","name2Height","name2FontSize","name2Ta","cnameObject","cnameText","cnameLeft","cnameTop","cnameColor","cnameWidth","cnameHeight","cnameFontSize","cnameTa","deptObject","deptText","deptLeft","deptTop","deptColor","deptWidth","deptHeight","deptFontSize","deptTa","rankObject","rankText","rankLeft","rankTop","rankColor","rankWidth","rankHeight","rankFontSize","rankTa","zcodeObject","zcodeText","zcodeLeft","zcodeTop","zcodeColor","zcodeWidth","zcodeHeight","zcodeFontSize","zcodeTa","adrObject","adrText","adrLeft","adrTop","adrColor","adrWidth","adrHeight","adrFontSize","adrTa","telObject","telText","telLeft","telTop","telColor","telWidth","telHeight","telFontSize","telTa","faxObject","faxText","faxLeft","faxTop","faxColor","faxWidth","faxHeight","faxFontSize","faxTa","emailObject","emailText","emailLeft","emailTop","emailColor","emailWidth","emailHeight","emailFontSize","emailTa","pageObject","pageText","pageLeft","pageTop","pageColor","pageWidth","pageHeight","pageFontSize","pageTa","imgObject","console","log","imgPath","_element","src","imgX","imgY","imgScaleX","imgScaleY","$http","post","iNo","nNo","nameX","nameY","nameFont","nameW","nameHt","name2","name2X","name2Y","name2Font","name2W","name2Ht","cnameX","cnameY","cnameFont","cnameW","cnameHt","deptX","deptY","deptFont","deptW","deptHt","rankX","rankY","rankFont","rankW","rankHt","zcodeX","zcodeY","zcodeFont","zcodeW","zcodeHt","adr","adrX","adrY","adrFont","adrW","adrHt","telX","telY","telFont","telW","telHt","faxX","faxY","faxFont","faxW","faxHt","emailX","emailY","emailFont","emailW","emailHt","pageX","pageY","pageFont","pageW","pageHt","then","response","warn","catch","ex","addGrid","index","gridoption","stroke","strokeWidth","strokeDashArray","gridLines","x","push","fabric","Line","y","Group","selectable","evented","addWithUpdate","add","main","$emit","removeGrid","remove","viewText","setData","_this","get","params","res","result","fixedWidth","baseFontSize","parseInt","deptOption","vm","arr","remakeText","Textbox","imgObj","Image","onload","$data","err","largest","__lineWidths","setCanvas","Canvas","fromURL","$imgPath","oImg","setBackgroundImage","bind","objects","object","i","length","indexOf","text1","substring","text2","mounted","_this2","on","opt","t1","target","e","type","discardActiveObject","$on","beforeMount","components_ImgEditorInput","render","_vm","_h","$createElement","_c","_self","attrs","fluid","staticClass","sm","for","_v","size","keyup","model","value","callback","$$v","expression","variant","click","staticRenderFns","src_components_ImgEditorInput","__webpack_require__","normalizeComponent","ssrContext","ImgDataModify","objectX","objectY","objectFontSize","objectFont","lineWidth","objectBold","objectStyle","objectColor","objectColorOld","watch","moveXObject","moveYObject","resizeTextBox","dynamicMinWidth","onChange","boldChk","styleChk","clickColor","clickColorHex","hex","seltop","selleft","document","getElementById","style","visibility","mouseOverColor","mouseOutMap","created","Math","round","fontWeight","fontStyle","fontFamily","components_ImgDataModify","id","unchecked-value","change","$event","checked","selected","staticStyle","font-family","directives","rawName","domProps","input","composing","src_components_ImgDataModify","ImgDataModify_normalizeComponent","ImageView","components","ImgEditorComponets","ImgEditor","radius","views_ImageView","max-width","margin","margin-top","header","border-variant","align","ImageView_Component","ImageView_normalizeComponent","__webpack_exports__","exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","lookup","join","Uint8Array","Array","code","Error","start","end","num","output","global","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","copy","buffer","val","fromObject","assertSize","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","n","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","base64Slice","utf8Slice","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","trim","replace","stringtrim","base64clean","dst","components_ImgEditor","Component","module","sqrt","atan2","PiBy180","PiBy2","proto","degreesToRadians","originXOffset","originYOffset","clone","toFixed","multipleSpacesRegex","version","window","HTMLDocument","Document","implementation","createHTMLDocument","virtualWindow","JSDOM","decodeURIComponent","features","FetchExternalResources","resources","jsdomImplForWrapper","implForWrapper","nodeCanvas","DOMParser","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","targetCanvas","ctx","getContext","translate","scale","sourceY","drawImage","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","rePathCommand","reNonWord","fontPaths","iMatrix","svgNS","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","disableStyleCopyPaste","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","forceGLPutImageData","initFilterBackend","isWebglSupported","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","util","observe","prop","stopObserving","fire","options","listenersForEvent","filter","Observable","off","trigger","Collection","_objects","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","nonSplicing","splice","somethingRemoved","_onObjectRemoved","forEachObject","context","o","item","isEmpty","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","_set","key","toggle","PI","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","random","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","addEquals","vector","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","transform","xPoints","minX","yPoints","minY","invertTransform","r","number","fractionDigits","parseFloat","parseUnit","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","camelize","charAt","toUpperCase","resolveNamespace","getSvgAttributes","attributes","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onerror","loadImageInDom","div","createElement","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","enlivenedObjects","numLoadedObjects","numTotalObjects","onLoaded","forEach","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","sourcePath","populateWithProperties","destination","properties","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","copyCanvasElement","newCanvas","toDataURL","canvasEl","format","quality","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","is2x2","qrDecompose","denom","skewX","skewY","translateX","translateY","calcRotateMatrix","theta","calcDimensionsMatrix","scaleMatrix","flipX","flipY","multiply","tan","composeMatrix","matrix","customTransformMatrix","resetObjectTransform","saveObjectTransform","fn","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","parsePreserveAspectRatioAttribute","attribute","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","matrixToSVG","map","NUM_FRACTION_DIGITS","_join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","abs","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","find","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","hasOwnProperty","getWholeChar","next","prev","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","superClassMethod","createClass","initialize","shift","subclasses","couldUseAttachEvent","attachEvent","addListener","element","addEventListener","removeListener","removeEventListener","getPointer","scroll","getScrollLeftTop","_evt","touchProp","changedTouches","getTouchInfo","clientX","clientY","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","test","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","documentElement","body","scrollLeft","scrollTop","host","nodeType","defaultView","getComputedStyle","attr","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","param","addParamToUrl","open","setRequestHeader","send","noop","defaultEasing","d","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","timestamp","time","Date","duration","finish","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","color","posValue","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","fill-opacity","fill-rule","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","clip-path","clip-rule","vector-effect","colorAttributes","normalizeAttr","normalizeValue","parentAttributes","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","skewMatrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","createElementNS","firstChild","recursivelyParseGradientsXlink","gradient","referencedGradient","hasAttribute","children","referenceClone","cloneNode","removeAttribute","parseSVGDocument","parsingOptions","xlink","el2","currentTrans","oldLength","el3","setAttributeNS","nodeValue","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","lineHeight","elList","parseAttributes","parentFontSize","ownAttributes","cssAttrs","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","regex","lastIndex","gradientDef","opacityAttr","createClipPathCallback","container","_newObj","fillRule","clipRule","usingElement","objTransformInv","gTransform","clipPath","calcTransformMatrix","clipPathTag","clipPathOwner","setPositionByOrigin","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","_source","toRgb","toHsl","hsl","toHsla","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","multiplier","colorAlpha","keyValuePairs","__convertPercentUnitsToValues","instance","svgOptions","gradientUnits","propValue","finalValue","keys","offsetX","offsetY","gradientTransform","option","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","withViewport","additionalTransform","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","stops","createLinearGradient","createRadialGradient","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","nonScaling","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","renderAndResetBound","renderAndReset","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","scaleRatio","__initRetinaScaling","lowerCanvasEl","contextContainer","upperCanvasEl","contextTop","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","getElement","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","_renderBackgroundOrOverlay","needsVpt","lineTo","closePath","fillStyle","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","_toObject","__serializeBgOverlay","excludeFromExport","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","row","rowIndex","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","setShadow","strokeStyle","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","needsFullRender","_resetShadow","PencilBrush","decimate","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","pointer","_isMainEvent","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","decimatePoints","distance","adjustedDistance","lastPoint","newPoints","CircleBrush","drawDot","addPoint","dot","arc","originalRenderOnAddRemove","circles","circle","Circle","originX","originY","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","fillRect","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","targets","_hoveredTarget","_hoveredTargets","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ey","lastX","lastY","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","changeX","changeY","newScaleX","newScaleY","w","getMinWidth","_scaleObjectEqually","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","bottom","right","retinaScaling","lowerCanvasClass","_copyCanvasStyle","class","touch-action","-ms-touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","oldObject","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","cursorOffset","mr","mb","ml","addEventOptions","passive","checkClick","button","cursorMap","mainTouchId","_bindEvents","addOrRemove","_getEventPrefix","enablePointerEvents","functor","eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","_onTouchEnd","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","_target","hiddenTextarea","focus","currentTransform","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","getPointerId","evt","identifier","pointerId","isPrimary","touches","__onMouseDown","__onMouseUp","_willAddMouseDown","__onMouseMove","_shouldRender","shouldRender","isClick","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","_setCursorFromEvent","__corner","eventType","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","_transformObject","_fireOverOutEvents","fireSyntheticInOutEvents","oldTarget","evtOut","canvasEvtOut","evtIn","canvasEvtIn","_draggedoverTarget","config","inOpt","outOpt","inFires","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","newVp","originalRetina","originalContextTop","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","enlivenedCanvasClip","__setupCanvas","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","strokeUniform","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","hasStroke","hasFill","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_getNonTransformedDimensions","_removeShadow","decl","lineDashOffset","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","scaling","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_applyPatternForTransformedGradient","pCtx","pCanvas","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","utils","origParams","originalGroup","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","prefix","cache","tMatrix","_calcDimensionsTransformMatrix","flipping","dimX","dimY","noSkew","_finalizeDimensions","bbox","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","decoration","getSvgCommons","getSvgTransform","full","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","clipPathMarkup","noStyle","styleInfo","shadowInfo","withShadow","vectorEffect","absoluteClipPath","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","_setPositionDimensions","correctLeftTop","calcDim","_calcDimensions","fromSVG","diffX","diffY","commonRender","fromElementGenerator","_class","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","_getOffsetTransform","digits","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","srcFromAttribute","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","setElement","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","strokeSvg","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","sW","sH","sX","sY","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","canUseUint8Clamped","copyGLTo2D","startTime","drawImageTime","testContext","now","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","renderer","vendor","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","mainParameter","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","createImageData","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","some","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","underline","overline","linethrough","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","missingNewlineOffset","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPosition","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","doubleClickHandler","tripleClickHandler","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","minWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","linesToKeep","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2"],"mappings":"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","file":"js/0.13d4c970b17a701b1687.js","sourcesContent":["<template>\r\n<b-container fluid>\r\n  <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">お名前</label>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"namek1\" v-on:keyup=\"addNamek1\"></b-form-input>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"namek2\" v-on:keyup=\"addNamek2\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n   <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">読み</label>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"namey1\" v-on:keyup=\"addNamey1\"></b-form-input>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n        <b-form-input size=\"sm\" v-model=\"namey2\" v-on:keyup=\"addNamey2\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n   <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">会社名</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"cname\" v-on:keyup=\"addCname\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">所属</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"dept\" v-on:keyup=\"addDept\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n  <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">役職</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"rank\" v-on:keyup=\"addRank\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n  <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">郵便番号</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"zcode\" v-on:keyup=\"addZcode\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n  <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">住所１</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"adr1\" v-on:keyup=\"addAdr\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n  <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">住所２</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"adr2\" v-on:keyup=\"addAdr\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">電話番号</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"tel\" v-on:keyup=\"addTel\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">FAX</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"fax\" v-on:keyup=\"addFax\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">EMAIL</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"email\" v-on:keyup=\"addEmail\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n      <label for=\"input-small\">ホーム</label>\r\n    </b-col>\r\n    <b-col sm=\"6\">\r\n      <b-form-input size=\"sm\" v-model=\"page\" v-on:keyup=\"addPage\"></b-form-input>\r\n    </b-col>\r\n  </b-row>\r\n    <b-input-group>\r\n      <b-button variant=\"outline-primary\" v-on:click='addGrid'>girdAdd</b-button>\r\n      <b-button variant=\"outline-primary\" v-on:click='removeGrid'>girdRemove</b-button>\r\n      <b-button variant=\"outline-primary\" v-on:click='saveImg'>保存</b-button>\r\n      <b-button variant=\"outline-primary\" v-on:click='setData'>データセット</b-button>\r\n    </b-input-group>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main.js'\r\nimport { fabric } from 'fabric'\r\n\r\nexport default {\r\n  name: 'ImgEditorInput',\r\n  data () {\r\n    return {\r\n      datas: [],\r\n      namek1: '',\r\n      namek2: '',\r\n      namey1: '',\r\n      namey2: '',\r\n      cname: '',\r\n      dept: '',\r\n      rank: '',\r\n      zcode: '',\r\n      adr1: '',\r\n      adr2: '',\r\n      tel: '',\r\n      fax: '',\r\n      email: '',\r\n      page: '',\r\n      canvas: null,\r\n      gridGroup: null,\r\n      namek1Box: null,\r\n      namek2Box: null,\r\n      namey1Box: null,\r\n      namey2Box: null,\r\n      cnameBox: null,\r\n      deptBox: null,\r\n      rankBox: null,\r\n      zcodeBox: null,\r\n      adr1Box: null,\r\n      adr2Box: null,\r\n      telBox: null,\r\n      faxBox: null,\r\n      emailBox: null,\r\n      pageBox: null,\r\n      imageBox: null,\r\n      namek1Option: null,\r\n      namek2Option: null,\r\n      namey1Option: null,\r\n      namey2Option: null,\r\n      cnameOption: null,\r\n      deOption: null,\r\n      rankOption: null,\r\n      zcodeOption: null,\r\n      adrOption: null,\r\n      telOption: null,\r\n      faxOption: null,\r\n      emailOption: null,\r\n      pageOption: null,\r\n      imageOption: null\r\n    }\r\n  },\r\n  methods: {\r\n    addText: function () {\r\n\r\n    },\r\n    addNamek1: function () {\r\n      var event = this.namek1Box\r\n      event.set('text', this.namek1)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addNamek2: function () {\r\n      var event = this.namek2Box\r\n      event.set('text', this.namek2)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addNamey1: function () {\r\n      var event = this.namey1Box\r\n      event.set('text', this.namey1)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addNamey2: function () {\r\n      var event = this.namey2Box\r\n      event.set('text', this.namey2)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addCname: function () {\r\n      var event = this.cnameBox\r\n      event.set('text', this.cname)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addDept: function () {\r\n      var event = this.deptBox\r\n      event.set('text', this.dept)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addRank: function () {\r\n      var event = this.rankBox\r\n      event.set('text', this.rank)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addZcode: function () {\r\n      var event = this.zcodeBox\r\n      event.set('text', this.zcode)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addAdr: function () {\r\n      var event = this.adrBox\r\n      event.set('text', this.adr1 + ' ' + this.adr2)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addTel: function () {\r\n      var event = this.telBox\r\n      event.set('text', this.tel)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addFax: function () {\r\n      var event = this.faxBox\r\n      event.set('text', this.fax)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addEmail: function () {\r\n      var event = this.emailBox\r\n      event.set('text', this.email)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    addPage: function () {\r\n      var event = this.pageBox\r\n      event.set('text', this.page)\r\n      this.canvas.renderAll()\r\n      this.sizeModify(event)\r\n    },\r\n    saveImg: function () {\r\n      var nameObject = this.getObjects(this.canvas.getObjects('textbox'), 'namek1')\r\n      var nameObject2 = this.getObjects(this.canvas.getObjects('textbox'), 'namek2')\r\n      var nameText = nameObject.text + ' ' + nameObject2.text\r\n      var nameLeft = nameObject.left\r\n      var nameTop = nameObject.top\r\n      var nameColor = nameObject.fill\r\n      var nameWidth = nameObject.width * nameObject.scaleX\r\n      var nameHeight = nameObject.height * nameObject.scaleY\r\n      var nameFontSize = nameObject.fontSize * nameObject.scaleY\r\n      var nameTa = nameObject.textAlign\r\n      var name2Object = this.getObjects(this.canvas.getObjects('textbox'), 'namey1')\r\n      var name2Object2 = this.getObjects(this.canvas.getObjects('textbox'), 'namey2')\r\n      var name2Text = name2Object.text + ' ' + name2Object2.text\r\n      var name2Left = name2Object.left\r\n      var name2Top = name2Object.top\r\n      var name2Color = name2Object.fill\r\n      var name2Width = name2Object.width * name2Object.scaleX\r\n      var name2Height = name2Object.height * name2Object.scaleY\r\n      var name2FontSize = name2Object.fontSize * name2Object.scaleY\r\n      var name2Ta = name2Object.textAlign\r\n      var cnameObject = this.getObjects(this.canvas.getObjects('textbox'), 'cname')\r\n      var cnameText = cnameObject.text\r\n      var cnameLeft = cnameObject.left\r\n      var cnameTop = cnameObject.top\r\n      var cnameColor = cnameObject.fill\r\n      var cnameWidth = cnameObject.width * cnameObject.scaleX\r\n      var cnameHeight = cnameObject.height * cnameObject.scaleY\r\n      var cnameFontSize = cnameObject.fontSize * cnameObject.scaleY\r\n      var cnameTa = cnameObject.textAlign\r\n      var deptObject = this.getObjects(this.canvas.getObjects('textbox'), 'dept')\r\n      var deptText = deptObject.text\r\n      var deptLeft = deptObject.left\r\n      var deptTop = deptObject.top\r\n      var deptColor = deptObject.fill\r\n      var deptWidth = deptObject.width * deptObject.scaleX\r\n      var deptHeight = deptObject.height * deptObject.scaleY\r\n      var deptFontSize = deptObject.fontSize * deptObject.scaleY\r\n      var deptTa = deptObject.textAlign\r\n      var rankObject = this.getObjects(this.canvas.getObjects('textbox'), 'rank')\r\n      var rankText = rankObject.text\r\n      var rankLeft = rankObject.left\r\n      var rankTop = rankObject.top\r\n      var rankColor = rankObject.fill\r\n      var rankWidth = rankObject.width * rankObject.scaleX\r\n      var rankHeight = rankObject.height * rankObject.scaleY\r\n      var rankFontSize = rankObject.fontSize * rankObject.scaleY\r\n      var rankTa = rankObject.textAlign\r\n      var zcodeObject = this.getObjects(this.canvas.getObjects('textbox'), 'zcode')\r\n      var zcodeText = zcodeObject.text\r\n      var zcodeLeft = zcodeObject.left\r\n      var zcodeTop = zcodeObject.top\r\n      var zcodeColor = zcodeObject.fill\r\n      var zcodeWidth = zcodeObject.width * zcodeObject.scaleX\r\n      var zcodeHeight = zcodeObject.height * zcodeObject.scaleY\r\n      var zcodeFontSize = zcodeObject.fontSize * zcodeObject.scaleY\r\n      var zcodeTa = zcodeObject.textAlign\r\n      var adrObject = this.getObjects(this.canvas.getObjects('textbox'), 'adr')\r\n      var adrText = adrObject.text\r\n      var adrLeft = adrObject.left\r\n      var adrTop = adrObject.top\r\n      var adrColor = adrObject.fill\r\n      var adrWidth = adrObject.width * adrObject.scaleX\r\n      var adrHeight = adrObject.height * adrObject.scaleY\r\n      var adrFontSize = adrObject.fontSize * adrObject.scaleY\r\n      var adrTa = adrObject.textAlign\r\n      var telObject = this.getObjects(this.canvas.getObjects('textbox'), 'tel')\r\n      var telText = telObject.text\r\n      var telLeft = telObject.left\r\n      var telTop = telObject.top\r\n      var telColor = telObject.fill\r\n      var telWidth = telObject.width * telObject.scaleX\r\n      var telHeight = telObject.height * telObject.scaleY\r\n      var telFontSize = telObject.fontSize * telObject.scaleY\r\n      var telTa = telObject.textAlign\r\n      var faxObject = this.getObjects(this.canvas.getObjects('textbox'), 'fax')\r\n      var faxText = faxObject.text\r\n      var faxLeft = faxObject.left\r\n      var faxTop = faxObject.top\r\n      var faxColor = faxObject.fill\r\n      var faxWidth = faxObject.width * faxObject.scaleX\r\n      var faxHeight = faxObject.height * faxObject.scaleY\r\n      var faxFontSize = faxObject.fontSize * faxObject.scaleY\r\n      var faxTa = faxObject.textAlign\r\n      var emailObject = this.getObjects(this.canvas.getObjects('textbox'), 'email')\r\n      var emailText = emailObject.text\r\n      var emailLeft = emailObject.left\r\n      var emailTop = emailObject.top\r\n      var emailColor = emailObject.fill\r\n      var emailWidth = emailObject.width * emailObject.scaleX\r\n      var emailHeight = emailObject.height * emailObject.scaleY\r\n      var emailFontSize = emailObject.fontSize * emailObject.scaleY\r\n      var emailTa = emailObject.textAlign\r\n      var pageObject = this.getObjects(this.canvas.getObjects('textbox'), 'page')\r\n      var pageText = pageObject.text\r\n      var pageLeft = pageObject.left\r\n      var pageTop = pageObject.top\r\n      var pageColor = pageObject.fill\r\n      var pageWidth = pageObject.width * pageObject.scaleX\r\n      var pageHeight = pageObject.height * pageObject.scaleY\r\n      var pageFontSize = pageObject.fontSize * pageObject.scaleY\r\n      var pageTa = pageObject.textAlign\r\n      var imgObject = this.getObjects(this.canvas.getObjects('image'), 'img')\r\n      console.log(imgObject)\r\n      var imgPath = imgObject._element.src\r\n      var imgX = imgObject.left\r\n      var imgY = imgObject.top\r\n      var imgScaleX = imgObject.scaleX\r\n      var imgScaleY = imgObject.scaleY\r\n\r\n      this.$http.post('/imgDataInsert',\r\n        { iNo: 1,\r\n          nNo: 2,\r\n          name: nameText,\r\n          nameX: nameLeft,\r\n          nameY: nameTop,\r\n          nameColor: nameColor,\r\n          nameFont: nameFontSize,\r\n          nameW: nameWidth,\r\n          nameTa: nameTa,\r\n          nameHt: nameHeight,\r\n          name2: name2Text,\r\n          name2X: name2Left,\r\n          name2Y: name2Top,\r\n          name2Color: name2Color,\r\n          name2Font: name2FontSize,\r\n          name2W: name2Width,\r\n          name2Ta: name2Ta,\r\n          name2Ht: name2Height,\r\n          cname: cnameText,\r\n          cnameX: cnameLeft,\r\n          cnameY: cnameTop,\r\n          cnameColor: cnameColor,\r\n          cnameFont: cnameFontSize,\r\n          cnameW: cnameWidth,\r\n          cnameTa: cnameTa,\r\n          cnameHt: cnameHeight,\r\n          dept: deptText,\r\n          deptX: deptLeft,\r\n          deptY: deptTop,\r\n          deptColor: deptColor,\r\n          deptFont: deptFontSize,\r\n          deptW: deptWidth,\r\n          deptTa: deptTa,\r\n          deptHt: deptHeight,\r\n          rankText: rankText,\r\n          rankX: rankLeft,\r\n          rankY: rankTop,\r\n          rankColor: rankColor,\r\n          rankFont: rankFontSize,\r\n          rankW: rankWidth,\r\n          rankTa: rankTa,\r\n          rankHt: rankHeight,\r\n          zcode: zcodeText,\r\n          zcodeX: zcodeLeft,\r\n          zcodeY: zcodeTop,\r\n          zcodeColor: zcodeColor,\r\n          zcodeFont: zcodeFontSize,\r\n          zcodeW: zcodeWidth,\r\n          zcodeTa: zcodeTa,\r\n          zcodeHt: zcodeHeight,\r\n          adr: adrText,\r\n          adrX: adrLeft,\r\n          adrY: adrTop,\r\n          adrColor: adrColor,\r\n          adrFont: adrFontSize,\r\n          adrW: adrWidth,\r\n          adrTa: adrTa,\r\n          adrHt: adrHeight,\r\n          tel: telText,\r\n          telX: telLeft,\r\n          telY: telTop,\r\n          telColor: telColor,\r\n          telFont: telFontSize,\r\n          telW: telWidth,\r\n          telTa: telTa,\r\n          telHt: telHeight,\r\n          fax: faxText,\r\n          faxX: faxLeft,\r\n          faxY: faxTop,\r\n          faxColor: faxColor,\r\n          faxFont: faxFontSize,\r\n          faxW: faxWidth,\r\n          faxTa: faxTa,\r\n          faxHt: faxHeight,\r\n          email: emailText,\r\n          emailX: emailLeft,\r\n          emailY: emailTop,\r\n          emailColor: emailColor,\r\n          emailFont: emailFontSize,\r\n          emailW: emailWidth,\r\n          emailTa: emailTa,\r\n          emailHt: emailHeight,\r\n          page: pageText,\r\n          pageX: pageLeft,\r\n          pageY: pageTop,\r\n          pageColor: pageColor,\r\n          pageFont: pageFontSize,\r\n          pageW: pageWidth,\r\n          pageTa: pageTa,\r\n          pageHt: pageHeight,\r\n          imgPath: imgPath,\r\n          imgX: imgX,\r\n          imgY: imgY,\r\n          imgScaleX: imgScaleX,\r\n          imgScaleY: imgScaleY }\r\n      ).then(response => {\r\n        console.warn(response)\r\n      }).catch((ex) => {\r\n        console.warn('ERROR!!!!! : ', ex)\r\n      })\r\n      /*  var image = new Image()\r\n      image = this.canvas.toDataURL('image/jpg')\r\n      var formdata = image.replace(/^data:image\\/(png|jpg);base64,/, '')\r\n      this.$http.post('/imgModify',\r\n        { imgByte: formdata }\r\n      ).then(response => {\r\n        console.warn(response)\r\n      }).catch((ex) => {\r\n        console.warn('ERROR!!!!! : ', ex)\r\n      }) */\r\n    },\r\n    addGrid: function () {\r\n      if (this.gridGroup) return\r\n      var gridoption = {\r\n        stroke: '#D5D5D5',\r\n        strokeWidth: 1,\r\n        strokeDashArray: [1, 1]\r\n      }\r\n      var gridLines = []\r\n      var index\r\n      if (this.canvas.width < this.canvas.height) {\r\n        index = this.canvas.height\r\n      } else {\r\n        index = this.canvas.width\r\n      }\r\n      for (var x = 30; x <= (index); x += 50) {\r\n        gridLines.push(new fabric.Line([x, 0, x, index], gridoption))\r\n      }\r\n      for (var y = 25; y <= (index); y += 50) {\r\n        gridLines.push(new fabric.Line([0, y, index, y], gridoption))\r\n      }\r\n      this.gridGroup = new fabric.Group(gridLines, {\r\n        selectable: false,\r\n        evented: false\r\n      })\r\n      this.gridGroup.addWithUpdate()\r\n      this.canvas.add(this.gridGroup)\r\n      eventBus.$emit('canvas', this.canvas)\r\n    },\r\n    removeGrid: function () {\r\n      this.gridGroup && this.canvas.remove(this.gridGroup)\r\n      this.gridGroup = null\r\n      eventBus.$emit('canvas', this.canvas)\r\n    },\r\n    viewText: function () {\r\n\r\n    },\r\n    setData: function () {\r\n      this.$http.get('/imgData', { params: { nNo: '2' } })\r\n        .then(res => {\r\n          this.datas = res.data.result\r\n          this.namek1Option = {\r\n            width: this.datas.nameW,\r\n            left: this.datas.nameX,\r\n            top: this.datas.nameY,\r\n            fontSize: this.datas.nameFont,\r\n            textAlign: this.datas.nameTa,\r\n            fixedWidth: this.datas.nameW,\r\n            baseFontSize: this.datas.nameFont,\r\n            name: 'namek1',\r\n            fill: this.datas.nameColor\r\n          }\r\n          this.namek2Option = {\r\n            width: this.datas.nameW,\r\n            left: this.datas.nameX + 75,\r\n            top: this.datas.nameY,\r\n            fontSize: this.datas.nameFont,\r\n            textAlign: this.datas.nameTa,\r\n            fixedWidth: this.datas.nameW,\r\n            baseFontSize: this.datas.nameFont,\r\n            name: 'namek2',\r\n            fill: this.datas.nameColor\r\n          }\r\n          this.namey1Option = {\r\n            width: this.datas.name2W,\r\n            left: this.datas.name2X,\r\n            top: this.datas.name2Y,\r\n            fontSize: this.datas.name2Font,\r\n            textAlign: this.datas.name2Ta,\r\n            fixedWidth: this.datas.name2W,\r\n            baseFontSize: this.datas.name2Font,\r\n            name: 'namey1',\r\n            fill: this.datas.name2Color\r\n          }\r\n          this.namey2Option = {\r\n            width: this.datas.name2W,\r\n            left: this.datas.name2X + 75,\r\n            top: this.datas.name2Y,\r\n            fontSize: this.datas.name2Font,\r\n            textAlign: this.datas.name2Ta,\r\n            fixedWidth: this.datas.name2W,\r\n            baseFontSize: this.datas.name2Font,\r\n            name: 'namey2',\r\n            fill: this.datas.name2Color\r\n          }\r\n          this.cnameOption = {\r\n            width: this.datas.cnameW,\r\n            left: this.datas.cnameX,\r\n            top: this.datas.cnameY,\r\n            fontSize: parseInt(this.datas.cnameFont),\r\n            textAlign: this.datas.cnameTa,\r\n            fixedWidth: this.datas.cnameW,\r\n            baseFontSize: parseInt(this.datas.cnameFont),\r\n            name: 'cname',\r\n            fill: '#000000',\r\n            height: this.datas.cnameHt\r\n          }\r\n\r\n          this.deptOption = {\r\n            width: this.datas.deptW,\r\n            left: this.datas.deptX,\r\n            top: this.datas.deptY,\r\n            fontSize: this.datas.deptFont,\r\n            textAlign: this.datas.deptTa,\r\n            fixedWidth: this.datas.deptW,\r\n            baseFontSize: this.datas.deptFont,\r\n            name: 'dept',\r\n            fill: this.datas.deptColor\r\n          }\r\n          this.rankOption = {\r\n            width: this.datas.rankW,\r\n            left: this.datas.rankX,\r\n            top: this.datas.rankY,\r\n            fontSize: this.datas.rankFont,\r\n            textAlign: this.datas.rankTa,\r\n            fixedWidth: this.datas.rankW,\r\n            baseFontSize: this.datas.rankFont,\r\n            name: 'rank',\r\n            fill: this.datas.rankColor\r\n          }\r\n          this.zcodeOption = {\r\n            width: this.datas.zcodeW,\r\n            left: this.datas.zcodeX,\r\n            top: this.datas.zcodeY,\r\n            fontSize: this.datas.zcodeFont,\r\n            textAlign: this.datas.zcodeTa,\r\n            fixedWidth: this.datas.zcodeW,\r\n            baseFontSize: this.datas.zcodeFont,\r\n            name: 'zcode',\r\n            fill: this.datas.zcodeColor\r\n          }\r\n          this.adrOption = {\r\n            width: this.datas.adrW,\r\n            left: this.datas.adrX,\r\n            top: this.datas.adrY,\r\n            fontSize: this.datas.adrFont,\r\n            textAlign: this.datas.adrTa,\r\n            fixedWidth: this.datas.adrW,\r\n            baseFontSize: this.datas.adrFont,\r\n            name: 'adr',\r\n            fill: this.datas.adrColor\r\n          }\r\n          this.telOption = {\r\n            width: this.datas.telW,\r\n            left: this.datas.telX,\r\n            top: this.datas.telY,\r\n            fontSize: this.datas.telFont,\r\n            textAlign: this.datas.telTa,\r\n            fixedWidth: this.datas.telW,\r\n            baseFontSize: this.datas.telFont,\r\n            name: 'tel',\r\n            fill: this.datas.telColor\r\n          }\r\n          this.faxOption = {\r\n            width: this.datas.faxW,\r\n            left: this.datas.faxX,\r\n            top: this.datas.faxY,\r\n            fontSize: this.datas.faxFont,\r\n            textAlign: this.datas.faxTa,\r\n            fixedWidth: this.datas.faxW,\r\n            baseFontSize: this.datas.faxFont,\r\n            name: 'fax',\r\n            fill: this.datas.faxColor\r\n          }\r\n          this.emailOption = {\r\n            width: this.datas.emailW,\r\n            left: this.datas.emailX,\r\n            top: this.datas.emailY,\r\n            fontSize: this.datas.emailFont,\r\n            textAlign: this.datas.emailTa,\r\n            fixedWidth: this.datas.emailW,\r\n            baseFontSize: this.datas.emailFont,\r\n            name: 'email',\r\n            fill: this.datas.emailColor\r\n          }\r\n          this.pageOption = {\r\n            width: this.datas.pageW,\r\n            left: this.datas.pageX,\r\n            top: this.datas.pageY,\r\n            fontSize: this.datas.pageFont,\r\n            textAlign: this.datas.pageTa,\r\n            fixedWidth: this.datas.pageW,\r\n            baseFontSize: this.datas.pageFont,\r\n            name: 'page',\r\n            fill: this.datas.pageColor\r\n          }\r\n          this.imageOption = {\r\n            left: this.datas.imgX,\r\n            top: this.datas.imgY,\r\n            scaleX: this.datas.imgScaleX,\r\n            scaleY: this.datas.imgScaleY,\r\n            name: 'img'\r\n          }\r\n          var vm = this\r\n          var arr = this.remakeText(this.datas.name)\r\n          this.namek1 = arr['text1']\r\n          this.namek2 = arr['text2']\r\n          arr = this.remakeText(this.datas.name2)\r\n          this.namey1 = arr['text1']\r\n          this.namey2 = arr['text2']\r\n          this.cname = this.datas.cname\r\n          this.dept = this.datas.dept\r\n          this.rank = this.datas.rankText\r\n          this.zcode = this.datas.zcode\r\n          arr = this.remakeText(this.datas.adr)\r\n          this.adr1 = arr['text1']\r\n          this.adr2 = arr['text2']\r\n          this.tel = this.datas.tel\r\n          this.fax = this.datas.fax\r\n          this.email = this.datas.email\r\n          this.page = this.datas.page\r\n\r\n          this.namek1Box = new fabric.Textbox(this.namek1, this.namek1Option)\r\n          this.namek2Box = new fabric.Textbox(this.namek2, this.namek2Option)\r\n          this.namey1Box = new fabric.Textbox(this.namey1, this.namey1Option)\r\n          this.namey2Box = new fabric.Textbox(this.namey2, this.namey2Option)\r\n          this.cnameBox = new fabric.Textbox(this.cname, this.cnameOption)\r\n          this.deptBox = new fabric.Textbox(this.dept, this.deptOption)\r\n          this.rankBox = new fabric.Textbox(this.rank, this.rankOption)\r\n          this.zcodeBox = new fabric.Textbox(this.zcode, this.zcodeOption)\r\n          this.adrBox = new fabric.Textbox(this.datas.adr, this.adrOption)\r\n          this.telBox = new fabric.Textbox(this.tel, this.telOption)\r\n          this.faxBox = new fabric.Textbox(this.fax, this.faxOption)\r\n          this.emailBox = new fabric.Textbox(this.email, this.emailOption)\r\n          this.pageBox = new fabric.Textbox(this.page, this.pageOption)\r\n          var imgObj = new Image()\r\n          imgObj.src = this.datas.imgPath\r\n          imgObj.onload = function () {\r\n            vm.imageBox = new fabric.Image(imgObj, vm.$data.imageOption)\r\n            vm.canvas.add(vm.imageBox)\r\n          }\r\n          this.canvas.add(this.namek1Box)\r\n          this.canvas.add(this.namek2Box)\r\n          this.canvas.add(this.namey1Box)\r\n          this.canvas.add(this.namey2Box)\r\n          this.canvas.add(this.cnameBox)\r\n          this.canvas.add(this.deptBox)\r\n          this.canvas.add(this.rankBox)\r\n          this.canvas.add(this.zcodeBox)\r\n          this.canvas.add(this.adrBox)\r\n          this.canvas.add(this.telBox)\r\n          this.canvas.add(this.faxBox)\r\n          this.canvas.add(this.emailBox)\r\n          this.canvas.add(this.pageBox)\r\n          this.canvas.renderAll()\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    },\r\n    sizeModify: function (event) {\r\n      var largest = event.__lineWidths[0]\r\n      if (event.width >= largest) {\r\n        if (largest !== 0) {\r\n          event.width = largest\r\n        }\r\n      }\r\n    },\r\n    setCanvas: function () {\r\n      var canvas = new fabric.Canvas('canvas')\r\n      this.canvas = canvas\r\n\r\n      fabric.Image.fromURL(this.$imgPath + 'smp.png', function (oImg) {\r\n        oImg.set({\r\n          // Set the image size by scale, which is the same size as the canvas\r\n          scaleX: canvas.width / oImg.width,\r\n          scaleY: canvas.height / oImg.height\r\n        })\r\n        // Setting Background\r\n        canvas.setBackgroundImage(oImg, canvas.renderAll.bind(canvas))\r\n        canvas.renderAll()\r\n        eventBus.$emit('canvas', canvas)\r\n      })\r\n    },\r\n    // nameでcanvasのOBJECT取得\r\n    getObjects: function (objects, name) {\r\n      var object = null\r\n      for (var i = 0; i < objects.length; i++) {\r\n        if (objects[i].name && objects[i].name === name) {\r\n          object = objects[i]\r\n          break\r\n        }\r\n      }\r\n      return object\r\n    },\r\n    remakeText: function (text) {\r\n      var index = text.indexOf(' ')\r\n      var text1 = text.substring(0, index)\r\n      var text2 = text.substring(index + 1, text.length)\r\n      var arry = { text1, text2 }\r\n      return arry\r\n    }\r\n  },\r\n  mounted () {\r\n    this.setCanvas()\r\n    /*  this.setData() */\r\n\r\n    var vm = this\r\n    this.canvas.on('text:changed', function (opt) {\r\n      var t1 = opt.target\r\n      var largest = t1.__lineWidths[0]\r\n      if (t1.width >= largest) {\r\n        if (largest !== 0) {\r\n          t1.width = largest\r\n        }\r\n      }\r\n      if (opt.target.name === 'namek1') {\r\n        vm.$data.namek2Box.left = opt.target.width + 70\r\n      }\r\n      if (opt.target.name === 'namey1') {\r\n        vm.$data.namey2Box.left = opt.target.width + 70\r\n      }\r\n      /* if (t1.width >= largest) {\r\n        if (Math.round(t1.fontSize) < t1.baseFontSize) {\r\n          t1.fontSize *= t1.width / (largest)\r\n        } else {\r\n          t1.fontSize = t1.baseFontSize\r\n        }\r\n      }\r\n      if (t1.width > t1.fixedWidth) {\r\n        t1.fontSize *= t1.fixedWidth / (t1.width)\r\n        t1.width = t1.fixedWidth\r\n      } */\r\n      var index = 0\r\n      var text1 = ''\r\n      var text2 = ''\r\n      if (t1.name === 'cname') {\r\n        vm.$data.cname = t1.text\r\n      } else if (t1.name === 'namek1') {\r\n        vm.$data.namek1 = t1.text\r\n      } else if (t1.name === 'namek2') {\r\n        vm.$data.namek2 = t1.text\r\n      } else if (t1.name === 'namey1') {\r\n        vm.$data.namey1 = t1.text\r\n      } else if (t1.name === 'namey2') {\r\n        vm.$data.namey2 = t1.text\r\n      } else if (t1.name === 'dept') {\r\n        vm.$data.dept = t1.text\r\n      } else if (t1.name === 'rank') {\r\n        vm.$data.rank = t1.text\r\n      } else if (t1.name === 'zcode') {\r\n        vm.$data.zcode = t1.text\r\n      } else if (t1.name === 'adr') {\r\n        index = t1.text.indexOf(' ')\r\n        text1 = t1.text.substring(0, index)\r\n        text2 = t1.text.substring(index + 1, t1.text.length)\r\n        vm.$data.adr1 = text1\r\n        vm.$data.adr2 = text2\r\n      } else if (t1.name === 'tel') {\r\n        vm.$data.tel = t1.text\r\n      } else if (t1.name === 'fax') {\r\n        vm.$data.fax = t1.text\r\n      } else if (t1.name === 'email') {\r\n        vm.$data.email = t1.text\r\n      } else if (t1.name === 'page') {\r\n        vm.$data.page = t1.text\r\n      }\r\n    })\r\n    // objectクリック時情報渡す。\r\n    this.canvas.on('mouse:up', function (opt) {\r\n      var t1 = opt.target\r\n      if (t1 != null) {\r\n        eventBus.$emit('data', t1)\r\n      }\r\n    })\r\n    this.canvas.on('selection:cleared', function () {\r\n    })\r\n    // 多重選択禁止。\r\n    this.canvas.on('selection:created', (e) => {\r\n      if (e.target.type === 'activeSelection') {\r\n        this.canvas.discardActiveObject()\r\n      } else {\r\n        // do nothing\r\n      }\r\n    })\r\n    eventBus.$on('object', (object) => {\r\n      vm.$data.canvas.renderAll()\r\n      eventBus.$emit('canvas', vm.$data.canvas)\r\n    })\r\n  },\r\n  beforeMount () {\r\n\r\n  }\r\n}\r\n</script>\r\n<style>\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ImgEditorInput.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"お名前\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addNamek1},model:{value:(_vm.namek1),callback:function ($$v) {_vm.namek1=$$v},expression:\"namek1\"}})],1),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addNamek2},model:{value:(_vm.namek2),callback:function ($$v) {_vm.namek2=$$v},expression:\"namek2\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"読み\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addNamey1},model:{value:(_vm.namey1),callback:function ($$v) {_vm.namey1=$$v},expression:\"namey1\"}})],1),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addNamey2},model:{value:(_vm.namey2),callback:function ($$v) {_vm.namey2=$$v},expression:\"namey2\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"会社名\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addCname},model:{value:(_vm.cname),callback:function ($$v) {_vm.cname=$$v},expression:\"cname\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"所属\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addDept},model:{value:(_vm.dept),callback:function ($$v) {_vm.dept=$$v},expression:\"dept\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"役職\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addRank},model:{value:(_vm.rank),callback:function ($$v) {_vm.rank=$$v},expression:\"rank\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"郵便番号\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addZcode},model:{value:(_vm.zcode),callback:function ($$v) {_vm.zcode=$$v},expression:\"zcode\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"住所１\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addAdr},model:{value:(_vm.adr1),callback:function ($$v) {_vm.adr1=$$v},expression:\"adr1\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"住所２\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addAdr},model:{value:(_vm.adr2),callback:function ($$v) {_vm.adr2=$$v},expression:\"adr2\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"電話番号\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addTel},model:{value:(_vm.tel),callback:function ($$v) {_vm.tel=$$v},expression:\"tel\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"FAX\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addFax},model:{value:(_vm.fax),callback:function ($$v) {_vm.fax=$$v},expression:\"fax\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"EMAIL\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addEmail},model:{value:(_vm.email),callback:function ($$v) {_vm.email=$$v},expression:\"email\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"ホーム\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.addPage},model:{value:(_vm.page),callback:function ($$v) {_vm.page=$$v},expression:\"page\"}})],1)],1),_vm._v(\" \"),_c('b-input-group',[_c('b-button',{attrs:{\"variant\":\"outline-primary\"},on:{\"click\":_vm.addGrid}},[_vm._v(\"girdAdd\")]),_vm._v(\" \"),_c('b-button',{attrs:{\"variant\":\"outline-primary\"},on:{\"click\":_vm.removeGrid}},[_vm._v(\"girdRemove\")]),_vm._v(\" \"),_c('b-button',{attrs:{\"variant\":\"outline-primary\"},on:{\"click\":_vm.saveImg}},[_vm._v(\"保存\")]),_vm._v(\" \"),_c('b-button',{attrs:{\"variant\":\"outline-primary\"},on:{\"click\":_vm.setData}},[_vm._v(\"データセット\")])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-32e25305\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ImgEditorInput.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-32e25305\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ImgEditorInput.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgEditorInput.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgEditorInput.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-32e25305\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ImgEditorInput.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ImgEditorInput.vue\n// module id = null\n// module chunks = ","<template>\r\n  <b-container fluid>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">X</label>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"objectX\" v-on:keyup=\"moveXObject\"> </b-form-input>\r\n    </b-col>\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">Y</label>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"objectY\" v-on:keyup=\"moveYObject\"></b-form-input>\r\n    </b-col>\r\n    </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">fontsize</label>\r\n     </b-col>\r\n     <b-col sm=\"3\">\r\n      <b-form-input size=\"sm\" v-model=\"objectFontSize\"  v-on:keyup=\"resizeTextBox\"></b-form-input>\r\n     </b-col>\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">fontWeight</label>\r\n     </b-col>\r\n     <b-col sm=\"3\">\r\n      <b-form-checkbox id=\"checkbox-1\" v-model=\"objectBold\" name=\"checkbox-1\" value=\"bold\"  unchecked-value=\"\" @change=\"boldChk($event)\">\r\n      BOLD\r\n      </b-form-checkbox>\r\n     </b-col>\r\n    </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">fontStyle</label>\r\n     </b-col>\r\n      <b-col sm=\"4\">\r\n        <b-form-radio v-model=\"objectStyle\"  value=\"normal\"  @change=\"styleChk($event)\" checked>\r\n        normal\r\n        </b-form-radio>\r\n      </b-col>\r\n      <b-col sm=\"4\">\r\n        <b-form-radio v-model=\"objectStyle\"  value=\"italic\"  @change=\"styleChk($event)\">\r\n        italic\r\n        </b-form-radio>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"3\">\r\n       <label for=\"input-small\">font</label>\r\n    </b-col>\r\n    <b-col sm=\"9\">\r\n      <b-form-select  v-model=\"objectFont\" class=\"mb-3\" v-on:change=\"onChange($event)\" >\r\n        <b-form-select-option value=\"\" selected></b-form-select-option>\r\n<!--         <b-form-select-option value=\"M PLUS 1p, sans-serif\" style=\"font-family: 'M PLUS 1p', sans-serif;\">M PLUS 1p</b-form-select-option>\r\n        <b-form-select-option value=\"M PLUS Rounded 1c, sans-serif\" style=\"font-family: 'M PLUS Rounded 1c', sans-serif;\">M PLUS Rounded 1c</b-form-select-option> -->\r\n        <b-form-select-option value=\"Kosugi, sans-serif\" style=\"font-family: 'Kosugi', sans-serif;\">Kosugi</b-form-select-option>\r\n        <b-form-select-option value=\"Kosugi Maru, sans-serif\" style=\"font-family: 'Kosugi Maru', sans-serif;\">Kosugi Maru</b-form-select-option>\r\n        <b-form-select-option value=\"Noto Sans, sans-serif\" style=\"font-family: 'Noto Sans JP', sans-serif;\">Noto Sans JP</b-form-select-option>\r\n        <b-form-select-option value=\"Noto Serif JP, serif\" style=\"font-family: 'Noto Serif JP', serif;\">Noto Serif JP</b-form-select-option>\r\n        <b-form-select-option value=\"Sawarabi Mincho, sans-serif\" style=\"font-family: 'Sawarabi Mincho', sans-serif;\">Sawarabi Mincho</b-form-select-option>\r\n        <b-form-select-option value=\"Sawarabi Gothic, sans-serif\" style=\"font-family: 'Sawarabi Gothic', sans-serif;\">Sawarabi Gothic</b-form-select-option>\r\n      </b-form-select>\r\n    </b-col>\r\n    </b-row>\r\n    <b-row class=\"my-1\">\r\n    <b-col sm=\"3\">\r\n       <label for=\"input-small\">color</label>\r\n    </b-col>\r\n    <b-col sm=\"3\">\r\n      <input type=\"color\" v-model=\"objectColor\" value=\"\"  v-on:change=\"clickColor()\" style=\"width:85%;\">\r\n    </b-col>\r\n    </b-row>\r\n    <!-- Color picker -->\r\n    <!-- <b-row class=\"my-1\">\r\n    <b-col sm=\"9\">\r\n    <img style='margin-right:2px;' src='https://www.w3schools.com/colors/img_colormap.gif' usemap='#colormap' alt='colormap' />\r\n    <map id='colormap' name='colormap' v-on:mouseout='mouseOutMap()' >\r\n      <area style='cursor:pointer' shape='poly' coords='63,0,72,4,72,15,63,19,54,15,54,4' v-on:click='clickColorHex(\"#003366\",-200,54)'  v-on:mouseover ='mouseOverColor(\"#003366\")' alt='#003366' />\r\n      <area style='cursor:pointer' shape='poly' coords='81,0,90,4,90,15,81,19,72,15,72,4' v-on:click='clickColorHex(\"#336699\",-200,72)' v-on:mouseover ='mouseOverColor(\"#336699\")' alt='#336699' />\r\n      <area style='cursor:pointer' shape='poly' coords='99,0,108,4,108,15,99,19,90,15,90,4' v-on:click='clickColorHex(\"#3366CC\",-200,90)' v-on:mouseover ='mouseOverColor(\"#3366CC\")' alt='#3366CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='117,0,126,4,126,15,117,19,108,15,108,4' v-on:click='clickColorHex(\"#003399\",-200,108)' v-on:mouseover ='mouseOverColor(\"#003399\")' alt='#003399' />\r\n      <area style='cursor:pointer' shape='poly' coords='135,0,144,4,144,15,135,19,126,15,126,4' v-on:click='clickColorHex(\"#000099\",-200,126)' v-on:mouseover ='mouseOverColor(\"#000099\")' alt='#000099' />\r\n      <area style='cursor:pointer' shape='poly' coords='153,0,162,4,162,15,153,19,144,15,144,4' v-on:click='clickColorHex(\"#0000CC\",-200,144)' v-on:mouseover ='mouseOverColor(\"#0000CC\")' alt='#0000CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='171,0,180,4,180,15,171,19,162,15,162,4' v-on:click='clickColorHex(\"#000066\",-200,162)' v-on:mouseover ='mouseOverColor(\"#000066\")' alt='#000066' />\r\n      <area style='cursor:pointer' shape='poly' coords='54,15,63,19,63,30,54,34,45,30,45,19' v-on:click='clickColorHex(\"#006666\",-185,45)' v-on:mouseover ='mouseOverColor(\"#006666\")' alt='#006666' />\r\n      <area style='cursor:pointer' shape='poly' coords='72,15,81,19,81,30,72,34,63,30,63,19' v-on:click='clickColorHex(\"#006699\",-185,63)' v-on:mouseover ='mouseOverColor(\"#006699\")' alt='#006699' />\r\n      <area style='cursor:pointer' shape='poly' coords='90,15,99,19,99,30,90,34,81,30,81,19' v-on:click='clickColorHex(\"#0099CC\",-185,81)' v-on:mouseover ='mouseOverColor(\"#0099CC\")' alt='#0099CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='108,15,117,19,117,30,108,34,99,30,99,19' v-on:click='clickColorHex(\"#0066CC\",-185,99)' v-on:mouseover ='mouseOverColor(\"#0066CC\")' alt='#0066CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='126,15,135,19,135,30,126,34,117,30,117,19' v-on:click='clickColorHex(\"#0033CC\",-185,117)' v-on:mouseover ='mouseOverColor(\"#0033CC\")' alt='#0033CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='144,15,153,19,153,30,144,34,135,30,135,19' v-on:click='clickColorHex(\"#0000FF\",-185,135)' v-on:mouseover ='mouseOverColor(\"#0000FF\")' alt='#0000FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='162,15,171,19,171,30,162,34,153,30,153,19' v-on:click='clickColorHex(\"#3333FF\",-185,153)' v-on:mouseover ='mouseOverColor(\"#3333FF\")' alt='#3333FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='180,15,189,19,189,30,180,34,171,30,171,19' v-on:click='clickColorHex(\"#333399\",-185,171)' v-on:mouseover ='mouseOverColor(\"#333399\")' alt='#333399' />\r\n      <area style='cursor:pointer' shape='poly' coords='45,30,54,34,54,45,45,49,36,45,36,34' v-on:click='clickColorHex(\"#669999\",-170,36)' v-on:mouseover ='mouseOverColor(\"#669999\")' alt='#669999' />\r\n      <area style='cursor:pointer' shape='poly' coords='63,30,72,34,72,45,63,49,54,45,54,34' v-on:click='clickColorHex(\"#009999\",-170,54)' v-on:mouseover ='mouseOverColor(\"#009999\")' alt='#009999' />\r\n      <area style='cursor:pointer' shape='poly' coords='81,30,90,34,90,45,81,49,72,45,72,34' v-on:click='clickColorHex(\"#33CCCC\",-170,72)' v-on:mouseover ='mouseOverColor(\"#33CCCC\")' alt='#33CCCC' />\r\n      <area style='cursor:pointer' shape='poly' coords='99,30,108,34,108,45,99,49,90,45,90,34' v-on:click='clickColorHex(\"#00CCFF\",-170,90)' v-on:mouseover ='mouseOverColor(\"#00CCFF\")' alt='#00CCFF' />\r\n      <area style='cursor:pointer' shape='poly' coords='117,30,126,34,126,45,117,49,108,45,108,34' v-on:click='clickColorHex(\"#0099FF\",-170,108)' v-on:mouseover ='mouseOverColor(\"#0099FF\")' alt='#0099FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='135,30,144,34,144,45,135,49,126,45,126,34' v-on:click='clickColorHex(\"#0066FF\",-170,126)' v-on:mouseover ='mouseOverColor(\"#0066FF\")' alt='#0066FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='153,30,162,34,162,45,153,49,144,45,144,34' v-on:click='clickColorHex(\"#3366FF\",-170,144)' v-on:mouseover ='mouseOverColor(\"#3366FF\")' alt='#3366FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='171,30,180,34,180,45,171,49,162,45,162,34' v-on:click='clickColorHex(\"#3333CC\",-170,162)' v-on:mouseover ='mouseOverColor(\"#3333CC\")' alt='#3333CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='189,30,198,34,198,45,189,49,180,45,180,34' v-on:click='clickColorHex(\"#666699\",-170,180)' v-on:mouseover ='mouseOverColor(\"#666699\")' alt='#666699' />\r\n      <area style='cursor:pointer' shape='poly' coords='36,45,45,49,45,60,36,64,27,60,27,49' v-on:click='clickColorHex(\"#339966\",-155,27)' v-on:mouseover ='mouseOverColor(\"#339966\")' alt='#339966' />\r\n      <area style='cursor:pointer' shape='poly' coords='54,45,63,49,63,60,54,64,45,60,45,49' v-on:click='clickColorHex(\"#00CC99\",-155,45)' v-on:mouseover ='mouseOverColor(\"#00CC99\")' alt='#00CC99' />\r\n      <area style='cursor:pointer' shape='poly' coords='72,45,81,49,81,60,72,64,63,60,63,49' v-on:click='clickColorHex(\"#00FFCC\",-155,63)' v-on:mouseover ='mouseOverColor(\"#00FFCC\")' alt='#00FFCC' />\r\n      <area style='cursor:pointer' shape='poly' coords='90,45,99,49,99,60,90,64,81,60,81,49' v-on:click='clickColorHex(\"#00FFFF\",-155,81)' v-on:mouseover ='mouseOverColor(\"#00FFFF\")' alt='#00FFFF' />\r\n      <area style='cursor:pointer' shape='poly' coords='108,45,117,49,117,60,108,64,99,60,99,49' v-on:click='clickColorHex(\"#33CCFF\",-155,99)' v-on:mouseover ='mouseOverColor(\"#33CCFF\")' alt='#33CCFF' />\r\n      <area style='cursor:pointer' shape='poly' coords='126,45,135,49,135,60,126,64,117,60,117,49' v-on:click='clickColorHex(\"#3399FF\",-155,117)' v-on:mouseover ='mouseOverColor(\"#3399FF\")' alt='#3399FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='144,45,153,49,153,60,144,64,135,60,135,49' v-on:click='clickColorHex(\"#6699FF\",-155,135)' v-on:mouseover ='mouseOverColor(\"#6699FF\")' alt='#6699FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='162,45,171,49,171,60,162,64,153,60,153,49' v-on:click='clickColorHex(\"#6666FF\",-155,153)' v-on:mouseover ='mouseOverColor(\"#6666FF\")' alt='#6666FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='180,45,189,49,189,60,180,64,171,60,171,49' v-on:click='clickColorHex(\"#6600FF\",-155,171)' v-on:mouseover ='mouseOverColor(\"#6600FF\")' alt='#6600FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='198,45,207,49,207,60,198,64,189,60,189,49' v-on:click='clickColorHex(\"#6600CC\",-155,189)' v-on:mouseover ='mouseOverColor(\"#6600CC\")' alt='#6600CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='27,60,36,64,36,75,27,79,18,75,18,64' v-on:click='clickColorHex(\"#339933\",-140,18)' v-on:mouseover ='mouseOverColor(\"#339933\")' alt='#339933' />\r\n      <area style='cursor:pointer' shape='poly' coords='45,60,54,64,54,75,45,79,36,75,36,64' v-on:click='clickColorHex(\"#00CC66\",-140,36)' v-on:mouseover ='mouseOverColor(\"#00CC66\")' alt='#00CC66' />\r\n      <area style='cursor:pointer' shape='poly' coords='63,60,72,64,72,75,63,79,54,75,54,64' v-on:click='clickColorHex(\"#00FF99\",-140,54)' v-on:mouseover ='mouseOverColor(\"#00FF99\")' alt='#00FF99' />\r\n      <area style='cursor:pointer' shape='poly' coords='81,60,90,64,90,75,81,79,72,75,72,64' v-on:click='clickColorHex(\"#66FFCC\",-140,72)' v-on:mouseover ='mouseOverColor(\"#66FFCC\")' alt='#66FFCC' />\r\n      <area style='cursor:pointer' shape='poly' coords='99,60,108,64,108,75,99,79,90,75,90,64' v-on:click='clickColorHex(\"#66FFFF\",-140,90)' v-on:mouseover ='mouseOverColor(\"#66FFFF\")' alt='#66FFFF' />\r\n      <area style='cursor:pointer' shape='poly' coords='117,60,126,64,126,75,117,79,108,75,108,64' v-on:click='clickColorHex(\"#66CCFF\",-140,108)' v-on:mouseover ='mouseOverColor(\"#66CCFF\")' alt='#66CCFF' />\r\n      <area style='cursor:pointer' shape='poly' coords='135,60,144,64,144,75,135,79,126,75,126,64' v-on:click='clickColorHex(\"#99CCFF\",-140,126)' v-on:mouseover ='mouseOverColor(\"#99CCFF\")' alt='#99CCFF' />\r\n      <area style='cursor:pointer' shape='poly' coords='153,60,162,64,162,75,153,79,144,75,144,64' v-on:click='clickColorHex(\"#9999FF\",-140,144)' v-on:mouseover ='mouseOverColor(\"#9999FF\")' alt='#9999FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='171,60,180,64,180,75,171,79,162,75,162,64' v-on:click='clickColorHex(\"#9966FF\",-140,162)' v-on:mouseover ='mouseOverColor(\"#9966FF\")' alt='#9966FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='189,60,198,64,198,75,189,79,180,75,180,64' v-on:click='clickColorHex(\"#9933FF\",-140,180)' v-on:mouseover ='mouseOverColor(\"#9933FF\")' alt='#9933FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='207,60,216,64,216,75,207,79,198,75,198,64' v-on:click='clickColorHex(\"#9900FF\",-140,198)' v-on:mouseover ='mouseOverColor(\"#9900FF\")' alt='#9900FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='18,75,27,79,27,90,18,94,9,90,9,79' v-on:click='clickColorHex(\"#006600\",-125,9)' v-on:mouseover ='mouseOverColor(\"#006600\")' alt='#006600' />\r\n      <area style='cursor:pointer' shape='poly' coords='36,75,45,79,45,90,36,94,27,90,27,79' v-on:click='clickColorHex(\"#00CC00\",-125,27)' v-on:mouseover ='mouseOverColor(\"#00CC00\")' alt='#00CC00' />\r\n      <area style='cursor:pointer' shape='poly' coords='54,75,63,79,63,90,54,94,45,90,45,79' v-on:click='clickColorHex(\"#00FF00\",-125,45)' v-on:mouseover ='mouseOverColor(\"#00FF00\")' alt='#00FF00' />\r\n      <area style='cursor:pointer' shape='poly' coords='72,75,81,79,81,90,72,94,63,90,63,79' v-on:click='clickColorHex(\"#66FF99\",-125,63)' v-on:mouseover ='mouseOverColor(\"#66FF99\")' alt='#66FF99' />\r\n      <area style='cursor:pointer' shape='poly' coords='90,75,99,79,99,90,90,94,81,90,81,79' v-on:click='clickColorHex(\"#99FFCC\",-125,81)' v-on:mouseover ='mouseOverColor(\"#99FFCC\")' alt='#99FFCC' />\r\n      <area style='cursor:pointer' shape='poly' coords='108,75,117,79,117,90,108,94,99,90,99,79' v-on:click='clickColorHex(\"#CCFFFF\",-125,99)' v-on:mouseover ='mouseOverColor(\"#CCFFFF\")' alt='#CCFFFF' />\r\n      <area style='cursor:pointer' shape='poly' coords='126,75,135,79,135,90,126,94,117,90,117,79' v-on:click='clickColorHex(\"#CCCCFF\",-125,117)' v-on:mouseover ='mouseOverColor(\"#CCCCFF\")' alt='#CCCCFF' />\r\n      <area style='cursor:pointer' shape='poly' coords='144,75,153,79,153,90,144,94,135,90,135,79' v-on:click='clickColorHex(\"#CC99FF\",-125,135)'  v-on:mouseover ='mouseOverColor(\"#CC99FF\")' alt='#CC99FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='162,75,171,79,171,90,162,94,153,90,153,79' v-on:click='clickColorHex(\"#CC66FF\",-125,153)' v-on:mouseover ='mouseOverColor(\"#CC66FF\")' alt='#CC66FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='180,75,189,79,189,90,180,94,171,90,171,79' v-on:click='clickColorHex(\"#CC33FF\",-125,171)' v-on:mouseover ='mouseOverColor(\"#CC33FF\")' alt='#CC33FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='198,75,207,79,207,90,198,94,189,90,189,79' v-on:click='clickColorHex(\"#CC00FF\",-125,189)' v-on:mouseover ='mouseOverColor(\"#CC00FF\")' alt='#CC00FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='216,75,225,79,225,90,216,94,207,90,207,79' v-on:click='clickColorHex(\"#9900CC\",-125,207)' v-on:mouseover ='mouseOverColor(\"#9900CC\")' alt='#9900CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='9,90,18,94,18,105,9,109,0,105,0,94' v-on:click='clickColorHex(\"#003300\",-110,0)' v-on:mouseover ='mouseOverColor(\"#003300\")' alt='#003300' />\r\n      <area style='cursor:pointer' shape='poly' coords='27,90,36,94,36,105,27,109,18,105,18,94' v-on:click='clickColorHex(\"#009933\",-110,18)' v-on:mouseover ='mouseOverColor(\"#009933\")' alt='#009933' />\r\n      <area style='cursor:pointer' shape='poly' coords='45,90,54,94,54,105,45,109,36,105,36,94' v-on:click='clickColorHex(\"#33CC33\",-110,36)' v-on:mouseover ='mouseOverColor(\"#33CC33\")' alt='#33CC33' />\r\n      <area style='cursor:pointer' shape='poly' coords='63,90,72,94,72,105,63,109,54,105,54,94' v-on:click='clickColorHex(\"#66FF66\",-110,54)' v-on:mouseover ='mouseOverColor(\"#66FF66\")' alt='#66FF66' />\r\n      <area style='cursor:pointer' shape='poly' coords='81,90,90,94,90,105,81,109,72,105,72,94' v-on:click='clickColorHex(\"#99FF99\",-110,72)' v-on:mouseover ='mouseOverColor(\"#99FF99\")' alt='#99FF99' />\r\n      <area style='cursor:pointer' shape='poly' coords='99,90,108,94,108,105,99,109,90,105,90,94' v-on:click='clickColorHex(\"#CCFFCC\",-110,90)' v-on:mouseover ='mouseOverColor(\"#CCFFCC\")' alt='#CCFFCC' />\r\n      <area style='cursor:pointer' shape='poly' coords='117,90,126,94,126,105,117,109,108,105,108,94' v-on:click='clickColorHex(\"#FFFFFF\",-110,108)' v-on:mouseover ='mouseOverColor(\"#FFFFFF\")' alt='#FFFFFF' />\r\n      <area style='cursor:pointer' shape='poly' coords='135,90,144,94,144,105,135,109,126,105,126,94' v-on:click='clickColorHex(\"#FFCCFF\",-110,126)' v-on:mouseover ='mouseOverColor(\"#FFCCFF\")' alt='#FFCCFF' />\r\n      <area style='cursor:pointer' shape='poly' coords='153,90,162,94,162,105,153,109,144,105,144,94' v-on:click='clickColorHex(\"#FF99FF\",-110,144)' v-on:mouseover ='mouseOverColor(\"#FF99FF\")' alt='#FF99FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='171,90,180,94,180,105,171,109,162,105,162,94' v-on:click='clickColorHex(\"#FF66FF\",-110,162)' v-on:mouseover ='mouseOverColor(\"#FF66FF\")' alt='#FF66FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='189,90,198,94,198,105,189,109,180,105,180,94' v-on:click='clickColorHex(\"#FF00FF\",-110,180)' v-on:mouseover ='mouseOverColor(\"#FF00FF\")' alt='#FF00FF' />\r\n      <area style='cursor:pointer' shape='poly' coords='207,90,216,94,216,105,207,109,198,105,198,94' v-on:click='clickColorHex(\"#CC00CC\",-110,198)' v-on:mouseover ='mouseOverColor(\"#CC00CC\")' alt='#CC00CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='225,90,234,94,234,105,225,109,216,105,216,94' v-on:click='clickColorHex(\"#660066\",-110,216)' v-on:mouseover ='mouseOverColor(\"#660066\")' alt='#660066' />\r\n      <area style='cursor:pointer' shape='poly' coords='18,105,27,109,27,120,18,124,9,120,9,109' v-on:click='clickColorHex(\"#336600\",-95,9)' v-on:mouseover ='mouseOverColor(\"#336600\")' alt='#336600' />\r\n      <area style='cursor:pointer' shape='poly' coords='36,105,45,109,45,120,36,124,27,120,27,109' v-on:click='clickColorHex(\"#009900\",-95,27)' v-on:mouseover ='mouseOverColor(\"#009900\")' alt='#009900' />\r\n      <area style='cursor:pointer' shape='poly' coords='54,105,63,109,63,120,54,124,45,120,45,109' v-on:click='clickColorHex(\"#66FF33\",-95,45)' v-on:mouseover ='mouseOverColor(\"#66FF33\")' alt='#66FF33' />\r\n      <area style='cursor:pointer' shape='poly' coords='72,105,81,109,81,120,72,124,63,120,63,109' v-on:click='clickColorHex(\"#99FF66\",-95,63)' v-on:mouseover ='mouseOverColor(\"#99FF66\")' alt='#99FF66' />\r\n      <area style='cursor:pointer' shape='poly' coords='90,105,99,109,99,120,90,124,81,120,81,109' v-on:click='clickColorHex(\"#CCFF99\",-95,81)' v-on:mouseover ='mouseOverColor(\"#CCFF99\")' alt='#CCFF99' />\r\n      <area style='cursor:pointer' shape='poly' coords='108,105,117,109,117,120,108,124,99,120,99,109' v-on:click='clickColorHex(\"#FFFFCC\",-95,99)' v-on:mouseover ='mouseOverColor(\"#FFFFCC\")' alt='#FFFFCC' />\r\n      <area style='cursor:pointer' shape='poly' coords='126,105,135,109,135,120,126,124,117,120,117,109' v-on:click='clickColorHex(\"#FFCCCC\",-95,117)' v-on:mouseover ='mouseOverColor(\"#FFCCCC\")' alt='#FFCCCC' />\r\n      <area style='cursor:pointer' shape='poly' coords='144,105,153,109,153,120,144,124,135,120,135,109' v-on:click='clickColorHex(\"#FF99CC\",-95,135)' v-on:mouseover ='mouseOverColor(\"#FF99CC\")' alt='#FF99CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='162,105,171,109,171,120,162,124,153,120,153,109' v-on:click='clickColorHex(\"#FF66CC\",-95,153)' v-on:mouseover ='mouseOverColor(\"#FF66CC\")' alt='#FF66CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='180,105,189,109,189,120,180,124,171,120,171,109' v-on:click='clickColorHex(\"#FF33CC\",-95,171)' v-on:mouseover ='mouseOverColor(\"#FF33CC\")' alt='#FF33CC' />\r\n      <area style='cursor:pointer' shape='poly' coords='198,105,207,109,207,120,198,124,189,120,189,109' v-on:click='clickColorHex(\"#CC0099\",-95,189)' v-on:mouseover ='mouseOverColor(\"#CC0099\")' alt='#CC0099' />\r\n      <area style='cursor:pointer' shape='poly' coords='216,105,225,109,225,120,216,124,207,120,207,109' v-on:click='clickColorHex(\"#993399\",-95,207)' v-on:mouseover ='mouseOverColor(\"#993399\")' alt='#993399' />\r\n      <area style='cursor:pointer' shape='poly' coords='27,120,36,124,36,135,27,139,18,135,18,124' v-on:click='clickColorHex(\"#333300\",-80,18)' v-on:mouseover ='mouseOverColor(\"#333300\")' alt='#333300' />\r\n      <area style='cursor:pointer' shape='poly' coords='45,120,54,124,54,135,45,139,36,135,36,124' v-on:click='clickColorHex(\"#669900\",-80,36)' v-on:mouseover ='mouseOverColor(\"#669900\")' alt='#669900' />\r\n      <area style='cursor:pointer' shape='poly' coords='63,120,72,124,72,135,63,139,54,135,54,124' v-on:click='clickColorHex(\"#99FF33\",-80,54)' v-on:mouseover ='mouseOverColor(\"#99FF33\")' alt='#99FF33' />\r\n      <area style='cursor:pointer' shape='poly' coords='81,120,90,124,90,135,81,139,72,135,72,124' v-on:click='clickColorHex(\"#CCFF66\",-80,72)' v-on:mouseover ='mouseOverColor(\"#CCFF66\")' alt='#CCFF66' />\r\n      <area style='cursor:pointer' shape='poly' coords='99,120,108,124,108,135,99,139,90,135,90,124' v-on:click='clickColorHex(\"#FFFF99\",-80,90)' v-on:mouseover ='mouseOverColor(\"#FFFF99\")' alt='#FFFF99' />\r\n      <area style='cursor:pointer' shape='poly' coords='117,120,126,124,126,135,117,139,108,135,108,124' v-on:click='clickColorHex(\"#FFCC99\",-80,108)' v-on:mouseover ='mouseOverColor(\"#FFCC99\")' alt='#FFCC99' />\r\n      <area style='cursor:pointer' shape='poly' coords='135,120,144,124,144,135,135,139,126,135,126,124' v-on:click='clickColorHex(\"#FF9999\",-80,126)' v-on:mouseover ='mouseOverColor(\"#FF9999\")' alt='#FF9999' />\r\n      <area style='cursor:pointer' shape='poly' coords='153,120,162,124,162,135,153,139,144,135,144,124' v-on:click='clickColorHex(\"#FF6699\",-80,144)' v-on:mouseover ='mouseOverColor(\"#FF6699\")' alt='#FF6699' />\r\n      <area style='cursor:pointer' shape='poly' coords='171,120,180,124,180,135,171,139,162,135,162,124' v-on:click='clickColorHex(\"#FF3399\",-80,162)' v-on:mouseover ='mouseOverColor(\"#FF3399\")' alt='#FF3399' />\r\n      <area style='cursor:pointer' shape='poly' coords='189,120,198,124,198,135,189,139,180,135,180,124' v-on:click='clickColorHex(\"#CC3399\",-80,180)' v-on:mouseover ='mouseOverColor(\"#CC3399\")' alt='#CC3399' />\r\n      <area style='cursor:pointer' shape='poly' coords='207,120,216,124,216,135,207,139,198,135,198,124' v-on:click='clickColorHex(\"#990099\",-80,198)' v-on:mouseover ='mouseOverColor(\"#990099\")' alt='#990099' />\r\n      <area style='cursor:pointer' shape='poly' coords='36,135,45,139,45,150,36,154,27,150,27,139' v-on:click='clickColorHex(\"#666633\",-65,27)' v-on:mouseover ='mouseOverColor(\"#666633\")' alt='#666633' />\r\n      <area style='cursor:pointer' shape='poly' coords='54,135,63,139,63,150,54,154,45,150,45,139' v-on:click='clickColorHex(\"#99CC00\",-65,45)' v-on:mouseover ='mouseOverColor(\"#99CC00\")' alt='#99CC00' />\r\n      <area style='cursor:pointer' shape='poly' coords='72,135,81,139,81,150,72,154,63,150,63,139' v-on:click='clickColorHex(\"#CCFF33\",-65,63)' v-on:mouseover ='mouseOverColor(\"#CCFF33\")' alt='#CCFF33' />\r\n      <area style='cursor:pointer' shape='poly' coords='90,135,99,139,99,150,90,154,81,150,81,139' v-on:click='clickColorHex(\"#FFFF66\",-65,81)' v-on:mouseover ='mouseOverColor(\"#FFFF66\")' alt='#FFFF66' />\r\n      <area style='cursor:pointer' shape='poly' coords='108,135,117,139,117,150,108,154,99,150,99,139' v-on:click='clickColorHex(\"#FFCC66\",-65,99)' v-on:mouseover ='mouseOverColor(\"#FFCC66\")' alt='#FFCC66' />\r\n      <area style='cursor:pointer' shape='poly' coords='126,135,135,139,135,150,126,154,117,150,117,139' v-on:click='clickColorHex(\"#FF9966\",-65,117)' v-on:mouseover ='mouseOverColor(\"#FF9966\")' alt='#FF9966' />\r\n      <area style='cursor:pointer' shape='poly' coords='144,135,153,139,153,150,144,154,135,150,135,139' v-on:click='clickColorHex(\"#FF6666\",-65,135)' v-on:mouseover ='mouseOverColor(\"#FF6666\")' alt='#FF6666' />\r\n      <area style='cursor:pointer' shape='poly' coords='162,135,171,139,171,150,162,154,153,150,153,139' v-on:click='clickColorHex(\"#FF0066\",-65,153)' v-on:mouseover ='mouseOverColor(\"#FF0066\")' alt='#FF0066' />\r\n      <area style='cursor:pointer' shape='poly' coords='180,135,189,139,189,150,180,154,171,150,171,139' v-on:click='clickColorHex(\"#CC6699\",-65,171)' v-on:mouseover ='mouseOverColor(\"#CC6699\")' alt='#CC6699' />\r\n      <area style='cursor:pointer' shape='poly' coords='198,135,207,139,207,150,198,154,189,150,189,139' v-on:click='clickColorHex(\"#993366\",-65,189)' v-on:mouseover ='mouseOverColor(\"#993366\")' alt='#993366' />\r\n      <area style='cursor:pointer' shape='poly' coords='45,150,54,154,54,165,45,169,36,165,36,154' v-on:click='clickColorHex(\"#999966\",-50,36)' v-on:mouseover ='mouseOverColor(\"#999966\")' alt='#999966' />\r\n      <area style='cursor:pointer' shape='poly' coords='63,150,72,154,72,165,63,169,54,165,54,154' v-on:click='clickColorHex(\"#CCCC00\",-50,54)' v-on:mouseover ='mouseOverColor(\"#CCCC00\")' alt='#CCCC00' />\r\n      <area style='cursor:pointer' shape='poly' coords='81,150,90,154,90,165,81,169,72,165,72,154' v-on:click='clickColorHex(\"#FFFF00\",-50,72)' v-on:mouseover ='mouseOverColor(\"#FFFF00\")' alt='#FFFF00' />\r\n      <area style='cursor:pointer' shape='poly' coords='99,150,108,154,108,165,99,169,90,165,90,154' v-on:click='clickColorHex(\"#FFCC00\",-50,90)' v-on:mouseover ='mouseOverColor(\"#FFCC00\")' alt='#FFCC00' />\r\n      <area style='cursor:pointer' shape='poly' coords='117,150,126,154,126,165,117,169,108,165,108,154' v-on:click='clickColorHex(\"#FF9933\",-50,108)' v-on:mouseover ='mouseOverColor(\"#FF9933\")' alt='#FF9933' />\r\n      <area style='cursor:pointer' shape='poly' coords='135,150,144,154,144,165,135,169,126,165,126,154' v-on:click='clickColorHex(\"#FF6600\",-50,126)' v-on:mouseover ='mouseOverColor(\"#FF6600\")' alt='#FF6600' />\r\n      <area style='cursor:pointer' shape='poly' coords='153,150,162,154,162,165,153,169,144,165,144,154' v-on:click='clickColorHex(\"#FF5050\",-50,144)' v-on:mouseover ='mouseOverColor(\"#FF5050\")' alt='#FF5050' />\r\n      <area style='cursor:pointer' shape='poly' coords='171,150,180,154,180,165,171,169,162,165,162,154' v-on:click='clickColorHex(\"#CC0066\",-50,162)' v-on:mouseover ='mouseOverColor(\"#CC0066\")' alt='#CC0066' />\r\n      <area style='cursor:pointer' shape='poly' coords='189,150,198,154,198,165,189,169,180,165,180,154' v-on:click='clickColorHex(\"#660033\",-50,180)' v-on:mouseover ='mouseOverColor(\"#660033\")' alt='#660033' />\r\n      <area style='cursor:pointer' shape='poly' coords='54,165,63,169,63,180,54,184,45,180,45,169' v-on:click='clickColorHex(\"#996633\",-35,45)' v-on:mouseover ='mouseOverColor(\"#996633\")' alt='#996633' />\r\n      <area style='cursor:pointer' shape='poly' coords='72,165,81,169,81,180,72,184,63,180,63,169' v-on:click='clickColorHex(\"#CC9900\",-35,63)' v-on:mouseover ='mouseOverColor(\"#CC9900\")' alt='#CC9900' />\r\n      <area style='cursor:pointer' shape='poly' coords='90,165,99,169,99,180,90,184,81,180,81,169' v-on:click='clickColorHex(\"#FF9900\",-35,81)' v-on:mouseover ='mouseOverColor(\"#FF9900\")' alt='#FF9900' />\r\n      <area style='cursor:pointer' shape='poly' coords='108,165,117,169,117,180,108,184,99,180,99,169' v-on:click='clickColorHex(\"#CC6600\",-35,99)' v-on:mouseover ='mouseOverColor(\"#CC6600\")' alt='#CC6600' />\r\n      <area style='cursor:pointer' shape='poly' coords='126,165,135,169,135,180,126,184,117,180,117,169' v-on:click='clickColorHex(\"#FF3300\",-35,117)' v-on:mouseover ='mouseOverColor(\"#FF3300\")' alt='#FF3300' />\r\n      <area style='cursor:pointer' shape='poly' coords='144,165,153,169,153,180,144,184,135,180,135,169' v-on:click='clickColorHex(\"#FF0000\",-35,135)' v-on:mouseover ='mouseOverColor(\"#FF0000\")' alt='#FF0000' />\r\n      <area style='cursor:pointer' shape='poly' coords='162,165,171,169,171,180,162,184,153,180,153,169' v-on:click='clickColorHex(\"#CC0000\",-35,153)' v-on:mouseover ='mouseOverColor(\"#CC0000\")' alt='#CC0000' />\r\n      <area style='cursor:pointer' shape='poly' coords='180,165,189,169,189,180,180,184,171,180,171,169' v-on:click='clickColorHex(\"#990033\",-35,171)' v-on:mouseover ='mouseOverColor(\"#990033\")' alt='#990033' />\r\n      <area style='cursor:pointer' shape='poly' coords='63,180,72,184,72,195,63,199,54,195,54,184' v-on:click='clickColorHex(\"#663300\",-20,54)' v-on:mouseover ='mouseOverColor(\"#663300\")' alt='#663300' />\r\n      <area style='cursor:pointer' shape='poly' coords='81,180,90,184,90,195,81,199,72,195,72,184' v-on:click='clickColorHex(\"#996600\",-20,72)' v-on:mouseover ='mouseOverColor(\"#996600\")' alt='#996600' />\r\n      <area style='cursor:pointer' shape='poly' coords='99,180,108,184,108,195,99,199,90,195,90,184' v-on:click='clickColorHex(\"#CC3300\",-20,90)' v-on:mouseover ='mouseOverColor(\"#CC3300\")' alt='#CC3300' />\r\n      <area style='cursor:pointer' shape='poly' coords='117,180,126,184,126,195,117,199,108,195,108,184' v-on:click='clickColorHex(\"#993300\",-20,108)' v-on:mouseover ='mouseOverColor(\"#993300\")' alt='#993300' />\r\n      <area style='cursor:pointer' shape='poly' coords='135,180,144,184,144,195,135,199,126,195,126,184' v-on:click='clickColorHex(\"#990000\",-20,126)' v-on:mouseover ='mouseOverColor(\"#990000\")' alt='#990000' />\r\n      <area style='cursor:pointer' shape='poly' coords='153,180,162,184,162,195,153,199,144,195,144,184' v-on:click='clickColorHex(\"#800000\",-20,144)' v-on:mouseover ='mouseOverColor(\"#800000\")' alt='#800000' />\r\n      <area style='cursor:pointer' shape='poly' coords='171,180,180,184,180,195,171,199,162,195,162,184' v-on:click='clickColorHex(\"#993333\",-20,162)' v-on:mouseover ='mouseOverColor(\"#993333\")' alt='#993333' />\r\n      </map>\r\n      <div id='selectedhexagon' style='visibility:hidden;position:relative;width:21px;height:21px;background-image:url(\"https://www.w3schools.com/colors/img_selectedcolor.gif\");top: -80px; left: 144px;'></div>\r\n    </b-col>\r\n    </b-row> -->\r\n  </b-container>\r\n</template>\r\n<script>\r\nimport { eventBus } from '../main.js'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      object: null,\r\n      objectX: 0,\r\n      objectY: 0,\r\n      objectFontSize: 0,\r\n      objectFont: null,\r\n      lineWidth: 0,\r\n      objectBold: '',\r\n      objectStyle: '',\r\n      objectColor: '#000000',\r\n      objectColorOld: '',\r\n      canvas: null\r\n\r\n    }\r\n  },\r\n  watch: {\r\n  },\r\n  methods: {\r\n    moveXObject: function () {\r\n      this.object.left = parseInt(this.objectX)\r\n      eventBus.$emit('object', this.object)\r\n    },\r\n    moveYObject: function () {\r\n      this.object.top = parseInt(this.objectY)\r\n      eventBus.$emit('object', this.object)\r\n    },\r\n    resizeTextBox: function () {\r\n      this.object.left = parseInt(this.objectX)\r\n      if (this.objectFontSize === null) {\r\n        this.objectFontSize = 5\r\n      }\r\n      this.object.fontSize = this.objectFontSize\r\n      this.object.set('width', this.object.dynamicMinWidth)\r\n      eventBus.$emit('object', this.object)\r\n    },\r\n    onChange (event) {\r\n      if (event !== '') {\r\n        this.object.set('fontFamily', event)\r\n        eventBus.$emit('object', this.object)\r\n      }\r\n    },\r\n    boldChk (event) {\r\n      this.object.set('fontWeight', event)\r\n      eventBus.$emit('object', this.object)\r\n    },\r\n    styleChk (event) {\r\n      this.object.set('fontStyle', event)\r\n      eventBus.$emit('object', this.object)\r\n    },\r\n    clickColor () {\r\n      this.objectColorOld = this.objectColor\r\n      this.object.set('fill', this.objectColor)\r\n      eventBus.$emit('object', this.object)\r\n    },\r\n    clickColorHex (hex, seltop, selleft) {\r\n      this.objectColorOld = hex\r\n      if ((seltop + 200) > -1 && selleft > -1) {\r\n        document.getElementById('selectedhexagon').style.top = seltop + 'px'\r\n        document.getElementById('selectedhexagon').style.left = selleft + 'px'\r\n        document.getElementById('selectedhexagon').style.visibility = 'visible'\r\n      }\r\n      this.object.set('fill', hex)\r\n      eventBus.$emit('object', this.object)\r\n    },\r\n    mouseOverColor (hex) {\r\n      this.object.set('fill', hex)\r\n      eventBus.$emit('object', this.object)\r\n    },\r\n    mouseOutMap () {\r\n      this.object.set('fill', this.objectColorOld)\r\n      eventBus.$emit('object', this.object)\r\n    }\r\n  },\r\n  mounted () {\r\n  },\r\n  created () {\r\n    eventBus.$on('data', (object) => {\r\n      this.object = object\r\n      this.objectX = Math.round(this.object.left)\r\n      this.objectY = Math.round(this.object.top)\r\n      this.objectFontSize = this.object.fontSize * this.object.scaleY\r\n      this.objectBold = object.fontWeight\r\n      this.objectStyle = object.fontStyle\r\n      this.objectFont = object.fontFamily\r\n      this.objectColor = object.fill\r\n      this.objectColorOld = object.fill\r\n      console.log(object)\r\n    })\r\n    eventBus.$on('canvas', (canvas) => {\r\n      this.canvas = canvas\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style>\r\n@import url('https://fonts.googleapis.com/css2?family=Kosugi&family=Kosugi+Maru&family=M+PLUS+1p&family=M+PLUS+Rounded+1c&family=Noto+Sans+JP&family=Noto+Serif+JP&family=Roboto&family=Sawarabi+Gothic&family=Sawarabi+Mincho&display=swap');\r\n canvas{\r\n   border: 1px black solid;\r\n }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ImgDataModify.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"X\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.moveXObject},model:{value:(_vm.objectX),callback:function ($$v) {_vm.objectX=$$v},expression:\"objectX\"}})],1),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"Y\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.moveYObject},model:{value:(_vm.objectY),callback:function ($$v) {_vm.objectY=$$v},expression:\"objectY\"}})],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"fontsize\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-input',{attrs:{\"size\":\"sm\"},on:{\"keyup\":_vm.resizeTextBox},model:{value:(_vm.objectFontSize),callback:function ($$v) {_vm.objectFontSize=$$v},expression:\"objectFontSize\"}})],1),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"fontWeight\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('b-form-checkbox',{attrs:{\"id\":\"checkbox-1\",\"name\":\"checkbox-1\",\"value\":\"bold\",\"unchecked-value\":\"\"},on:{\"change\":function($event){return _vm.boldChk($event)}},model:{value:(_vm.objectBold),callback:function ($$v) {_vm.objectBold=$$v},expression:\"objectBold\"}},[_vm._v(\"\\n      BOLD\\n      \")])],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"fontStyle\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"4\"}},[_c('b-form-radio',{attrs:{\"value\":\"normal\",\"checked\":\"\"},on:{\"change\":function($event){return _vm.styleChk($event)}},model:{value:(_vm.objectStyle),callback:function ($$v) {_vm.objectStyle=$$v},expression:\"objectStyle\"}},[_vm._v(\"\\n        normal\\n        \")])],1),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"4\"}},[_c('b-form-radio',{attrs:{\"value\":\"italic\"},on:{\"change\":function($event){return _vm.styleChk($event)}},model:{value:(_vm.objectStyle),callback:function ($$v) {_vm.objectStyle=$$v},expression:\"objectStyle\"}},[_vm._v(\"\\n        italic\\n        \")])],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"font\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"9\"}},[_c('b-form-select',{staticClass:\"mb-3\",on:{\"change\":function($event){return _vm.onChange($event)}},model:{value:(_vm.objectFont),callback:function ($$v) {_vm.objectFont=$$v},expression:\"objectFont\"}},[_c('b-form-select-option',{attrs:{\"value\":\"\",\"selected\":\"\"}}),_vm._v(\" \"),_c('b-form-select-option',{staticStyle:{\"font-family\":\"'Kosugi', sans-serif\"},attrs:{\"value\":\"Kosugi, sans-serif\"}},[_vm._v(\"Kosugi\")]),_vm._v(\" \"),_c('b-form-select-option',{staticStyle:{\"font-family\":\"'Kosugi Maru', sans-serif\"},attrs:{\"value\":\"Kosugi Maru, sans-serif\"}},[_vm._v(\"Kosugi Maru\")]),_vm._v(\" \"),_c('b-form-select-option',{staticStyle:{\"font-family\":\"'Noto Sans JP', sans-serif\"},attrs:{\"value\":\"Noto Sans, sans-serif\"}},[_vm._v(\"Noto Sans JP\")]),_vm._v(\" \"),_c('b-form-select-option',{staticStyle:{\"font-family\":\"'Noto Serif JP', serif\"},attrs:{\"value\":\"Noto Serif JP, serif\"}},[_vm._v(\"Noto Serif JP\")]),_vm._v(\" \"),_c('b-form-select-option',{staticStyle:{\"font-family\":\"'Sawarabi Mincho', sans-serif\"},attrs:{\"value\":\"Sawarabi Mincho, sans-serif\"}},[_vm._v(\"Sawarabi Mincho\")]),_vm._v(\" \"),_c('b-form-select-option',{staticStyle:{\"font-family\":\"'Sawarabi Gothic', sans-serif\"},attrs:{\"value\":\"Sawarabi Gothic, sans-serif\"}},[_vm._v(\"Sawarabi Gothic\")])],1)],1)],1),_vm._v(\" \"),_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('label',{attrs:{\"for\":\"input-small\"}},[_vm._v(\"color\")])]),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"3\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.objectColor),expression:\"objectColor\"}],staticStyle:{\"width\":\"85%\"},attrs:{\"type\":\"color\",\"value\":\"\"},domProps:{\"value\":(_vm.objectColor)},on:{\"change\":function($event){return _vm.clickColor()},\"input\":function($event){if($event.target.composing){ return; }_vm.objectColor=$event.target.value}}})])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-8bf2eae2\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ImgDataModify.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8bf2eae2\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ImgDataModify.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgDataModify.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgDataModify.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8bf2eae2\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ImgDataModify.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ImgDataModify.vue\n// module id = null\n// module chunks = ","<template>\r\n<div>\r\n    <b-row class=\"my-1\">\r\n     <b-col sm=\"6\">\r\n      <b-card\r\n          header=\"名刺\"\r\n          style=\"max-width: 40rem; margin: auto; margin-top: 2vh;\"\r\n          class=\"mb-2\"\r\n          border-variant=\"info\"\r\n          align=\"left\">\r\n            <ImgEditorComponets/>\r\n      </b-card>\r\n      <b-card\r\n          header=\"名刺情報\"\r\n          style=\"max-width: 40rem; margin: auto; margin-top: 2vh;\"\r\n          class=\"mb-2\"\r\n          border-variant=\"info\"\r\n          align=\"left\">\r\n            <ImgDataModify/>\r\n      </b-card>\r\n     </b-col>\r\n      <b-col sm=\"5\">\r\n        <b-card\r\n          header=\"入力\"\r\n          style=\"max-width: 40rem; margin: auto; margin-top: 2vh;\"\r\n          class=\"mb-2\"\r\n          border-variant=\"info\"\r\n          align=\"left\">\r\n            <ImgEditorInput/>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// キャンバス用コンポーネントの読み込み\r\nimport ImgEditorComponets from '../components/ImgEditor'\r\nimport ImgEditorInput from '../components/ImgEditorInput'\r\nimport ImgDataModify from '../components/ImgDataModify'\r\n\r\nexport default {\r\n  components: {\r\n    ImgEditorInput,\r\n    ImgEditorComponets,\r\n    ImgDataModify\r\n  },\r\n  data () {\r\n    return {\r\n      radius: 50\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\n#view{\r\n  margin-left: 70px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/ImageView.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-row',{staticClass:\"my-1\"},[_c('b-col',{attrs:{\"sm\":\"6\"}},[_c('b-card',{staticClass:\"mb-2\",staticStyle:{\"max-width\":\"40rem\",\"margin\":\"auto\",\"margin-top\":\"2vh\"},attrs:{\"header\":\"名刺\",\"border-variant\":\"info\",\"align\":\"left\"}},[_c('ImgEditorComponets')],1),_vm._v(\" \"),_c('b-card',{staticClass:\"mb-2\",staticStyle:{\"max-width\":\"40rem\",\"margin\":\"auto\",\"margin-top\":\"2vh\"},attrs:{\"header\":\"名刺情報\",\"border-variant\":\"info\",\"align\":\"left\"}},[_c('ImgDataModify')],1)],1),_vm._v(\" \"),_c('b-col',{attrs:{\"sm\":\"5\"}},[_c('b-card',{staticClass:\"mb-2\",staticStyle:{\"max-width\":\"40rem\",\"margin\":\"auto\",\"margin-top\":\"2vh\"},attrs:{\"header\":\"入力\",\"border-variant\":\"info\",\"align\":\"left\"}},[_c('ImgEditorInput')],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-fc031300\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/ImageView.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-fc031300\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ImageView.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImageView.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImageView.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-fc031300\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ImageView.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-fc031300\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/ImageView.vue\n// module id = null\n// module chunks = ","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = EKta\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = EuP9\n// module chunks = 0","<template>\r\n  <b-container fluid>\r\n    <canvas id=\"canvas\" width=\"660\" height=\"400\"></canvas>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { eventBus } from '../main.js'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      canvas: null\r\n    }\r\n  },\r\n  watch: {\r\n  },\r\n  methods: {\r\n  },\r\n  mounted () {\r\n  },\r\n  created () {\r\n    eventBus.$on('canvas', (canvas) => {\r\n      this.canvas = canvas\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style>\r\n canvas{\r\n   border: 1px black solid;\r\n }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/ImgEditor.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('canvas',{attrs:{\"id\":\"canvas\",\"width\":\"660\",\"height\":\"400\"}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7b82e4dc\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ImgEditor.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7b82e4dc\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ImgEditor.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgEditor.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImgEditor.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7b82e4dc\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ImgEditor.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ImgEditor.vue\n// module id = null\n// module chunks = ","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = sOR5\n// module chunks = 0","/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '3.6.3' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof (typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document)) {\n    fabric.document = document;\n  }\n  else {\n    fabric.document = document.implementation.createHTMLDocument('');\n  }\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  var jsdom = require('jsdom');\n  var virtualWindow = new jsdom.JSDOM(\n    decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n    {\n      features: {\n        FetchExternalResources: ['img']\n      },\n      resources: 'usable'\n    }).window;\n  fabric.document = virtualWindow.document;\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = virtualWindow;\n  DOMParser = fabric.window.DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill', 'fill-opacity', 'fill-rule',\n  'opacity',\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\n  'stroke-linejoin', 'stroke-miterlimit',\n  'stroke-opacity', 'stroke-width',\n  'id', 'paint-order', 'vector-effect',\n  'instantiated_by_use', 'clip-path'\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\nfabric.rePathCommand = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:[eE][-+]?\\d+)?)/ig;\nfabric.reNonWord = /[ \\n\\.,;!\\?\\-]/;\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.svgNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * When 'true', style information is not retained when copy/pasting text, making\n * pasted text use destination style.\n * Defaults to 'false'.\n * @type Boolean\n * @default\n */\nfabric.disableStyleCopyPaste = false;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.arcToSegmentsCache = { };\n\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.boundsOfCurveCache = { };\n\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\nfabric.cachesBoundsOfCurve = true;\n\n/**\n * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n * this has to be set before instantiating the filtering backend ( before filtering the first image )\n * @type Boolean\n * @default false\n */\nfabric.forceGLPutImageData = false;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return this;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this._objects,\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @param {Array} [transform] an array of 6 numbers representing a 2x3 transform matrix\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points, transform) {\n      if (transform) {\n        for (var i = 0; i < points.length; i++) {\n          points[i] = fabric.util.transformPoint(points[i], transform);\n        }\n      }\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects.filter(function(obj) {\n            // filter out undefined objects (objects that gave error)\n            return obj;\n          }));\n        }\n      }\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x3 matrix into transform components\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle] angle in degrees\n     * @return {Number[]} transform matrix\n     */\n    calcRotateMatrix: function(options) {\n      if (!options.angle) {\n        return fabric.iMatrix.concat();\n      }\n      var theta = fabric.util.degreesToRadians(options.angle),\n          cos = fabric.util.cos(theta),\n          sin = fabric.util.sin(theta);\n      return [cos, sin, -sin, cos, 0, 0];\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet.\n     * is called DimensionsTransformMatrix because those properties are the one that influence\n     * the size of the resulting box of the object.\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @return {Number[]} transform matrix\n     */\n    calcDimensionsMatrix: function(options) {\n      var scaleX = typeof options.scaleX === 'undefined' ? 1 : options.scaleX,\n          scaleY = typeof options.scaleY === 'undefined' ? 1 : options.scaleY,\n          scaleMatrix = [\n            options.flipX ? -scaleX : scaleX,\n            0,\n            0,\n            options.flipY ? -scaleY : scaleY,\n            0,\n            0],\n          multiply = fabric.util.multiplyTransformMatrices,\n          degreesToRadians = fabric.util.degreesToRadians;\n      if (options.skewX) {\n        scaleMatrix = multiply(\n          scaleMatrix,\n          [1, 0, Math.tan(degreesToRadians(options.skewX)), 1],\n          true);\n      }\n      if (options.skewY) {\n        scaleMatrix = multiply(\n          scaleMatrix,\n          [1, Math.tan(degreesToRadians(options.skewY)), 0, 1],\n          true);\n      }\n      return scaleMatrix;\n    },\n\n    /**\n     * Returns a transform matrix starting from an object of the same kind of\n     * the one returned from qrDecompose, useful also if you want to calculate some\n     * transformations from an object that is not enlived yet\n     * @static\n     * @memberOf fabric.util\n     * @param  {Object} options\n     * @param  {Number} [options.angle]\n     * @param  {Number} [options.scaleX]\n     * @param  {Number} [options.scaleY]\n     * @param  {Boolean} [options.flipX]\n     * @param  {Boolean} [options.flipY]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.skewX]\n     * @param  {Number} [options.translateX]\n     * @param  {Number} [options.translateY]\n     * @return {Number[]} transform matrix\n     */\n    composeMatrix: function(options) {\n      var matrix = [1, 0, 0, 1, options.translateX || 0, options.translateY || 0],\n          multiply = fabric.util.multiplyTransformMatrices;\n      if (options.angle) {\n        matrix = multiply(matrix, fabric.util.calcRotateMatrix(options));\n      }\n      if (options.scaleX || options.scaleY || options.skewX || options.skewY || options.flipX || options.flipY) {\n        matrix = multiply(matrix, fabric.util.calcDimensionsMatrix(options));\n      }\n      return matrix;\n    },\n\n    /**\n     * Returns a transform matrix that has the same effect of scaleX, scaleY and skewX.\n     * Is deprecated for composeMatrix. Please do not use it.\n     * @static\n     * @deprecated since 3.4.0\n     * @memberOf fabric.util\n     * @param  {Number} scaleX\n     * @param  {Number} scaleY\n     * @param  {Number} skewX\n     * @return {Number[]} transform matrix\n     */\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      return fabric.util.composeMatrix({ scaleX: scaleX, scaleY: scaleY, skewX: skewX });\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    /**\n     * Finds the scale for the object source to fit inside the object destination,\n     * keeping aspect ratio intact.\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Object | fabric.Object} source\n     * @param {Number} source.height natural unscaled height of the object\n     * @param {Number} source.width natural unscaled width of the object\n     * @param {Object | fabric.Object} destination\n     * @param {Number} destination.height natural unscaled height of the object\n     * @param {Number} destination.width natural unscaled width of the object\n     * @return {Number} scale factor to apply to source to fit into destination\n     */\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * Finds the scale for the object source to cover entirely the object destination,\n     * keeping aspect ratio intact.\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Object | fabric.Object} source\n     * @param {Number} source.height natural unscaled height of the object\n     * @param {Number} source.width natural unscaled width of the object\n     * @param {Object | fabric.Object} destination\n     * @param {Number} destination.height natural unscaled height of the object\n     * @param {Number} destination.width natural unscaled width of the object\n     * @return {Number} scale factor to apply to source to cover destination\n     */\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n     * @memberOf fabric.util\n     * @param {Array} trasnform an array with 6 numbers\n     * @return {String} transform matrix for svg\n     * @return {Object.y} Limited dimensions by Y\n     */\n    matrixToSVG: function(transform) {\n      return 'matrix(' + transform.map(function(value) {\n        return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n      }).join(' ') + ')';\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    return [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({ }, source[property]);\n          }\n          else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n  // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n  var couldUseAttachEvent = !!fabric.document.createElement('div').attachEvent;\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = function(element, eventName, handler, options) {\n    element && element.addEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = function(element, eventName, handler, options) {\n    element && element.removeEventListener(eventName, handler, couldUseAttachEvent ? false : options);\n  };\n\n  function getTouchInfo(event) {\n    var touchProp = event.changedTouches;\n    if (touchProp && touchProp[0]) {\n      return touchProp[0];\n    }\n    return event;\n  }\n\n  fabric.util.getPointer = function(event) {\n    var element = event.target,\n        scroll = fabric.util.getScrollLeftTop(element),\n        _evt = getTouchInfo(event);\n    return {\n      x: _evt.clientX + scroll.left,\n      y: _evt.clientY + scroll.top\n    };\n  };\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n    var impl = fabric.jsdomImplForWrapper(element);\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null;\n      // unsure if necessary\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = console.log;\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = console.warn;\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  function defaultEasing(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || defaultEasing,\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        // TODO: move abort call after calculation\n        // and pass (current,valuePerc, timePerc) as arguments\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        if (time > finish) {\n          onChange(endValue, 1, 1);\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        else {\n          onChange(current, valuePerc, timePerc);\n          requestAnimFrame(tick);\n        }\n      })(start);\n    });\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-dashoffset':  'strokeDashOffset',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity',\n        'clip-path':          'clipPath',\n        'clip-rule':          'clipRule',\n        'vector-effect':      'strokeUniform'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      },\n\n      fSize = 'font-size', cPath = 'clip-path';\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n  fabric.clipPaths = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'vector-effect') {\n      value = value === 'non-scaling-stroke';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = fabric.iMatrix,\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len, namespace = fabric.svgNS;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElementNS(namespace, 'g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttributeNS(namespace, attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n    parsedDim.minX = minX;\n    parsedDim.minY = minY;\n    parsedDim.viewBoxWidth = viewBoxWidth;\n    parsedDim.viewBoxHeight = viewBoxHeight;\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElementNS(fabric.svgNS, 'g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n    var clipPaths = { };\n    descendants.filter(function(el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function(el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths;\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n    gradientsAttrs.forEach(function(attr) {\n      if (referencedGradient && !gradient.hasAttribute(attr) && referencedGradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, gradientDefs = { };\n      j = elList.length;\n      while (j--) {\n        el = elList[j];\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize, parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      var cssAttrs = extend(\n        getGlobalStylesForElement(element, svgUid),\n        fabric.parseStyleAttribute(element)\n      );\n      ownAttributes = extend(\n        ownAttributes,\n        cssAttrs\n      );\n      if (cssAttrs[cPath]) {\n        element.setAttribute(cPath, cssAttrs[cPath]);\n      }\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      if (ownAttributes[fSize]) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes[fSize] = fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n      }\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // <style/> could produce `undefined`, covering this case with ''\n        var styleContents = styles[i].textContent || '';\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof fabric.window.DOMParser !== 'undefined') {\n        var parser = new fabric.window.DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions, doc) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n  this.doc = doc;\n};\n\n(function(proto) {\n  proto.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function() {\n    var _this = this;\n    this.elements.forEach(function(element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function(el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function(el, index) {\n    var klass = this.findTag(el);\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      }\n      catch (err) {\n        fabric.log(err);\n      }\n    }\n    else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n      var _options;\n      _this.resolveGradient(obj, el, 'fill');\n      _this.resolveGradient(obj, el, 'stroke');\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n      obj._removeTransformMatrix(_options);\n      _this.resolveClipPath(obj, el);\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function(obj, property, storage) {\n    var value = obj[property], regex = this.regexUrl;\n    if (!regex.test(value)) {\n      return;\n    }\n    regex.lastIndex = 0;\n    var id = regex.exec(value)[1];\n    regex.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function(obj, el, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n    if (gradientDef) {\n      var opacityAttr = el.getAttribute(property + '-opacity');\n      var gradient = fabric.Gradient.fromElement(gradientDef, obj, opacityAttr, this.options);\n      obj.set(property, gradient);\n    }\n  };\n\n  proto.createClipPathCallback = function(obj, container) {\n    return function(_newObj) {\n      _newObj._removeTransformMatrix();\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function(obj, usingElement) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element, klass, objTransformInv, container, gTransform, options;\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n      // move the clipPath tag as sibling to the real element that is using it\n      var clipPathTag = clipPath[0].parentNode;\n      var clipPathOwner = usingElement;\n      while (clipPathOwner.parentNode && clipPathOwner.getAttribute('clip-path') !== obj.clipPath) {\n        clipPathOwner = clipPathOwner.parentNode;\n      }\n      clipPathOwner.parentNode.appendChild(clipPathTag);\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(\n          element,\n          this.createClipPathCallback(obj, container),\n          this.options\n        );\n      }\n      if (container.length === 1) {\n        clipPath = container[0];\n      }\n      else {\n        clipPath = new fabric.Group(container);\n      }\n      gTransform = fabric.util.multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      if (clipPath.clipPath) {\n        this.resolveClipPath(clipPath, clipPathOwner);\n      }\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n    else {\n      // if clip-path does not resolve to any element, delete the property.\n      delete obj.clipPath;\n    }\n  };\n\n  proto.checkIfDone = function() {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function(el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el, multiplier) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha * multiplier;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * A transform matrix to apply to the gradient before painting.\n     * Imported from svg gradients, is not applied with the current transform in the center.\n     * Before this transform is applied, the origin point is at the top left corner of the object\n     * plus the addition of offsetY and offsetX.\n     * @type Number[]\n     * @default null\n     */\n    gradientTransform: null,\n\n    /**\n     * coordinates units for coords.\n     * If `pixels`, the number of coords are in the same unit of width / height.\n     * If set as `percentage` the coords are still a number, but 1 means 100% of width\n     * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n     * allowed values pixels or percentage.\n     * @type String\n     * @default 'pixels'\n     */\n    gradientUnits: 'pixels',\n\n    /**\n     * Gradient type linear or radial\n     * @type String\n     * @default 'pixels'\n     */\n    type: 'linear',\n\n    /**\n     * Constructor\n     * @param {Object} options Options object with type, coords, gradientUnits and colorStops\n     * @param {Object} [options.type] gradient type linear or radial\n     * @param {Object} [options.gradientUnits] gradient units\n     * @param {Object} [options.offsetX] SVG import compatibility\n     * @param {Object} [options.offsetY] SVG import compatibility\n     * @param {Object[]} options.colorStops contains the colorstops.\n     * @param {Object} options.coords contains the coords of the gradient\n     * @param {Number} [options.coords.x1] X coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.y1] Y coordiante of the first point for linear or of the focal point for radial\n     * @param {Number} [options.coords.x2] X coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.y2] Y coordiante of the second point for linear or of the center point for radial\n     * @param {Number} [options.coords.r1] only for radial gradient, radius of the inner circle\n     * @param {Number} [options.coords.r2] only for radial gradient, radius of the external circle\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n      options.coords || (options.coords = { });\n\n      var coords, _this = this;\n\n      // sets everything, then coords and colorstops get sets again\n      Object.keys(options).forEach(function(option) {\n        _this[option] = options[option];\n      });\n\n      if (this.id) {\n        this.id += '_' + fabric.Object.__uid++;\n      }\n      else {\n        this.id = fabric.Object.__uid++;\n      }\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientUnits: this.gradientUnits,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object, options) {\n      var coords = clone(this.coords, true), i, len, options = options || {},\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = -this.offsetX, offsetY = -this.offsetY,\n          withViewport = !!options.additionalTransform,\n          gradientUnits = this.gradientUnits === 'pixels' ? 'userSpaceOnUse' : 'objectBoundingBox';\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (gradientUnits === 'objectBoundingBox') {\n        offsetX /= object.width;\n        offsetY /= object.height;\n      }\n      else {\n        offsetX += object.width / 2;\n        offsetY += object.height / 2;\n      }\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"' + gradientUnits + '\"';\n      commonAttributes += ' gradientTransform=\"' + (withViewport ?\n        options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\n\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Object} object the fabric.Object for which the gradient is\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx, object) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len,\n          x1 = coords.x1, y1 = coords.y1, x2 = coords.x2, y2 = coords.y2,\n          stops = this.colorStops;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (object instanceof fabric.Text && this.gradientUnits === 'percentage') {\n        x1 *= object.width;\n        y1 *= object.height;\n        x2 *= object.width;\n        y2 *= object.height;\n      }\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(x1, y1, x2, y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(x1, y1, coords.r1, x2, y2, coords.r2);\n      }\n      for (i = 0, len = stops.length; i < len; i++) {\n        var color = stops[i].color,\n            opacity = stops[i].opacity,\n            offset = stops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @param {String} opacityAttr A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n     * @param {Object} svgOptions an object containing the size of the SVG in order to parse correctly graidents\n     * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n     * @param {Object.number} viewBoxWidth width part of the viewBox attribute on svg\n     * @param {Object.number} viewBoxHeight height part of the viewBox attribute on svg\n     * @param {Object.number} width width part of the svg tag if viewBox is not specified\n     * @param {Object.number} height height part of the svg tag if viewBox is not specified\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance, opacityAttr, svgOptions) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var multiplier = parseFloat(opacityAttr) / (/%$/.test(opacityAttr) ? 100 : 1);\n      multiplier = multiplier < 0 ? 0 : multiplier > 1 ? 1 : multiplier;\n      if (isNaN(multiplier)) {\n        multiplier = 1;\n      }\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') === 'userSpaceOnUse' ?\n            'pixels' : 'percentage',\n          gradientTransform = el.getAttribute('gradientTransform') || '',\n          colorStops = [],\n          coords, i, offsetX = 0, offsetY = 0,\n          transformMatrix;\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n        coords = getLinearCoords(el);\n      }\n      else {\n        type = 'radial';\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i], multiplier));\n      }\n\n      transformMatrix = fabric.parseTransformAttribute(gradientTransform);\n\n      __convertPercentUnitsToValues(instance, coords, svgOptions, gradientUnits);\n\n      if (gradientUnits === 'pixels') {\n        offsetX = -instance.left;\n        offsetY = -instance.top;\n      }\n\n      var gradient = new fabric.Gradient({\n        id: el.getAttribute('id'),\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        gradientUnits: gradientUnits,\n        gradientTransform: transformMatrix,\n        offsetX: offsetX,\n        offsetY: offsetY,\n      });\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * this function is uniquely used by Object.setGradient and is deprecated with it.\n     * @static\n     * @deprecated since 3.4.0\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      __convertPercentUnitsToValues(obj, options.coords, options.gradientUnits, {\n        // those values are to avoid errors. this function is uniquely used by\n        viewBoxWidth: 100,\n        viewBoxHeight: 100,\n      });\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function __convertPercentUnitsToValues(instance, options, svgOptions, gradientUnits) {\n    var propValue, finalValue;\n    Object.keys(options).forEach(function(prop) {\n      propValue = options[prop];\n      if (propValue === 'Infinity') {\n        finalValue = 1;\n      }\n      else if (propValue === '-Infinity') {\n        finalValue = 0;\n      }\n      else {\n        finalValue = parseFloat(options[prop], 10);\n        if (typeof propValue === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(propValue)) {\n          finalValue *= 0.01;\n          if (gradientUnits === 'pixels') {\n            // then we need to fix those percentages here in svg parsing\n            if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n              finalValue *= svgOptions.viewBoxWidth || svgOptions.width;\n            }\n            if (prop === 'y1' || prop === 'y2') {\n              finalValue *= svgOptions.viewBoxHeight || svgOptions.height;\n            }\n          }\n        }\n      }\n      options[prop] = finalValue;\n    });\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * When `false`, the shadow will scale with the object.\n     * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n     * default to false\n     * @type Boolean\n     * @default\n     */\n    nonScaling: false,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke,\n          nonScaling: this.nonScaling\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      var scaleRatio = fabric.devicePixelRatio;\n      this.__initRetinaScaling(scaleRatio, this.lowerCanvasEl, this.contextContainer);\n      if (this.upperCanvasEl) {\n        this.__initRetinaScaling(scaleRatio, this.upperCanvasEl, this.contextTop);\n      }\n    },\n\n    __initRetinaScaling: function(scaleRatio, canvas, context) {\n      canvas.setAttribute('width', this.width * scaleRatio);\n      canvas.setAttribute('height', this.height * scaleRatio);\n      context.scale(scaleRatio, scaleRatio);\n    },\n\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    cancelRequestedRender: function() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform, path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', { ctx: ctx, });\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      if (path) {\n        path.canvas = this;\n        // needed to setup a couple of variables\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({ forClipping: true });\n        this.drawClipPathOnCanvas(ctx);\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render', { ctx: ctx, });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function(ctx) {\n      var v = this.viewportTransform, path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var fill = this[property + 'Color'], object = this[property + 'Image'],\n          v = this.viewportTransform, needsVpt = this[property + 'Vpt'];\n      if (!fill && !object) {\n        return;\n      }\n      if (fill) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.width, 0);\n        ctx.lineTo(this.width, this.height);\n        ctx.lineTo(0, this.height);\n        ctx.closePath();\n        ctx.fillStyle = fill.toLive\n          ? fill.toLive(ctx, this)\n          : fill;\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        var m = fill.gradientTransform || fill.patternTransform;\n        m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        ctx.fill();\n        ctx.restore();\n      }\n      if (object) {\n        ctx.save();\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var clipPath = this.clipPath, data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude),\n      };\n      if (clipPath) {\n        data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\n      }\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this._objects.filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'background');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n      this._setSVGObjects(markup, reviver);\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'overlay');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        this.createSVGClipPathMarkup(options),\n        '</defs>\\n'\n      );\n    },\n\n    createSVGClipPathMarkup: function(options) {\n      var clipPath = this.clipPath;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(options.reviver) +\n          '</clipPath>\\n';\n      }\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['background', 'overlay'].map(function(prop) {\n            var fill = _this[prop + 'Color'];\n            if (fill && fill.toLive) {\n              var shouldTransform = _this[prop + 'Vpt'], vpt = _this.viewportTransform,\n                  object = {\n                    width: _this.width / (shouldTransform ? vpt[0] : 1),\n                    height: _this.height / (shouldTransform ? vpt[3] : 1)\n                  };\n              return fill.toSVG(\n                object,\n                { additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : '' }\n              );\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = [];\n\n      this._objects.forEach(function add(object) {\n        objects.push(object);\n        if (object._objects) {\n          object._objects.forEach(add);\n        }\n      });\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this._objects;\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property + 'Color'], vpt = this.viewportTransform, finalWidth = this.width,\n          finalHeight = this.height;\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat, iVpt = fabric.util.invertTransform(vpt), shouldInvert = this[property + 'Vpt'],\n            additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\n        markup.push(\n          '<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2,\n          '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', filler, '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n      this.backgroundImage = null;\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var canvas = this.canvas,\n        shadow = this.shadow,\n        ctx = canvas.contextTop,\n        zoom = canvas.getZoom();\n    if (canvas && canvas._isRetinaScaling()) {\n      zoom *= fabric.devicePixelRatio;\n    }\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  },\n\n  needsFullRender: function() {\n    var color = new fabric.Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Discard points that are less than `decimate` pixel distant from each other\n     * @type Number\n     * @default 0.4\n     */\n    decimate: 0.4,\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer, options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return;\n      }\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender()) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function(options) {\n      if (!this.canvas._isMainEvent(options.e)) {\n        return true;\n      }\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points = [];\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 0, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * Decimate poins array with the decimate value\n     */\n    decimatePoints: function(points, distance) {\n      if (points.length <= 2) {\n        return points;\n      }\n      var zoom = this.canvas.getZoom(), adjustedDistance = Math.pow(distance / zoom, 2),\n          i, l = points.length - 1, lastPoint = points[0], newPoints = [lastPoint],\n          cDistance;\n      for (i = 1; i < l; i++) {\n        cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\n        if (cDistance >= adjustedDistance) {\n          lastPoint = points[i];\n          newPoints.push(lastPoint);\n        }\n      }\n      if (newPoints.length === 1) {\n        newPoints.push(new fabric.Point(newPoints[0].x, newPoints[0].y));\n      }\n      return newPoints;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n      if (this.decimate) {\n        this._points = this.decimatePoints(this._points, this.decimate);\n      }\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.requestRenderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    this.dot(ctx, point);\n    ctx.restore();\n  },\n\n  dot: function(ctx, point) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      this.dot(ctx, points[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n      this._render();\n    }\n    else {\n      this.drawDot(pointer);\n    }\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified at the end of a transform or any change when statefull is true\n   * @fires object:rotated at the end of a rotation transform\n   * @fires object:scaled at the end of a scale transform\n   * @fires object:moved at the end of translation transform\n   * @fires object:skewed at the end of a skew transform\n   * @fires object:rotating while an object is being rotated from the control\n   * @fires object:scaling while an object is being scaled by controls\n   * @fires object:moving while an object is being dragged\n   * @fires object:skewing while an object is being skewed from the controls\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform before a transform is is started\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created after a drawing operation ends and the path is added\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\n   * @fires mouse:move:before on mouse move, before the inner fabric logic runs\n   * @fires mouse:up:before on mouse up, before the inner fabric logic runs\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   * @fires after:render at the end of the render process, receives the context in the callback\n   * @fires before:render at start the render process, receives the context in the callback\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * Keep track of the subTargets for Mouse Events\n     * @type fabric.Object[]\n     */\n    targets: [],\n\n    /**\n     * Keep track of the hovered target\n     * @type fabric.Object\n     * @private\n     */\n    _hoveredTarget: null,\n\n    /**\n     * hold the list of nested targets hovered\n     * @type fabric.Object[]\n     * @private\n     */\n    _hoveredTargets: [],\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      ctx.save();\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n        this.contextTopDirty = true;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          }\n          else {\n            t.mouseXSign = 1;\n          }\n        }\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          }\n          else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function(alreadySelected, corner, e /* target */) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target),\n      };\n\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      if (fabric.Textbox && by === 'x' && target instanceof fabric.Textbox) {\n        var w = target.width * (localMouse.x / _dim.x);\n        if (w >= target.getMinWidth()) {\n          scaled = w !== target.width;\n          target.set('width', w);\n          return scaled;\n        }\n        return false;\n      }\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = changeY));\n      }\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1, newScaleX, newScaleY;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform,\n          target = t.target, constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle  = target.snapAngle,\n            snapThreshold  = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        // rotation only happen here\n        target.angle = angle;\n        // Make sure the constraints apply\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function(pointer, obj, globalPointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ?\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      var retinaScaling = this.getRetinaScaling();\n      if (retinaScaling !== 1) {\n        pointer.x /= retinaScaling;\n        pointer.y /= retinaScaling;\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, ''),\n          lowerCanvasEl = this.lowerCanvasEl, upperCanvasEl = this.upperCanvasEl;\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (upperCanvasEl) {\n        upperCanvasEl.className = '';\n      }\n      else {\n        upperCanvasEl = this._createCanvasElement();\n        this.upperCanvasEl = upperCanvasEl;\n      }\n      fabric.util.addClass(upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(upperCanvasEl);\n\n      this._copyCanvasStyle(lowerCanvasEl, upperCanvasEl);\n      this._applyCanvasStyle(upperCanvasEl);\n      this.contextTop = upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',\n        '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (obj === this._hoveredTarget){\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects(), activeObject = this.getActiveObject();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: activeObject, e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return e.button && (e.button === value - 1);\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Contains the id of the touch event that owns the fabric transform\n     * @type Number\n     * @private\n     */\n    mainTouchId: null,\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    /**\n     * return an event prefix pointer or mouse.\n     * @private\n     */\n    _getEventPrefix: function () {\n      return this.enablePointerEvents ? 'pointer' : 'mouse';\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      functor(fabric.window, 'resize', this._onResize);\n      functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n      functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\n      functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\n      functor(canvasElement, 'wheel', this._onMouseWheel);\n      functor(canvasElement, 'contextmenu', this._onContextMenu);\n      functor(canvasElement, 'dblclick', this._onDoubleClick);\n      functor(canvasElement, 'dragover', this._onDragOver);\n      functor(canvasElement, 'dragenter', this._onDragEnter);\n      functor(canvasElement, 'dragleave', this._onDragLeave);\n      functor(canvasElement, 'drop', this._onDrop);\n      if (!this.enablePointerEvents) {\n        functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n      }\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n        eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onTouchStart = this._onTouchStart.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onTouchEnd = this._onTouchEnd.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n\n      var _this = this;\n      this._hoveredTargets.forEach(function(_target){\n        _this.fire('mouse:out', { target: target, e: e });\n        _target && target.fire('mouseout', { e: e });\n      });\n      this._hoveredTargets = [];\n\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      // This find target and consequent 'mouse:over' is used to\n      // clear old instances on hovered target.\n      // calling findTarget has the side effect of killing target.__corner.\n      // as a short term fix we are not firing this if we are currently transforming.\n      // as a long term fix we need to separate the action of finding a target with the\n      // side effects we added to it.\n      if (!this.currentTransform && !this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n        this._hoveredTargets = [];\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * Return a the id of an event.\n     * returns either the pointerId or the identifier or 0 for the mouse event\n     * @private\n     * @param {Event} evt Event object\n     */\n    getPointerId: function(evt) {\n      var changedTouches = evt.changedTouches;\n\n      if (changedTouches) {\n        return changedTouches[0] && changedTouches[0].identifier;\n      }\n\n      if (this.enablePointerEvents) {\n        return evt.pointerId;\n      }\n\n      return -1;\n    },\n\n    /**\n     * Determines if an event has the id of the event that is considered main\n     * @private\n     * @param {evt} event Event object\n     */\n    _isMainEvent: function(evt) {\n      if (evt.isPrimary === true) {\n        return true;\n      }\n      if (evt.isPrimary === false) {\n        return false;\n      }\n      if (evt.type === 'touchend' && evt.touches.length === 0) {\n        return true;\n      }\n      if (evt.changedTouches) {\n        return evt.changedTouches[0].identifier === this.mainTouchId;\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchStart: function(e) {\n      e.preventDefault();\n      if (this.mainTouchId === null) {\n        this.mainTouchId = this.getPointerId(e);\n      }\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      addListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      // Unbind mousedown to prevent double triggers from touch devices\n      removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onTouchEnd: function(e) {\n      if (e.touches.length > 0) {\n        // if there are still touches stop here\n        return;\n      }\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      this.mainTouchId = null;\n      var eventTypePrefix = this._getEventPrefix();\n      removeListener(fabric.document, 'touchend', this._onTouchEnd, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      var _this = this;\n      if (this._willAddMouseDown) {\n        clearTimeout(this._willAddMouseDown);\n      }\n      this._willAddMouseDown = setTimeout(function() {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\n        _this._willAddMouseDown = 0;\n      }, 400);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this._getEventPrefix();\n      if (this._isMainEvent(e)) {\n        removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n        removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n        addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function(target) {\n      var activeObject = this._activeObject;\n\n      if (\n        !!activeObject !== !!target ||\n        (activeObject && target && (activeObject !== target))\n      ) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      }\n      else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector, shouldRender = false,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      // reset the target information about which corner is selected\n      target && (target.__corner = 0);\n      if (shouldRender) {\n        this.requestRenderAll();\n      }\n      else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n          this._fire(eventName, options);\n        }\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer, { e: e, pointer: pointer });\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer, { e: e, pointer: pointer });\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      var pointer = this.getPointer(e);\n      this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({ e: e, pointer: pointer });\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n      // determine if it's a drag or rotate case\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will define whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n\n      if (!this._isMainEvent(e)) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._pointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      var _hoveredTarget = this._hoveredTarget,\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _hoveredTarget,\n        evtOut: 'mouseout',\n        canvasEvtOut: 'mouse:out',\n        evtIn: 'mouseover',\n        canvasEvtIn: 'mouse:over',\n      });\n      for (var i = 0; i < length; i++){\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'mouseout',\n          evtIn: 'mouseover',\n        });\n      }\n      this._hoveredTarget = target;\n      this._hoveredTargets = this.targets.concat();\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      var _draggedoverTarget = this._draggedoverTarget,\n          _hoveredTargets = this._hoveredTargets, targets = this.targets,\n          length = Math.max(_hoveredTargets.length, targets.length);\n\n      this.fireSyntheticInOutEvents(target, e, {\n        oldTarget: _draggedoverTarget,\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n      for (var i = 0; i < length; i++) {\n        this.fireSyntheticInOutEvents(targets[i], e, {\n          oldTarget: _hoveredTargets[i],\n          evtOut: 'dragleave',\n          evtIn: 'dragenter',\n        });\n      }\n      this._draggedoverTarget = target;\n    },\n\n    /**\n     * Manage the synthetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSyntheticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = config.oldTarget, outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n            target: transform.target,\n            e: e,\n            transform: transform,\n            pointer: pointer\n          };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', options);\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current transform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse position y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        if (target.subTargetCheck){\n          // hoverCursor should come from top-most subTarget,\n          // so we walk the array backwards\n          this.targets.concat().reverse().map(function(_target){\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n        }\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      // avoid multi select when shift click on a corner\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        this._hoveredTargets = this.targets.concat();\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n        this._hoveredTargets = this.targets.concat();\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      // ISSUE 4115: should we consider subTargets here?\n      // this._hoveredTargets = [];\n      // this._hoveredTargets = this.targets.concat();\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(e),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      if (group.length > 1) {\n        group = group.filter(function(object) {\n          return !object.onSelect({ e: e });\n        });\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is useful to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || { };\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalRetina = this.enableRetinaScaling,\n          canvasEl = fabric.util.createCanvasElement(),\n          originalContextTop = this.contextTop;\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.contextTop = null;\n      this.enableRetinaScaling = false;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.renderCanvas(canvasEl.getContext('2d'), this._objects);\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.interactive = originalInteractive;\n      this.enableRetinaScaling = originalRetina;\n      this.contextTop = originalContextTop;\n      return canvasEl;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        clipPath = serialized.clipPath,\n        renderOnAddRemove = this.renderOnAddRemove;\n\n    this.renderOnAddRemove = false;\n\n    delete serialized.clipPath;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        if (clipPath) {\n          _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\n            _this.clipPath = enlivenedCanvasClip[0];\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n          });\n        }\n        else {\n          _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n        }\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Array} restored canvas objects\n   * @param {Function} cached renderOnAddRemove callback\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  __setupCanvas: function(serialized, enlivenedObjects, renderOnAddRemove, callback) {\n    var _this = this;\n    enlivenedObjects.forEach(function(obj, index) {\n      // we splice the array just in case some custom classes restored from JSON\n      // will add more object to canvas at canvas init.\n      _this.insertAt(obj, index);\n    });\n    this.renderOnAddRemove = renderOnAddRemove;\n    // remove parts i cannot set as options\n    delete serialized.objects;\n    delete serialized.backgroundImage;\n    delete serialized.overlayImage;\n    delete serialized.background;\n    delete serialized.overlay;\n    // this._initOptions does too many things to just\n    // call it. Normally loading an Object from JSON\n    // create the Object instance. Here the Canvas is\n    // already an instance and we are just loading things over it\n    this._setOptions(serialized);\n    this.renderAll();\n    callback && callback();\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.util.createCanvasElement();\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * bigger number will make a thicker border\n     * border is 1, so this is basically a border tickness\n     * since there is no way to change the border itself.\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * This property has been depreacted. Since caching and and qrDecompose this\n     * property can be handled with the standard top,left,scaleX,scaleY,angle and skewX.\n     * A documentation example on how to parse and merge a transformMatrix will be provided before\n     * completely removing it in fabric 4.0\n     * If you are starting a project now, DO NOT use it.\n     * @deprecated since 3.2.0\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * When `false`, object is not cached unless necessary ( clipPath )\n     * default to true\n     * @since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform:              false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst clipPath strokeUniform'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\n    ).split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var objectScale = this.getTotalObjectScaling(),\n          // caculate dimensions without skewing\n          dim = this._getTransformedDimensions(0, 0),\n          neededX = dim.x * objectScale.scaleX / this.scaleX,\n          neededY = dim.y * objectScale.scaleY / this.scaleY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly creating problem\n        // in situation in which the cache canvas gets an upper limit\n        // also objectScale contains already scaleX and scaleY\n        width: neededX + ALIASING_LIMIT,\n        height: neededY + ALIASING_LIMIT,\n        zoomX: objectScale.scaleX,\n        zoomY: objectScale.scaleY,\n        x: neededX,\n        y: neededY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      var targetCanvas = this.canvas;\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x / 2;\n        drawingHeight = dims.y / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeDashOffset:         this.strokeDashOffset,\n            strokeLineJoin:           this.strokeLineJoin,\n            // TODO: add this before release\n            // strokeUniform:            this.strokeUniform,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\n          };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (prop === 'left' || prop === 'top') {\n          return;\n        }\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var options = fabric.util.qrDecompose(this.calcTransformMatrix());\n      return { scaleX: Math.abs(options.scaleX), scaleY: Math.abs(options.scaleY) };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function() {\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 ||\n        (this.width === 0 && this.height === 0 && this.strokeWidth === 0) ||\n        !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    renderCache: function(options) {\n      options = options || {};\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * return true if the object will draw a stroke\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when stroke happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the stroke is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasStroke: function() {\n      return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\n    },\n\n    /**\n     * return true if the object will draw a fill\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when fill happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the fill is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasFill: function() {\n      return this.fill && this.fill !== 'transparent';\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns Boolean\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' &&\n        this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\n        return true;\n      }\n      if (this.clipPath) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.needsItsOwnCache() || (\n        this.objectCaching &&\n        (!this.group || !this.group.isOnACache())\n      );\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function(ctx) {\n      var path = this.clipPath;\n      ctx.save();\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      }\n      else {\n        ctx.globalCompositeOperation = 'destination-in';\n      }\n      //ctx.scale(1 / 2, 1 / 2);\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx, forClipping) {\n      var originalFill = this.fill, originalStroke = this.stroke;\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n        this._setClippingProperties(ctx);\n      }\n      else {\n        this._renderBackground(ctx);\n        this._setStrokeStyles(ctx, this);\n        this._setFillStyles(ctx, this);\n      }\n      this._render(ctx);\n      this._drawClipPath(ctx);\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n\n    _drawClipPath: function(ctx) {\n      var path = this.clipPath;\n      if (!path) { return; }\n      // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({ forClipping: true });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty ||\n          (this.clipPath && this.clipPath.absolutePositioned) ||\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\n        ) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    _setClippingProperties: function(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray || dashArray.length === 0) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow, canvas = this.canvas, scaling,\n          multX = (canvas && canvas.viewportTransform[0]) || 1,\n          multY = (canvas && canvas.viewportTransform[3]) || 1;\n      if (shadow.nonScaling) {\n        scaling = { scaleX: 1, scaleY: 1 };\n      }\n      else {\n        scaling = this.getObjectScaling();\n      }\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n\n      if (filler.gradientUnits === 'percentage') {\n        ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n      }\n      else {\n        ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n      }\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * function that actually render something on the context.\n     * empty here to allow Obects to work on tests to benchmark fabric functionalites\n     * not related to rendering\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(/* ctx */) {\n\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      if (this.strokeUniform && this.group) {\n        var scaling = this.getObjectScaling();\n        ctx.scale(1 / scaling.scaleX, 1 / scaling.scaleY);\n      }\n      else if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      if (this.stroke.toLive && this.stroke.gradientUnits === 'percentage') {\n        // need to transform gradient in a pattern.\n        // this is a slow process. If you are hitting this codepath, and the object\n        // is not using caching, you should consider switching it on.\n        // we need a canvas as big as the current object caching canvas.\n        this._applyPatternForTransformedGradient(ctx, this.stroke);\n      }\n      else {\n        this._applyPatternGradientTransform(ctx, this.stroke);\n      }\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function try to patch the missing gradientTransform on canvas gradients.\n     * transforming a context to transform the gradient, is going to transform the stroke too.\n     * we want to transform the gradient but not the stroke operation, so we create\n     * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n     * this method has drwabacks: is slow, is in low resolution, needs a patch for when the size\n     * is limited.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {fabric.Gradient} filler a fabric gradient instance\n     */\n    _applyPatternForTransformedGradient: function(ctx, filler) {\n      var dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          pCanvas = fabric.util.createCanvasElement(), pCtx, retinaScaling = this.canvas.getRetinaScaling(),\n          width = dims.x / this.scaleX / retinaScaling, height = dims.y / this.scaleY / retinaScaling;\n      pCanvas.width = width;\n      pCanvas.height = height;\n      pCtx = pCanvas.getContext('2d');\n      pCtx.beginPath(); pCtx.moveTo(0, 0); pCtx.lineTo(width, 0); pCtx.lineTo(width, height);\n      pCtx.lineTo(0, height); pCtx.closePath();\n      pCtx.translate(width / 2, height / 2);\n      pCtx.scale(\n        dims.zoomX / this.scaleX / retinaScaling,\n        dims.zoomY / this.scaleY / retinaScaling\n      );\n      this._applyPatternGradientTransform(pCtx, filler);\n      pCtx.fillStyle = filler.toLive(ctx);\n      pCtx.fill();\n      ctx.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2);\n      ctx.scale(\n        retinaScaling * this.scaleX / dims.zoomX,\n        retinaScaling * this.scaleY / dims.zoomY\n      );\n      ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat');\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {HTMLCanvasElement} Returns DOM element <canvas> with the fabric.Object\n     */\n    toCanvasElement: function(options) {\n      options || (options = { });\n\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\n          originalGroup = this.group,\n          originalShadow = this.shadow, abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n      delete this.group;\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n          boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow, scaling,\n          shadowOffset = { x: 0, y: 0 }, shadowBlur,\n          width, height;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n        if (shadow.nonScaling) {\n          scaling = { scaleX: 1, scaleY: 1 };\n        }\n        else {\n          scaling = this.getObjectScaling();\n        }\n        // consider non scaling shadow.\n        shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * (abs(scaling.scaleX));\n        shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * (abs(scaling.scaleY));\n      }\n      width = boundingRect.width + shadowOffset.x;\n      height = boundingRect.height + shadowOffset.y;\n      // if the current width/height is not an integer\n      // we need to make it so.\n      el.width = Math.ceil(width);\n      el.height = Math.ceil(height);\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.set('canvas', originalCanvas);\n      if (originalGroup) {\n        this.group = originalGroup;\n      }\n      this.set(origParams).setCoords();\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * percentages for x1,x2,y1,y2,r1,r2 together with gradientUnits 'pixels', are not supported.\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.4.0\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n      gradient.gradientUnits = options.gradientUnits || 'pixels';\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.5.0\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function(options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @deprecated since 3.5.0\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @deprecated since 3.5.0\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are useful to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the object contains the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intended as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object's bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculates and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2,\n          tl = transformPoint({ x: -w, y: -h }, finalMatrix),\n          tr = transformPoint({ x: w, y: -h }, finalMatrix),\n          bl = transformPoint({ x: -w, y: h }, finalMatrix),\n          br = transformPoint({ x: w, y: h }, finalMatrix);\n      if (!absolute) {\n        var padding = this.padding, angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\n            cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      }\n\n      // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, useful in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      return fabric.util.calcRotateMatrix(this);\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties.\n     * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n     * @return {Array} transform matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties, this matrix does not include the group transformation\n     * @return {Array} transform matrix for the object\n     */\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var tMatrix = this._calcTranslateMatrix();\n      this.translateX = tMatrix[4];\n      this.translateY = tMatrix[5];\n      cache.key = key;\n      cache.value = fabric.util.composeMatrix(this);\n      return cache.value;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @deprecated since 3.4.0, please use fabric.util._calcDimensionsTransformMatrix\n     * not including or including flipX, flipY to emulate the flipping boolean\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      return fabric.util.calcDimensionsMatrix({\n        skewX: skewX,\n        skewY: skewY,\n        scaleX: this.scaleX * (flipping && this.flipX ? -1 : 1),\n        scaleY: this.scaleY * (flipping && this.flipY ? -1 : 1)\n      });\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * The skewX and skewY parameters are used in the skewing logic path and\n     * do not provide something useful to common use cases.\n     * @param {Number} [skewX], a value to override current skewX\n     * @param {Number} [skewY], a value to override current skewY\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(), dimX, dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      }\n      else {\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n      if (noSkew) {\n        return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\n      }\n      else {\n        dimX /= 2;\n        dimY /= 2;\n      }\n      var points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          transformMatrix = fabric.util.calcDimensionsMatrix({\n            scaleX: this.scaleX,\n            scaleY: this.scaleY,\n            skewX: skewX,\n            skewY: skewY,\n          }),\n          bbox = fabric.util.makeBoundingBoxFromPoints(points, transformMatrix);\n      return this._finalizeDimensions(bbox.width, bbox.height);\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDimensions: function(width, height) {\n      return this.strokeUniform ?\n        { x: width + this.strokeWidth, y: height + this.strokeWidth }\n        :\n        { x: width, y: height };\n    },\n    /*\n     * Calculate object dimensions for controls, including padding and canvas zoom.\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else if (this.canvas) {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else if (this.canvas) {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else if (this.canvas) {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else if (this.canvas) {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else if (this.canvas) {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      return ['overline', 'underline', 'line-through'].filter(function(decoration) {\n        return style[decoration.replace('-', '')];\n      }).join(' ');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function() {\n      return [\n        this.id ? 'id=\"' + this.id + '\" ' : '',\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\n      return svgTransform +\n        (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' ' + fabric.util.matrixToSVG(this.transformMatrix) : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(reviver), { reviver: reviver });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [\n            this.getSvgTransform(true, additionalTransform),\n            this.getSvgCommons(),\n          ].join(''),\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = options.withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = clipPath && clipPath.absolutePositioned,\n          stroke = this.stroke, fill = this.fill, shadow = this.shadow,\n          commonPieces, markup = [], clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          clipPath.toClipPathSVG(reviver) +\n          '</clipPath>\\n';\n      }\n      if (absoluteClipPath) {\n        markup.push(\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\n        );\n      }\n      markup.push(\n        '<g ',\n        this.getSvgTransform(false),\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n        ' >\\n'\n      );\n      commonPieces = [\n        styleInfo,\n        vectorEffect,\n        noStyle ? '' : this.addPaintOrder(), ' ',\n        additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\n      ].join('');\n      objectMarkup[index] = commonPieces;\n      if (fill && fill.toLive) {\n        markup.push(fill.toSVG(this));\n      }\n      if (stroke && stroke.toLive) {\n        markup.push(stroke.toSVG(this));\n      }\n      if (shadow) {\n        markup.push(shadow.toSVG(this));\n      }\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n        if (key === 'canvas') {\n          continue;\n        }\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = { x: this.width, y: this.height },\n          matrix = fabric.util.composeMatrix({\n            scaleX: options.scaleX,\n            scaleY: options.scaleY,\n            skewX: options.skewX\n          }),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = this.strokeWidth,\n          borderScaleFactor = this.borderScaleFactor,\n          width =\n            wh.x + strokeWidth * (this.strokeUniform ? this.canvas.getZoom() : options.scaleX) + borderScaleFactor,\n          height =\n            wh.y + strokeWidth * (this.strokeUniform ? this.canvas.getZoom() : options.scaleY) + borderScaleFactor;\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var p = this.calcLinePoints();\n      return [\n        '<line ', 'COMMON_PARTS',\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString, x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        svgString = [\n          '<circle ', 'COMMON_PARTS',\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" />\\n'\n        ];\n      }\n      else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = [\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" ', 'COMMON_PARTS', ' />\\n'\n        ];\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ].join(',');\n      return [\n        '<polygon ', 'COMMON_PARTS',\n        'points=\"', points,\n        '\" />'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      return [\n        '<ellipse ', 'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var x = -this.width / 2, y = -this.height / 2;\n      return [\n        '<rect ', 'COMMON_PARTS',\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    parsedAttributes.height  = parsedAttributes.height || 0;\n    parsedAttributes.width  = parsedAttributes.width || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._setPositionDimensions(options);\n    },\n\n    _setPositionDimensions: function(options) {\n      var calcDim = this._calcDimensions(options), correctLeftTop;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      if (!options.fromSVG) {\n        correctLeftTop = this.translateToGivenOrigin(\n          { x: calcDim.left - this.strokeWidth / 2, y: calcDim.top - this.strokeWidth / 2 },\n          'left',\n          'top',\n          this.originX,\n          this.originY\n        );\n      }\n      if (typeof options.left === 'undefined') {\n        this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\n      }\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      return [\n        '<' + this.type + ' ', 'COMMON_PARTS',\n        'points=\"', points.join(''),\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElementGenerator = function(_class) {\n    return function(element, callback, options) {\n      if (!element) {\n        return callback(null);\n      }\n      options || (options = { });\n\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n          parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\n      parsedAttributes.fromSVG = true;\n      callback(new fabric[_class](points, extend(parsedAttributes, options)));\n    };\n  };\n\n  fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      fabric.Polyline.prototype._setPositionDimensions.call(this, options);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n      });\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var path = this.path.map(function(path) {\n        return path.join(' ');\n      }).join(' ');\n      return [\n        '<path ', 'COMMON_PARTS',\n        'd=\"', path,\n        '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      ];\n    },\n\n    _getOffsetTransform: function() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\n          toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return '\\t' + this._createBaseClipPathSVGMarkup(\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\n      );\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = fabric.rePathCommand,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: deltaX,\n        height: deltaY\n      };\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    parsedAttributes.fromSVG = true;\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click, mouseover, mouseout events & hoverCursor should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        }\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n      var objsToObject = this._objects.map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group is already cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = fabric.Object.prototype.shouldCache.call(this);\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (fabric.Object.prototype.willDrawShadow.call(this)) {\n        return true;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0, left = minXY.x || 0,\n          width = (maxXY.x - minXY.x) || 0,\n          height = (maxXY.y - minXY.y) || 0;\n      this.width = width;\n      this.height = height;\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function(reviver) {\n      var svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n      }\n      svgString.push('</g>\\n');\n      return svgString;\n    },\n\n    /**\n     * Returns styles-string for svg-export, specific version for group\n     * @return {String}\n     */\n    getSvgStyles: function() {\n      var opacity = typeof this.opacity !== 'undefined' && this.opacity !== 1 ?\n            'opacity: ' + this.opacity + ';' : '',\n          visibility = this.visible ? '' : ' visibility: hidden;';\n      return [\n        opacity,\n        this.getSvgFilter(),\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    var objects = object.objects,\n        options = fabric.util.object.clone(object, true);\n    delete options.objects;\n    if (typeof objects === 'string') {\n      // it has to be an url or something went wrong.\n      fabric.loadSVGFromURL(objects, function (elements) {\n        var group = fabric.util.groupSVGElements(elements, object, objects);\n        group.set(options);\n        callback && callback(group);\n      });\n      return;\n    }\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects.concat();\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function(object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function(key) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function() {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString = [], imageMarkup = [], strokeSvg,\n          x = -this.width / 2, y = -this.height / 2, clipPath = '';\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this._element.width || this._element.naturalWidth,\n        '\" height=\"', this._element.height || this._element.height,\n        '\"', clipPath,\n        '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = [\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        ];\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      }\n      else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        }\n        else {\n          return element.src;\n        }\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback && callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\n      this.set('dirty', true);\n\n      // needs to clear out or WEBGL will not resize correctly\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return this.needsItsOwnCache();\n    },\n\n    _renderFill: function(ctx) {\n      var elementToDraw = this._element,\n          w = this.width, h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2, y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * needed to check if image needs resize\n     * @private\n     */\n    _needsResize: function() {\n      var scale = this.getTotalObjectScaling();\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined', canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      if (fabric.forceGLPutImageData) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n        return;\n      }\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\n      if (!gl) {\n        return gpuInfo;\n      }\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image = fabric.Image || { };\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      else {\n        return _class[main] === this[main];\n      }\n    }\n    else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function() {\n      return false;\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      else {\n        context.clearRect(0, 0, width, height);\n      }\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n\n    isNeutralState: function() {\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\n    }\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * It return always for text and Itext.\n     * @return Number\n     */\n    missingNewlineOffset: function() {\n      return 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} _char, char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line index number\n     * @param {Number} _char the character index number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, _char) {\n      return this.getValueOfPropertyAt(line, _char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n\n      ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\n              boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              top + this.offsets[type] * size + dy,\n              boxWidth,\n              this.fontSize / 15\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          top + this.offsets[type] * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 || family.indexOf(',') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        // verify if this can be fixed in JSDOM\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * This function is used to detect if a text will use a particular property or not.\n     * @param {String} property to check for\n     * @param {Number} lineIndex to check the style on\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { 0: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex);\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\n          len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + this.missingNewlineOffset(i);\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @return {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return !!this.styles[lineIndex];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      this.styles[lineIndex] = {};\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this.transform(ctx);\n      this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n      this._clearTextArea(ctx);\n      skipRestore || ctx.restore();\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     * it does on the contextTop. If contextTop is not available, do nothing.\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas || !this.canvas.contextTop) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(),\n          ctx = this.canvas.contextTop;\n      this.clearContextTop(true);\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var text = this._text,\n          index     = this._reSpace.test(text[selectionStart]) ? selectionStart - 1 : selectionStart,\n          _char     = text[index],\n          // wrong\n          reNonWord = fabric.reNonWord;\n\n      while (!reNonWord.test(_char) && index > 0 && index < text.length) {\n        index += direction;\n        _char = text[index];\n      }\n      if (reNonWord.test(_char)) {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPosition),\n          cursorLocation = this.get2DCursorLocation(desiredPosition),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          retinaScaling = this.canvas.getRetinaScaling(),\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width / retinaScaling,\n          upperCanvasHeight = upperCanvas.height / retinaScaling,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        selectable: this.selectable,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.selectable = this._savedProps.selectable;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      var hiddenTextarea = this.hiddenTextarea;\n      this.selected = false;\n      this.isEditing = false;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (hiddenTextarea) {\n        hiddenTextarea.blur && hiddenTextarea.blur();\n        hiddenTextarea.parentNode && hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n      }\n      this.hiddenTextarea = null;\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objects\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLength = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLength++;\n          addedLines[linesLength] = 0;\n        }\n        else {\n          addedLines[linesLength]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLength && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\n      for (var i = 1; i < linesLength; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the new position of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler: function(options) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler: function(options) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('tripleclick', this.tripleClickHandler);\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    // we want to avoid that an object that was selected and then becomes unselectable,\n    // may trigger editing mode in some way.\n    this.selected = this === this.canvas._activeObject;\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable || this.group ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    if (!fabric.disableStyleCopyPaste) {\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    }\n    else {\n      fabric.copiedTextStyle = null;\n    }\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length\n     + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function() {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      return this._wrapSVGTextAndBg(textAndBg);\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(\n        this._toSVG(),\n        { reviver: reviver, noStyle: true, withShadow: true }\n      );\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n'\n      ];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it on a specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false,\n          map = this._styleMap[lineIndex], mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * probably broken need a fix\n     * Returns the real style line that correspond to the wrapped lineIndex line\n     * Used just to verify if the line does exist or not.\n     * @param {Number} lineIndex\n     * @returns {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return !!this.styles[map.line];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = {};\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n      // fix a difference between split and graphemeSplit\n      if (words.length === 0) {\n        words.push([]);\n      }\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // if using splitByGrapheme words are already in graphemes.\n        word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * @return Number\n     */\n    missingNewlineOffset: function(lineIndex) {\n      if (this.splitByGrapheme) {\n        return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n      }\n      return 1;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    _removeExtraneousStyles: function() {\n      var linesToKeep = {};\n      for (var prop in this._styleMap) {\n        if (this._textLines[prop]) {\n          linesToKeep[this._styleMap[prop].line] = 1;\n        }\n      }\n      for (var prop in this.styles) {\n        if (!linesToKeep[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fabric/dist/fabric.js\n// module id = tsU9\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = ujcs\n// module chunks = 0"],"sourceRoot":""}